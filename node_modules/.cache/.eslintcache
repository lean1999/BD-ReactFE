[{"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\index.js":"1","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\redux.js":"2","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\serviceWorker.js":"3","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\App.js":"4","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\hoc\\IntlProviderWrapper.js":"5","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\hoc\\authentication.js":"6","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\routes\\Home.js":"7","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\routes\\Doctor.js":"8","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Auth\\Login.js":"9","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\components\\CustomScrollbars.js":"10","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\HomePage.js":"11","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Doctor\\DetailDoctor.js":"12","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Specialty\\DetailSpecialty.js":"13","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\VerifyEmail.js":"14","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\routes\\System.js":"15","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Clinic\\DetailClinic.js":"16","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\reducers\\rootReducer.js":"17","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\actions\\actionTypes.js":"18","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\Doctor.js":"19","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\ManageAdmin.js":"20","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\index.js":"21","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\HomeHeader.js":"22","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Doctor\\DoctorSchedule.js":"23","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Footer.js":"24","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Doctor\\DoctorExtraInfor.js":"25","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Doctor\\ProfileDoctor.js":"26","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\ManageDoctor.js":"27","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\UserRedux.js":"28","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\UserManage.js":"29","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\ManagePatient.js":"30","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\ManagePrescription.js":"31","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\ManageSchedule.js":"32","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\services\\userService.js":"33","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Header\\Header.js":"34","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\MedicalFacility.js":"35","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\Specialty.js":"36","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\About.js":"37","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\OutStandingDoctor.js":"38","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\HomeFooter.js":"39","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\SocialPlugin\\LikeAndShare.js":"40","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\HandBook.js":"41","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\SocialPlugin\\Comment.js":"42","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Doctor\\Modal\\BookingModal.js":"43","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Clinic\\ManageClinic.js":"44","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Specialty\\ManageSpecialty.js":"45","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\reducers\\adminReducer.js":"46","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\reducers\\userReducer.js":"47","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\reducers\\appReducer.js":"48","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\ListPatienShedule.js":"49","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\ListPatientExam.js":"50","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\ManageHandBook.js":"51","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\actions\\index.js":"52","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\ToastUtil.js":"53","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\ModelEditUser.js":"54","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\axios.js":"55","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\components\\Input\\DatePicker.js":"56","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\components\\Navigator.js":"57","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Header\\menuApp.js":"58","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\CreatePrecription.js":"59","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\components\\Formating\\FormattedDate.js":"60","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\PrescriptionModel.js":"61","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\actions\\adminActions.js":"62","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\actions\\appActions.js":"63","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\actions\\userActions.js":"64","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\components\\CustomToast.js":"65","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\WatchPatientModel.js":"66","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\RemedyModel.js":"67","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\ModelUser.js":"68","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\emitter.js":"69","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\TableManageUser.js":"70","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\constant.js":"71","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\LanguageUtils.js":"72","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\KeyCodeUtils.js":"73","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\CommonUtils.js":"74","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\WatchPrescripttionModel.js":"75","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\index.js":"76","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\redux.js":"77","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\serviceWorker.js":"78","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\App.js":"79","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\hoc\\IntlProviderWrapper.js":"80","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\hoc\\authentication.js":"81","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\routes\\Home.js":"82","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\routes\\Doctor.js":"83","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\routes\\System.js":"84","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\components\\CustomScrollbars.js":"85","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\VerifyEmail.js":"86","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Auth\\Login.js":"87","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\HomePage.js":"88","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Doctor\\DetailDoctor.js":"89","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Specialty\\DetailSpecialty.js":"90","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Clinic\\DetailClinic.js":"91","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\actions\\actionTypes.js":"92","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\reducers\\rootReducer.js":"93","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\Doctor.js":"94","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\ManageAdmin.js":"95","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\index.js":"96","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\UserManage.js":"97","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\UserRedux.js":"98","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\ManageDoctor.js":"99","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\HomeHeader.js":"100","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Footer.js":"101","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Doctor\\DoctorSchedule.js":"102","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Doctor\\ProfileDoctor.js":"103","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Doctor\\DoctorExtraInfor.js":"104","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\ManageSchedule.js":"105","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\ManagePrescription.js":"106","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\ManagePatient.js":"107","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Specialty\\ManageSpecialty.js":"108","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Header\\Header.js":"109","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Clinic\\ManageClinic.js":"110","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\Specialty.js":"111","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\services\\userService.js":"112","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\OutStandingDoctor.js":"113","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\HandBook.js":"114","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\MedicalFacility.js":"115","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\About.js":"116","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\SocialPlugin\\Comment.js":"117","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\SocialPlugin\\LikeAndShare.js":"118","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Doctor\\Modal\\BookingModal.js":"119","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\ListPatienShedule.js":"120","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\ListPatientExam.js":"121","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\ManageHandBook.js":"122","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\reducers\\userReducer.js":"123","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\reducers\\adminReducer.js":"124","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\reducers\\appReducer.js":"125","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\HomeFooter.js":"126","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\actions\\index.js":"127","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\LanguageUtils.js":"128","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\ToastUtil.js":"129","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\ModelEditUser.js":"130","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\axios.js":"131","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\components\\Input\\DatePicker.js":"132","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Header\\menuApp.js":"133","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\components\\Navigator.js":"134","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\CreatePrecription.js":"135","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\actions\\adminActions.js":"136","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\actions\\userActions.js":"137","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\components\\CustomToast.js":"138","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\actions\\appActions.js":"139","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\RemedyModel.js":"140","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\WatchPatientModel.js":"141","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\WatchPrescripttionModel.js":"142","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\PrescriptionModel.js":"143","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\constant.js":"144","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\components\\Formating\\FormattedDate.js":"145","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\TableManageUser.js":"146","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\emitter.js":"147","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\ModelUser.js":"148","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\KeyCodeUtils.js":"149","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\CommonUtils.js":"150"},{"size":926,"mtime":1672627517336,"results":"151","hashOfConfig":"152"},{"size":1477,"mtime":1672627517336,"results":"153","hashOfConfig":"152"},{"size":5086,"mtime":1672627517336,"results":"154","hashOfConfig":"152"},{"size":4448,"mtime":1672627517283,"results":"155","hashOfConfig":"152"},{"size":1095,"mtime":1672627517336,"results":"156","hashOfConfig":"152"},{"size":1798,"mtime":1672627517336,"results":"157","hashOfConfig":"152"},{"size":581,"mtime":1672627517336,"results":"158","hashOfConfig":"152"},{"size":1400,"mtime":1672627517336,"results":"159","hashOfConfig":"152"},{"size":4807,"mtime":1672627517283,"results":"160","hashOfConfig":"152"},{"size":3173,"mtime":1672627517267,"results":"161","hashOfConfig":"152"},{"size":1370,"mtime":1672627517298,"results":"162","hashOfConfig":"152"},{"size":4003,"mtime":1672796054819,"results":"163","hashOfConfig":"152"},{"size":5877,"mtime":1672627517305,"results":"164","hashOfConfig":"152"},{"size":2227,"mtime":1672793540630,"results":"165","hashOfConfig":"152"},{"size":1796,"mtime":1672627517336,"results":"166","hashOfConfig":"152"},{"size":3868,"mtime":1672627517305,"results":"167","hashOfConfig":"152"},{"size":1028,"mtime":1672627517352,"results":"168","hashOfConfig":"152"},{"size":1856,"mtime":1672627517352,"results":"169","hashOfConfig":"152"},{"size":3382,"mtime":1672627517320,"results":"170","hashOfConfig":"152"},{"size":20966,"mtime":1672747686491,"results":"171","hashOfConfig":"152"},{"size":259,"mtime":1672627517367,"results":"172","hashOfConfig":"152"},{"size":8543,"mtime":1672627517298,"results":"173","hashOfConfig":"152"},{"size":7615,"mtime":1672810186639,"results":"174","hashOfConfig":"152"},{"size":6974,"mtime":1672627517283,"results":"175","hashOfConfig":"152"},{"size":5647,"mtime":1672627517305,"results":"176","hashOfConfig":"152"},{"size":5607,"mtime":1672627517305,"results":"177","hashOfConfig":"152"},{"size":17351,"mtime":1672627517320,"results":"178","hashOfConfig":"152"},{"size":15821,"mtime":1672627517320,"results":"179","hashOfConfig":"152"},{"size":5023,"mtime":1672627517336,"results":"180","hashOfConfig":"152"},{"size":9543,"mtime":1672633998791,"results":"181","hashOfConfig":"152"},{"size":9927,"mtime":1672763866953,"results":"182","hashOfConfig":"152"},{"size":7024,"mtime":1672627517336,"results":"183","hashOfConfig":"152"},{"size":4514,"mtime":1672753251995,"results":"184","hashOfConfig":"152"},{"size":2769,"mtime":1672627517283,"results":"185","hashOfConfig":"152"},{"size":2566,"mtime":1672627517298,"results":"186","hashOfConfig":"152"},{"size":2749,"mtime":1672627517305,"results":"187","hashOfConfig":"152"},{"size":1817,"mtime":1672627517298,"results":"188","hashOfConfig":"152"},{"size":3474,"mtime":1672627517305,"results":"189","hashOfConfig":"152"},{"size":697,"mtime":1672627517298,"results":"190","hashOfConfig":"152"},{"size":2470,"mtime":1672627517305,"results":"191","hashOfConfig":"152"},{"size":2046,"mtime":1672627517298,"results":"192","hashOfConfig":"152"},{"size":2282,"mtime":1672627517305,"results":"193","hashOfConfig":"152"},{"size":14312,"mtime":1672765555711,"results":"194","hashOfConfig":"152"},{"size":3982,"mtime":1672627517320,"results":"195","hashOfConfig":"152"},{"size":3508,"mtime":1672627517336,"results":"196","hashOfConfig":"152"},{"size":2745,"mtime":1672627517352,"results":"197","hashOfConfig":"152"},{"size":703,"mtime":1672627517352,"results":"198","hashOfConfig":"152"},{"size":970,"mtime":1672627517352,"results":"199","hashOfConfig":"152"},{"size":2925,"mtime":1672627517320,"results":"200","hashOfConfig":"152"},{"size":2919,"mtime":1672627517320,"results":"201","hashOfConfig":"152"},{"size":3386,"mtime":1672627517320,"results":"202","hashOfConfig":"152"},{"size":96,"mtime":1672627517352,"results":"203","hashOfConfig":"152"},{"size":3001,"mtime":1672627517367,"results":"204","hashOfConfig":"152"},{"size":5198,"mtime":1672627517336,"results":"205","hashOfConfig":"152"},{"size":934,"mtime":1672633998783,"results":"206","hashOfConfig":"152"},{"size":5784,"mtime":1672627517283,"results":"207","hashOfConfig":"152"},{"size":9326,"mtime":1672627517283,"results":"208","hashOfConfig":"152"},{"size":2181,"mtime":1672627517298,"results":"209","hashOfConfig":"152"},{"size":1086,"mtime":1672627517320,"results":"210","hashOfConfig":"152"},{"size":609,"mtime":1672627517283,"results":"211","hashOfConfig":"152"},{"size":3590,"mtime":1672760346756,"results":"212","hashOfConfig":"152"},{"size":9351,"mtime":1672627517352,"results":"213","hashOfConfig":"152"},{"size":434,"mtime":1672627517352,"results":"214","hashOfConfig":"152"},{"size":412,"mtime":1672627517352,"results":"215","hashOfConfig":"152"},{"size":2282,"mtime":1672627517283,"results":"216","hashOfConfig":"152"},{"size":9908,"mtime":1672806500640,"results":"217","hashOfConfig":"152"},{"size":3536,"mtime":1672671837684,"results":"218","hashOfConfig":"152"},{"size":5406,"mtime":1672627517336,"results":"219","hashOfConfig":"152"},{"size":142,"mtime":1672627517367,"results":"220","hashOfConfig":"152"},{"size":3266,"mtime":1672627517320,"results":"221","hashOfConfig":"152"},{"size":727,"mtime":1672627517367,"results":"222","hashOfConfig":"152"},{"size":961,"mtime":1672627517367,"results":"223","hashOfConfig":"152"},{"size":684,"mtime":1672627517367,"results":"224","hashOfConfig":"152"},{"size":395,"mtime":1672627517367,"results":"225","hashOfConfig":"152"},{"size":10971,"mtime":1672762777567,"results":"226","hashOfConfig":"152"},{"size":926,"mtime":1672627517336,"results":"227","hashOfConfig":"228"},{"size":1477,"mtime":1672627517336,"results":"229","hashOfConfig":"228"},{"size":5086,"mtime":1672627517336,"results":"230","hashOfConfig":"228"},{"size":4448,"mtime":1672627517283,"results":"231","hashOfConfig":"228"},{"size":1095,"mtime":1672627517336,"results":"232","hashOfConfig":"228"},{"size":1798,"mtime":1672627517336,"results":"233","hashOfConfig":"228"},{"size":581,"mtime":1672627517336,"results":"234","hashOfConfig":"228"},{"size":1400,"mtime":1672627517336,"results":"235","hashOfConfig":"228"},{"size":1796,"mtime":1672627517336,"results":"236","hashOfConfig":"228"},{"size":3173,"mtime":1672627517267,"results":"237","hashOfConfig":"228"},{"size":2212,"mtime":1672627517305,"results":"238","hashOfConfig":"228"},{"size":4807,"mtime":1672627517283,"results":"239","hashOfConfig":"228"},{"size":1370,"mtime":1672627517298,"results":"240","hashOfConfig":"228"},{"size":3909,"mtime":1672633998785,"results":"241","hashOfConfig":"228"},{"size":5877,"mtime":1672627517305,"results":"242","hashOfConfig":"228"},{"size":3868,"mtime":1672627517305,"results":"243","hashOfConfig":"228"},{"size":1856,"mtime":1672627517352,"results":"244","hashOfConfig":"228"},{"size":1028,"mtime":1672627517352,"results":"245","hashOfConfig":"228"},{"size":3382,"mtime":1672627517320,"results":"246","hashOfConfig":"228"},{"size":20966,"mtime":1672747686491,"results":"247","hashOfConfig":"228"},{"size":259,"mtime":1672627517367,"results":"248","hashOfConfig":"228"},{"size":5023,"mtime":1672627517336,"results":"249","hashOfConfig":"228"},{"size":15821,"mtime":1672627517320,"results":"250","hashOfConfig":"228"},{"size":17351,"mtime":1672627517320,"results":"251","hashOfConfig":"228"},{"size":8543,"mtime":1672627517298,"results":"252","hashOfConfig":"228"},{"size":6974,"mtime":1672627517283,"results":"253","hashOfConfig":"228"},{"size":7008,"mtime":1672633998787,"results":"254","hashOfConfig":"228"},{"size":5607,"mtime":1672627517305,"results":"255","hashOfConfig":"228"},{"size":5647,"mtime":1672627517305,"results":"256","hashOfConfig":"228"},{"size":7024,"mtime":1672627517336,"results":"257","hashOfConfig":"228"},{"size":9806,"mtime":1672755812266,"results":"258","hashOfConfig":"228"},{"size":9543,"mtime":1672633998791,"results":"259","hashOfConfig":"228"},{"size":3508,"mtime":1672627517336,"results":"260","hashOfConfig":"228"},{"size":2769,"mtime":1672627517283,"results":"261","hashOfConfig":"228"},{"size":3982,"mtime":1672627517320,"results":"262","hashOfConfig":"228"},{"size":2749,"mtime":1672627517305,"results":"263","hashOfConfig":"228"},{"size":4514,"mtime":1672753251995,"results":"264","hashOfConfig":"228"},{"size":3474,"mtime":1672627517305,"results":"265","hashOfConfig":"228"},{"size":2046,"mtime":1672627517298,"results":"266","hashOfConfig":"228"},{"size":2566,"mtime":1672627517298,"results":"267","hashOfConfig":"228"},{"size":1817,"mtime":1672627517298,"results":"268","hashOfConfig":"228"},{"size":2282,"mtime":1672627517305,"results":"269","hashOfConfig":"228"},{"size":2470,"mtime":1672627517305,"results":"270","hashOfConfig":"228"},{"size":14115,"mtime":1672748968705,"results":"271","hashOfConfig":"228"},{"size":2925,"mtime":1672627517320,"results":"272","hashOfConfig":"228"},{"size":2919,"mtime":1672627517320,"results":"273","hashOfConfig":"228"},{"size":3386,"mtime":1672627517320,"results":"274","hashOfConfig":"228"},{"size":703,"mtime":1672627517352,"results":"275","hashOfConfig":"228"},{"size":2745,"mtime":1672627517352,"results":"276","hashOfConfig":"228"},{"size":970,"mtime":1672627517352,"results":"277","hashOfConfig":"228"},{"size":697,"mtime":1672627517298,"results":"278","hashOfConfig":"228"},{"size":96,"mtime":1672627517352,"results":"279","hashOfConfig":"228"},{"size":961,"mtime":1672627517367,"results":"280","hashOfConfig":"228"},{"size":3001,"mtime":1672627517367,"results":"281","hashOfConfig":"228"},{"size":5198,"mtime":1672627517336,"results":"282","hashOfConfig":"228"},{"size":934,"mtime":1672633998783,"results":"283","hashOfConfig":"228"},{"size":5784,"mtime":1672627517283,"results":"284","hashOfConfig":"228"},{"size":2181,"mtime":1672627517298,"results":"285","hashOfConfig":"228"},{"size":9326,"mtime":1672627517283,"results":"286","hashOfConfig":"228"},{"size":1086,"mtime":1672627517320,"results":"287","hashOfConfig":"228"},{"size":9351,"mtime":1672627517352,"results":"288","hashOfConfig":"228"},{"size":412,"mtime":1672627517352,"results":"289","hashOfConfig":"228"},{"size":2282,"mtime":1672627517283,"results":"290","hashOfConfig":"228"},{"size":434,"mtime":1672627517352,"results":"291","hashOfConfig":"228"},{"size":3536,"mtime":1672671837684,"results":"292","hashOfConfig":"228"},{"size":8270,"mtime":1672669425601,"results":"293","hashOfConfig":"228"},{"size":9909,"mtime":1672755066487,"results":"294","hashOfConfig":"228"},{"size":3551,"mtime":1672671714136,"results":"295","hashOfConfig":"228"},{"size":727,"mtime":1672627517367,"results":"296","hashOfConfig":"228"},{"size":609,"mtime":1672627517283,"results":"297","hashOfConfig":"228"},{"size":3266,"mtime":1672627517320,"results":"298","hashOfConfig":"228"},{"size":142,"mtime":1672627517367,"results":"299","hashOfConfig":"228"},{"size":5406,"mtime":1672627517336,"results":"300","hashOfConfig":"228"},{"size":684,"mtime":1672627517367,"results":"301","hashOfConfig":"228"},{"size":395,"mtime":1672627517367,"results":"302","hashOfConfig":"228"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},"kknzaa",{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"305"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"305"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"305"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"305"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"305"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"305"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"305"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"305"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"305"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"305"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"305"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"305"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"305"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"305"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"305"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"305"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"305"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"305"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"305"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"402","usedDeprecatedRules":"305"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"305"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"305"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"305"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"305"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"305"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"305"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"305"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"305"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"305"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"305"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},"ceoscz",{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"488"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"488"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"488"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"488"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"488"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"488"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"488"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"488"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"488"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"488"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"488"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"488"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"488"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"488"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"488"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"488"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"550","messages":"551","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"488"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"488"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"488"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"488"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"488"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"488"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"488"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"488"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"402","usedDeprecatedRules":"488"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"488"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"488"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"621","usedDeprecatedRules":"488"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"624","usedDeprecatedRules":"488"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"488"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"488"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\index.js",[],["642","643"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\redux.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\serviceWorker.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\App.js",["644"],"import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ConnectedRouter as Router } from \"connected-react-router\";\r\nimport { history } from \"../redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport {\r\n  userIsAuthenticated,\r\n  userIsNotAuthenticated,\r\n} from \"../hoc/authentication\";\r\n\r\nimport { path } from \"../utils\";\r\n\r\nimport Home from \"../routes/Home\";\r\nimport Login from \"../containers/Auth/Login\";\r\n\r\nimport System from \"../routes/System\";\r\nimport HomePage from \"./HomePage/HomePage\";\r\n\r\nimport CustomScrollbars from \"../components/CustomScrollbars\";\r\nimport DetailDoctor from \"../containers/Patient/Doctor/DetailDoctor\";\r\n\r\nimport Doctor from \"../routes/Doctor\";\r\nimport VerifyEmail from \"./Patient/VerifyEmail\";\r\nimport DetailSpecialty from \"./Patient/Specialty/DetailSpecialty\";\r\nimport DetailClinic from \"./Patient/Clinic/DetailClinic\";\r\nimport ManageAdmin from \"./System/Admin/ManageAdmin\";\r\nimport Doctormn from \"./System/Admin/Doctor\";\r\n\r\nclass App extends Component {\r\n  handlePersistorState = () => {\r\n    const { persistor } = this.props;\r\n    let { bootstrapped } = persistor.getState();\r\n    if (bootstrapped) {\r\n      if (this.props.onBeforeLift) {\r\n        Promise.resolve(this.props.onBeforeLift())\r\n          .then(() => this.setState({ bootstrapped: true }))\r\n          .catch(() => this.setState({ bootstrapped: true }));\r\n      } else {\r\n        this.setState({ bootstrapped: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handlePersistorState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Router history={history}>\r\n          <div className=\"main-container\">\r\n            <div className=\"content-container\">\r\n              <CustomScrollbars style={{ height: \"100vh\", width: \"100%\" }}>\r\n                <Switch>\r\n                  <Route path={path.HOME} exact component={Home} />\r\n                  <Route\r\n                    path={path.LOGIN}\r\n                    component={userIsNotAuthenticated(Login)}\r\n                  />\r\n                  {/* <Route\r\n                    path={path.SYSTEM}\r\n                    component={userIsAuthenticated(System)}\r\n                  /> */}\r\n                  <Route\r\n                    path={\"/doctor/\"}\r\n                    component={userIsAuthenticated(Doctor)}\r\n                  />\r\n\r\n                  <Route\r\n                    path={path.ADMIN}\r\n                    component={userIsAuthenticated(ManageAdmin)}\r\n                  />\r\n                  <Route\r\n                    path={path.DOCTOR}\r\n                    component={userIsAuthenticated(Doctormn)}\r\n                  />\r\n                  <Route path={path.HOMEPAGE} component={HomePage} />\r\n\r\n                  <Route path={path.DETAIL_DOCTOR} component={DetailDoctor} />\r\n                  <Route\r\n                    path={path.DETAIL_SPECIALTY}\r\n                    component={DetailSpecialty}\r\n                  />\r\n                  <Route path={path.DETAIL_CLINIC} component={DetailClinic} />\r\n                  <Route\r\n                    path={path.VERIFY_EMAIL_BOOKING}\r\n                    component={VerifyEmail}\r\n                  />\r\n                </Switch>\r\n              </CustomScrollbars>\r\n            </div>\r\n            {/* <ToastContainer\r\n              className=\"toast-container\"\r\n              toastClassName=\"toast-item\"\r\n              bodyClassName=\"toast-item-body\"\r\n              autoClose={false}\r\n              hideProgressBar={true}\r\n              pauseOnHover={false}\r\n              pauseOnFocusLoss={true}\r\n              closeOnClick={false}\r\n              draggable={false}\r\n              closeButton={<CustomToastCloseButton />}\r\n            /> */}\r\n            <ToastContainer\r\n              position=\"bottom-right\"\r\n              autoClose={5000}\r\n              hideProgressBar={false}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n              theme=\"colored\"\r\n            />\r\n          </div>\r\n        </Router>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    started: state.app.started,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\hoc\\IntlProviderWrapper.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\hoc\\authentication.js",["645"],"// import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\n// import { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\n// const locationHelper = locationHelperBuilder({});\r\n\r\n// export const userIsAuthenticated = connectedRouterRedirect({\r\n//   authenticatedSelector: (state) => state.user.isLoggedIn,\r\n//   wrapperDisplayName: \"UserIsAuthenticated\",\r\n//   redirectPath: \"/login\",\r\n// });\r\n\r\n// export const userIsNotAuthenticated = connectedRouterRedirect({\r\n//   // Want to redirect the user when they are authenticated\r\n//   authenticatedSelector: (state) => !state.user.isLoggedIn,\r\n//   wrapperDisplayName: \"UserIsNotAuthenticated\",\r\n//   redirectPath: (state, ownProps) =>\r\n//     locationHelper.getRedirectQueryParam(ownProps) || \"/\",\r\n//   allowRedirectBack: false,\r\n// });\r\n\r\nimport locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n  authenticatedSelector: (state) => state.user.isLoggedIn,\r\n  wrapperDisplayName: \"UserIsAuthenticated\",\r\n  redirectPath: \"/\",\r\n  // redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/login',\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n  // Want to redirect the user when they are authenticated\r\n  authenticatedSelector: (state) => !state.user.isLoggedIn,\r\n  wrapperDisplayName: \"UserIsNotAuthenticated\",\r\n  // link khi ddawng nhap zo he thong\r\n  // redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/system',\r\n  // moi\r\n  redirectPath: \"/admin\",\r\n  allowRedirectBack: false,\r\n});\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\routes\\Home.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\routes\\Doctor.js",["646"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport ManageSchedule from \"../containers/System/Doctor/ManageSchedule\";\r\nimport ManagePatient from \"../containers/System/Doctor/ManagePatient\";\r\nimport ManagePrescription from \"../containers/System/Doctor/ManagePrescription\";\r\nimport Header from \"../containers/Header/Header\";\r\nclass Doctor extends Component {\r\n  render() {\r\n    const { isLoggedIn } = this.props;\r\n    return (\r\n      <>\r\n        {isLoggedIn && <Header />}\r\n        <div className=\"system-container\">\r\n          <div className=\"system-list\">\r\n            <Switch>\r\n              <Route\r\n                path=\"/doctor/manage-schedule\"\r\n                component={ManageSchedule}\r\n              />\r\n              <Route path=\"/doctor/manage-patient\" component={ManagePatient} />\r\n              <Route\r\n                path=\"/doctor/manage-prescription\"\r\n                component={ManagePrescription}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    systemMenuPath: state.app.systemMenuPath,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Auth\\Login.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\components\\CustomScrollbars.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\HomePage.js",["647"],"import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from \"./HomeHeader\";\r\nimport MedicalFacility from \"./Section/MedicalFacility\";\r\nimport Specialty from \"./Section/Specialty\";\r\n\r\nimport \"./HomePage.scss\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport OutStandingDoctor from \"./Section/OutStandingDoctor\";\r\nimport HandBook from \"./Section/HandBook\";\r\nimport About from \"./Section/About\";\r\nimport HomeFooter from \"./Section/HomeFooter\";\r\nimport Footer from \"../Footer\";\r\nclass HomePage extends Component {\r\n  render() {\r\n    var settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 1,\r\n    };\r\n    return (\r\n      <div>\r\n        <HomeHeader isShowBanner={true} />\r\n     \r\n        <Specialty settings={settings} />\r\n        <MedicalFacility settings={settings} />\r\n        <OutStandingDoctor settings={settings} />\r\n        <HandBook settings={settings} />\r\n        <About />\r\n        {/* <HomeFooter /> */}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Doctor\\DetailDoctor.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Specialty\\DetailSpecialty.js",["648","649"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from \"../../HomePage/HomeHeader\";\r\nimport \"./DetaiSpecialty.scss\";\r\nimport DoctorSchedule from \"../Doctor/DoctorSchedule\";\r\nimport DoctorExtraInfor from \"../Doctor/DoctorExtraInfor\";\r\nimport ProfileDoctor from \"../Doctor/ProfileDoctor\";\r\nimport {\r\n  getAllDetailSpecialtyById,\r\n  getAllCodeService,\r\n} from \"../../../services/userService\";\r\nimport _ from \"lodash\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport Footer from \"../../Footer\";\r\nclass DetailSpecialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentDoctorId: [],\r\n      dataDetailSpecialty: {},\r\n      listProvince: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let id = this.props.match.params.id;\r\n      let res = await getAllDetailSpecialtyById({\r\n        id: id,\r\n        location: \"ALL\",\r\n      });\r\n\r\n      let resProvince = await getAllCodeService(\"PROVINCE\");\r\n      if (\r\n        res &&\r\n        res.errCode === 0 &&\r\n        resProvince &&\r\n        resProvince.errCode === 0\r\n      ) {\r\n        let data = res.data;\r\n        let currentDoctorId = [];\r\n        if (data && !_.isEmpty(res.data)) {\r\n          let arr = data.doctorSpecialty;\r\n          if (arr && arr.length > 0) {\r\n            arr.map((item) => {\r\n              currentDoctorId.push(item.doctorId);\r\n            });\r\n          }\r\n        }\r\n        let dataProvince = resProvince.data;\r\n        if (dataProvince && dataProvince.length > 0) {\r\n          dataProvince.unshift({\r\n            createdAt: null,\r\n            keyMap: \"ALL\",\r\n            type: \"PROVINCE\",\r\n            updatedAt: null,\r\n            valueEn: \"ALL\",\r\n            valueVi: \"Toàn Quốc\",\r\n          });\r\n        }\r\n        this.setState({\r\n          dataDetailSpecialty: res.data,\r\n          currentDoctorId: currentDoctorId,\r\n          listProvince: dataProvince ? dataProvince : [],\r\n        });\r\n      }\r\n    }\r\n  }\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n  handleOnChangeSelect = async (event) => {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let id = this.props.match.params.id;\r\n      let location = event.target.value;\r\n      let res = await getAllDetailSpecialtyById({\r\n        id: id,\r\n        location: location,\r\n      });\r\n      if (res && res.errCode === 0) {\r\n        let data = res.data;\r\n        let currentDoctorId = [];\r\n        if (data && !_.isEmpty(res.data)) {\r\n          let arr = data.doctorSpecialty;\r\n          if (arr && arr.length > 0) {\r\n            arr.map((item) => {\r\n              currentDoctorId.push(item.doctorId);\r\n            });\r\n          }\r\n        }\r\n        this.setState({\r\n          dataDetailSpecialty: res.data,\r\n          currentDoctorId: currentDoctorId,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    let { currentDoctorId, dataDetailSpecialty, listProvince } = this.state;\r\n    let { language } = this.props;\r\n    console.log(\"data\", this.state);\r\n    return (<>\r\n      <div className=\"detail-specialty-container\">\r\n        <HomeHeader />\r\n        <div className=\"detail-specialty-body\">\r\n          <div className=\"description-specialty\">\r\n            {dataDetailSpecialty && !_.isEmpty(dataDetailSpecialty) && (\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: dataDetailSpecialty.descriptionHTML,\r\n                }}\r\n              ></div>\r\n            )}\r\n          </div>\r\n          <div className=\"search-sp-doctor\">\r\n            <select\r\n              onChange={(event) => this.handleOnChangeSelect(event)}\r\n              className=\"doctor-select\"\r\n            >\r\n              {listProvince &&\r\n                listProvince.length > 0 &&\r\n                listProvince.map((item, index) => {\r\n                  return (\r\n                    <option key={index} value={item.keyMap}>\r\n                      {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          {currentDoctorId &&\r\n            currentDoctorId.length > 0 &&\r\n            currentDoctorId.map((item, index) => {\r\n              return (\r\n                <>\r\n                  <div className=\"each-doctor\" key={index}>\r\n                    <div className=\"dt-content-left\">\r\n                      <div className=\"profile-doctor\">\r\n                        <ProfileDoctor\r\n                          doctorId={item}\r\n                          isShowDescriptionDoctor={true}\r\n                          isShowLinkDetail={true}\r\n                          isShowPrice={false}\r\n                          // dataTime={dataTime}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"dt-content-right\">\r\n                      <div className=\"doctor-schedule\">\r\n                        <DoctorSchedule detailDoctorIdFromParent={item} />\r\n                      </div>\r\n                      <div className=\"doctor-extra-info\">\r\n                        <DoctorExtraInfor doctorIdFromParent={item} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n        </div>\r\n       \r\n      </div>\r\n      <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\VerifyEmail.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\routes\\System.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Clinic\\DetailClinic.js",["650","651","652"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from \"../../HomePage/HomeHeader\";\r\nimport \"./DetailClinic.scss\";\r\nimport DoctorSchedule from \"../Doctor/DoctorSchedule\";\r\nimport DoctorExtraInfor from \"../Doctor/DoctorExtraInfor\";\r\nimport ProfileDoctor from \"../Doctor/ProfileDoctor\";\r\nimport { getAllDetailClinicById } from \"../../../services/userService\";\r\nimport _ from \"lodash\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport Footer from \"../../Footer\";\r\nclass DetailClinic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentDoctorId: [],\r\n      dataDetailClinic: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let id = this.props.match.params.id;\r\n      let res = await getAllDetailClinicById({\r\n        id: id,\r\n      });\r\n      if (res && res.errCode === 0) {\r\n        let data = res.data;\r\n        let currentDoctorId = [];\r\n        if (data && !_.isEmpty(res.data)) {\r\n          let arr = data.doctorClinic;\r\n          console.log(\"asd\", arr);\r\n          if (arr && arr.length > 0) {\r\n            arr.map((item) => {\r\n              currentDoctorId.push(item.doctorId);\r\n            });\r\n          }\r\n        }\r\n        this.setState({\r\n          dataDetailClinic: res.data,\r\n          currentDoctorId: currentDoctorId,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { currentDoctorId, dataDetailClinic } = this.state;\r\n    let { language } = this.props;\r\n    console.log(\"data\", this.state);\r\n    return (<>\r\n      <div className=\"detail-specialty-container\">\r\n        <HomeHeader />\r\n        <div className=\"detail-specialty-body\">\r\n          <div className=\"description-specialty\">\r\n            {dataDetailClinic && !_.isEmpty(dataDetailClinic) && (\r\n              <>\r\n                {/* <div>{dataDetailClinic.name}</div> */}\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: dataDetailClinic.descriptionHTML,\r\n                  }}\r\n                ></div>\r\n              </>\r\n            )}\r\n          </div>\r\n          {currentDoctorId &&\r\n            currentDoctorId.length > 0 &&\r\n            currentDoctorId.map((item, index) => {\r\n              return (\r\n                <>\r\n                  <div className=\"each-doctor\" key={index}>\r\n                    <div className=\"dt-content-left\">\r\n                      <div className=\"profile-doctor\">\r\n                        <ProfileDoctor\r\n                          doctorId={item}\r\n                          isShowDescriptionDoctor={true}\r\n                          isShowLinkDetail={true}\r\n                          isShowPrice={false}\r\n                          // dataTime={dataTime}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"dt-content-right\">\r\n                      <div className=\"doctor-schedule\">\r\n                        <DoctorSchedule detailDoctorIdFromParent={item} />\r\n                      </div>\r\n                      <div className=\"doctor-extra-info\">\r\n                        <DoctorExtraInfor doctorIdFromParent={item} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n        </div>\r\n       \r\n      </div>\r\n      <Footer/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailClinic);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\reducers\\rootReducer.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\Doctor.js",["653","654","655"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import \"./Doctor.scss\";\r\nimport ManageSchedule from \"../Doctor/ManageSchedule\";\r\nimport ManagePatient from \"../Doctor/ManagePatient\";\r\nimport { BiUser, BiLogOut, BiBookContent, BiBrain } from \"react-icons/bi\";\r\nimport { FaUserNurse, FaUserCircle } from \"react-icons/fa\";\r\nclass Doctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showManageDoctor: false,\r\n      showManagePatient: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {}\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  handShowManagePatient = () => {\r\n    this.setState({\r\n      showManagePatient: true,\r\n      showManageDoctor: false,\r\n    });\r\n  };\r\n  handShowManageDoctor = () => {\r\n    this.setState({\r\n      showManagePatient: false,\r\n      showManageDoctor: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { showManageDoctor, showManagePatient } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container-manage-admin\">\r\n          <div className=\"manage-admin\">\r\n            <div className=\"content-left-admin\">\r\n              <div className=\"title-app\">BOOKING CARE </div>\r\n              <div className=\"menu-manage-admin\">\r\n                <div className=\"mn-user\">\r\n                  <FaUserNurse\r\n                    className=\"icon-nurse\"\r\n                    style={{\r\n                      fontSize: \"30px\",\r\n                      marginRight: \"5px\",\r\n                      marginBottom: \"15px\",\r\n                    }}\r\n                  />{\" \"}\r\n                  Quản Lý Lịch Trình Bác Sĩ\r\n                  <div className=\"sub-mn\" onClick={this.handShowManageDoctor}>\r\n                    Quản Lý Kế Hoạch Khám\r\n                  </div>\r\n                  <div className=\"sub-mn\" onClick={this.handShowManagePatient}>\r\n                    Quản Lý Bệnh Nhân Khám\r\n                  </div>\r\n                </div>\r\n                <div className=\"mn-exit\">\r\n                  <a href=\"/\" style={{ textDecoration: \"none\" }}>\r\n                    <BiLogOut className=\"icon-logout\" />\r\n                    Thoát\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"content-right-admin\">\r\n              <div className=\"header-content-right-admin\">\r\n                <div className=\"title-manage-admin\">Bác Sĩ Quản Lý</div>\r\n                <div className=\"info-admin\">\r\n                  <FaUserCircle\r\n                    style={{\r\n                      fontSize: \"30px\",\r\n                      marginRight: \"5px\",\r\n                    }}\r\n                  />{\" \"}\r\n                  Bác Sĩ\r\n                </div>\r\n              </div>\r\n              <div className=\"show-content-right-admin\">\r\n                {showManageDoctor === true ? <ManageSchedule /> : <></>}\r\n                {showManagePatient === true ? <ManagePatient /> : <></>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\ManageAdmin.js",["656","657","658","659","660","661","662","663","664"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ManageAdmin.scss\";\r\nimport UserManage from \"../UserManage\";\r\nimport { getAllUsers, getAllTypeUsers, getAllListPatient, GetAllUsersPatient } from '../../../services/userService'\r\nimport UserRedux from \"./UserRedux\";\r\nimport ManageDoctor from \"./ManageDoctor\";\r\nimport ManageSchedule from \"../Doctor/ManageSchedule\";\r\nimport ManageClinic from \"../Clinic/ManageClinic\";\r\nimport ManageSpecialty from \"../Specialty/ManageSpecialty\";\r\nimport { FaBeer, FaUserCircle } from \"react-icons/fa\";\r\nimport { BiUser, BiLogOut, BiBookContent, BiBrain } from \"react-icons/bi\";\r\nimport { FcDepartment } from \"react-icons/fc\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport ManagePatient from \"../Doctor/ManagePatient\";\r\nimport ManagePrescription from \"../Doctor/ManagePrescription\";\r\nimport ManageHandBook from \"./ManageHandBook\";\r\nimport ListPatientExam from \"./ListPatientExam\";\r\nimport ListPatienShedule from \"./ListPatienShedule\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { flatMap } from \"lodash\";\r\n\r\n\r\nclass ManageAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showCrudUser: false,\r\n      showCrudReduxUser: false,\r\n      showManageDoctor: false,\r\n      showManagePlanExam: false,\r\n      showManageClinic: false,\r\n      showSpeciallist: false,\r\n      showHandBook: false,\r\n      showManageDoctorRole: false,\r\n      showManagePatient: false,\r\n      showManagePrescription: false,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: false,\r\n      arrUsers: [],\r\n      arrUsers1: [],\r\n      arrUsers2: [],\r\n      arrUsers3: [],\r\n      arrUsers4: [],\r\n      showDashBoard: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getAllDoctor();\r\n    await this.getAllUsersPatient();\r\n    await this.getALlPatient();\r\n    await this.getALlPatient1();\r\n    await this.getALlPatient2();\r\n  }\r\n\r\n  getALlPatient = async () => {\r\n    let response1 = await GetAllUsersPatient(\"S3\");\r\n    if (response1 && response1.err === 0) {\r\n      this.setState({\r\n        arrUsers2: response1.dataTypeUser,\r\n      });\r\n    }\r\n  };\r\n  getALlPatient1 = async () => {\r\n    let response1 = await GetAllUsersPatient(\"S2\");\r\n    if (response1 && response1.err === 0) {\r\n      this.setState({\r\n        arrUsers3: response1.dataTypeUser,\r\n      });\r\n    }\r\n  };\r\n  getALlPatient2 = async () => {\r\n    let response1 = await GetAllUsersPatient(\"S1\");\r\n    if (response1 && response1.err === 0) {\r\n      this.setState({\r\n        arrUsers4: response1.dataTypeUser,\r\n      });\r\n    }\r\n  };\r\n  getAllUsersPatient = async () => {\r\n    let response1 = await getAllTypeUsers(\"R3\");\r\n    if (response1 && response1.err === 0) {\r\n      this.setState({\r\n        arrUsers1: response1.dataTypeUser,\r\n      });\r\n    }\r\n  };\r\n  getAllDoctor = async () => {\r\n    let response = await getAllTypeUsers(\"R2\");\r\n    if (response && response.err === 0) {\r\n      this.setState({\r\n        arrUsers: response.dataTypeUser,\r\n      });\r\n    }\r\n  };\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n  handShowCrudUser = () => {\r\n    this.setState({\r\n      showCrudUser: true,\r\n      showCrudReduxUser: false,\r\n      showManageDoctor: false,\r\n      showManagePlanExam: false,\r\n      showManageClinic: false,\r\n      showSpeciallist: false,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: false,\r\n      showHandBook: false,\r\n    });\r\n  };\r\n  handShowCrudUserRedux = () => {\r\n    this.setState({\r\n      showCrudReduxUser: true,\r\n      showCrudUser: false,\r\n      showManageDoctor: false,\r\n      showManagePlanExam: false,\r\n      showManageClinic: false,\r\n      showSpeciallist: false,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: false,\r\n      showHandBook: false,\r\n    });\r\n  };\r\n  handShowManageDoctor = () => {\r\n    this.setState({\r\n      showManageDoctor: true,\r\n      showCrudUser: false,\r\n      showCrudReduxUser: false,\r\n      showManagePlanExam: false,\r\n      showManageClinic: false,\r\n      showSpeciallist: false,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: false,\r\n      showHandBook: false,\r\n    });\r\n  };\r\n  handShowPlanExam = () => {\r\n    this.setState({\r\n      showManagePlanExam: true,\r\n      showManageDoctor: false,\r\n      showCrudUser: false,\r\n      showCrudReduxUser: false,\r\n      showManageClinic: false,\r\n      showSpeciallist: false,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: false,\r\n      showHandBook: false,\r\n    });\r\n  };\r\n  handShowManageClinic = () => {\r\n    this.setState({\r\n      showManageClinic: true,\r\n      showManagePlanExam: false,\r\n      showManageDoctor: false,\r\n      showCrudUser: false,\r\n      showCrudReduxUser: false,\r\n      showSpeciallist: false,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: false,\r\n      showHandBook: false,\r\n    });\r\n  };\r\n  handShowSpecialist = () => {\r\n    this.setState({\r\n      showSpeciallist: true,\r\n      showManagePlanExam: false,\r\n      showManageDoctor: false,\r\n      showCrudUser: false,\r\n      showCrudReduxUser: false,\r\n      showManageClinic: false,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: false,\r\n      showHandBook: false,\r\n    });\r\n  };\r\n  handShowHandBook = () => {\r\n    this.setState({\r\n      showManageClinic: false,\r\n      showManagePlanExam: false,\r\n      showManageDoctor: false,\r\n      showCrudUser: false,\r\n      showCrudReduxUser: false,\r\n      showSpeciallist: false,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: false,\r\n      showHandBook: true,\r\n    });\r\n  };\r\n\r\n  handShowManagePatient = () => {\r\n    this.setState({\r\n      showManagePatient: true,\r\n      showManageDoctorRole: false,\r\n      showManagePrescription: false,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: false,\r\n    });\r\n  };\r\n  handShowManageDoctorMN = () => {\r\n    this.setState({\r\n      showManagePatient: false,\r\n      showManageDoctorRole: true,\r\n      showManagePrescription: false,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: false,\r\n    });\r\n  };\r\n  handShowManagePresition = () => {\r\n    this.setState({\r\n      showManagePatient: false,\r\n      showManageDoctorRole: false,\r\n      showManagePrescription: true,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: false,\r\n    });\r\n  };\r\n  handleShowListPatientExamined = () => {\r\n    this.setState({\r\n      showManagePatient: false,\r\n      showManageDoctorRole: false,\r\n      showManagePrescription: false,\r\n      showListPatientExamined: true,\r\n      showListPatientScheduled: false,\r\n    });\r\n  };\r\n  handleShowListPatientScheduled = () => {\r\n    this.setState({\r\n      showManagePatient: false,\r\n      showManageDoctorRole: false,\r\n      showManagePrescription: false,\r\n      showListPatientExamined: false,\r\n      showListPatientScheduled: true,\r\n    });\r\n  };\r\n  showDashBoard = () => {\r\n    this.setState({\r\n      showDashBoard: true\r\n\r\n    })\r\n    alert('ádasd');\r\n  }\r\n  render() {\r\n    let {\r\n      showCrudReduxUser,\r\n      showCrudUser,\r\n      showHandBook,\r\n      showManageClinic,\r\n      showManageDoctor,\r\n      showSpeciallist,\r\n      showManagePlanExam,\r\n      showManageDoctorRole,\r\n      showManagePatient,\r\n      showManagePrescription,\r\n      showListPatientExamined,\r\n      showListPatientScheduled,\r\n      showDashBoard\r\n    } = this.state;\r\n    let arrUsers = this.state.arrUsers;\r\n    let arrUsers1 = this.state.arrUsers1;\r\n    let arrUsers2 = this.state.arrUsers2;\r\n    let arrUsers3 = this.state.arrUsers3;\r\n    let arrUsers4 = this.state.arrUsers4;\r\n    console.log('check state aruser', arrUsers)\r\n    console.log('check state aruser1', arrUsers1.length)\r\n    const { isLoggedIn, userInfo, processLogout } = this.props;\r\n    // console.log('checl', userInfo.roleId)\r\n    let testdate = [];\r\n    console.log('âcscsc', typeof (testdate))\r\n    const iads = arrUsers && arrUsers.length > 0 && arrUsers.map((item, index) => [`${item.firstName}`, '10', \"#b87333\"])\r\n    console.log('check 123123', typeof (iads))\r\n    const datatest = [[\"Element\", \"Bác sĩ có lượt khám cao nhất\", { role: \"style\" }], iads[1]]\r\n\r\n    console.log('âcscascsa', datatest);\r\n    const data = [\r\n\r\n      [\"Element\", \"Số lượng bệnh nhân đã khám của bác sĩ\", { role: \"style\" }],\r\n      // [testdate, 8.94, \"#b87333\"],\r\n      ['Nguyễn Thúy An', 10, \"#b87333\"],\r\n      ['Lê Đan Tú', 15, \"#b87333\"],\r\n      ['Phạm Diệu Linh', 30, \"blue\"],\r\n      ['Nguyễn Diệp Chi', 12, \"#b87333\"],\r\n      ['Phùng Mạnh', 13, \"#b87333\"],\r\n      ['Nguyễn Trọng Tuấn', 14, \"#b87333\"],\r\n      // [arrUsers && arrUsers.length > 0 && arrUsers.map((item, index) => {\r\n      //   let dat = [];\r\n      //   if (item && item.roleId === 'R2' && index === 0) {\r\n      //     dat = item.lastName + ' ' + item.firstName;\r\n      //   }\r\n      //   console.log('check látname', dat)\r\n      //   return dat\r\n      // }), 8.94, \"#b87333\"], // RGB value\r\n    ];\r\n    console.log('check đâsd', data)\r\n    return (\r\n      <>\r\n        {isLoggedIn && userInfo.roleId === \"R1\" ? (\r\n          <>\r\n            <div className=\"container-manage-admin\">\r\n              <div className=\"manage-admin\">\r\n                <div className=\"content-left-admin\">\r\n                  <div className=\"title-app\" onClick={this.showDashBoard}>BOOKING DOCTOR </div>\r\n                  <div className=\"menu-manage-admin\">\r\n                    <div className=\"mn-user\">\r\n                      <BiUser className=\"icon-user\" /> Quản Lý Người Dùng\r\n                      <div className=\"sub-mn\" onClick={this.handShowCrudUser}>\r\n                        CRUD User\r\n                      </div>\r\n                      <div\r\n                        className=\"sub-mn\"\r\n                        onClick={this.handShowCrudUserRedux}\r\n                      >\r\n                        CRUD Redux User\r\n                      </div>\r\n                      <div\r\n                        className=\"sub-mn\"\r\n                        onClick={this.handShowManageDoctor}\r\n                      >\r\n                        Quản Lý Bác Sĩ\r\n                      </div>\r\n                      <div className=\"sub-mn\" onClick={this.handShowPlanExam}>\r\n                        Quản Lý Kế Hoạch Khám\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mn-clinic\">\r\n                      Phòng Khám\r\n                      <div\r\n                        className=\"sub-mn\"\r\n                        onClick={this.handShowManageClinic}\r\n                      >\r\n                        Quản Lý Phòng Khám\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mn-specialist\">\r\n                      Chuyên Khoa\r\n                      <div className=\"sub-mn\" onClick={this.handShowSpecialist}>\r\n                        Quản Lý Chuyên Khoa\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"mn-handlebook\"\r\n                      onClick={this.handShowHandBook}\r\n                    >\r\n                      Biểu Đồ\r\n                      <div className=\"sub-mn\">Quản Lý Biểu đồ</div>\r\n                    </div>\r\n\r\n                    <div className=\"mn-exit\">\r\n                      <a\r\n                        href=\"/\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                        onClick={processLogout}\r\n                      >\r\n                        <BiLogOut /> Thoát\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"content-right-admin\">\r\n                  <div className=\"header-content-right-admin\">\r\n                    <div className=\"title-manage-admin\">Quản trị Admin</div>\r\n                    <div className=\"info-admin\"> Admin</div>\r\n                  </div>\r\n                  <div className=\"show-content-right-admin\">\r\n                    {showCrudUser === true || showCrudReduxUser === true ||\r\n                      showManageDoctor === true || showManagePlanExam === true || showManageClinic === true\r\n                      || showSpeciallist === true || showHandBook === true ?\r\n                      <>\r\n\r\n                      </> : <>\r\n                        {showDashBoard = true ? <>\r\n                          <div className=\"dashboard-admin\">\r\n                            <div className=\"content-dashboard\">\r\n                              <div className=\"dashborad-pt\">\r\n                                <span className=\"number-sum\">{arrUsers.length}</span>\r\n                                Tổng số bệnh nhân\r\n                              </div>\r\n                              <div className=\"dashborad-pt\">\r\n                                <span className=\"number-sum\">{arrUsers1.length}</span>\r\n                                Tổng số bác sĩ\r\n                              </div>\r\n                              <div className=\"dashborad-pt\">\r\n                                <span className=\"number-sum\">{arrUsers2.length}</span>\r\n                                Số bệnh nhân đợi khám\r\n                              </div>\r\n                              <div className=\"dashborad-pt\">\r\n                                <span className=\"number-sum\">{arrUsers3.length}</span>\r\n                                Số bệnh nhân đã khám\r\n                              </div>\r\n                              <div className=\"dashborad-pt\">\r\n                                <span className=\"number-sum\">{arrUsers4.length}</span>\r\n                                Số bệnh nhân đặt chưa xác nhận\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"chart-doctor-number\">\r\n                              <Chart chartType=\"ColumnChart\" width=\"100%\" height=\"600px\" data={data} />\r\n                            </div>\r\n                          </div></> : <></>}</>}\r\n\r\n                    {showCrudUser === true ? <UserManage /> : <></>}\r\n                    {showCrudReduxUser === true ? <UserRedux /> : <></>}\r\n                    {showManageDoctor === true ? <ManageDoctor /> : <></>}\r\n                    {showManagePlanExam === true ? <ManageSchedule /> : <></>}\r\n                    {showManageClinic === true ? <ManageClinic /> : <></>}\r\n                    {showSpeciallist === true ? <ManageSpecialty /> : <></>}\r\n                    {showHandBook === true ? <ManageHandBook /> : <></>}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n\r\n          </>\r\n        )}\r\n        {isLoggedIn && userInfo.roleId === \"R2\" ? (\r\n          <>\r\n            <div className=\"container-manage-admin\">\r\n              <div className=\"manage-admin\">\r\n                <div className=\"content-left-admin\">\r\n                  <div className=\"title-app\">BOOKING DOCTOR </div>\r\n                  \r\n                  <div className=\"menu-manage-admin\">\r\n                    \r\n                    <div className=\"mn-user\">\r\n                      Quản Lý Lịch Trình Bác Sĩ\r\n                      <div\r\n                        className=\"sub-mn\"\r\n                        onClick={this.handShowManageDoctorMN}\r\n                      >\r\n                        Quản Lý Kế Hoạch Khám\r\n                      </div>\r\n                      <div\r\n                        className=\"sub-mn\"\r\n                        onClick={this.handShowManagePatient}\r\n                      >\r\n                        Quản Lý Bệnh Nhân Khám\r\n                      </div>\r\n                      <div\r\n                        className=\"sub-mn\"\r\n                        onClick={this.handShowManagePresition}\r\n                      >\r\n                        Quản Lý Đơn Thuốc\r\n                      </div>\r\n                      <div\r\n                        className=\"sub-mn\"\r\n                        onClick={this.handleShowListPatientExamined}\r\n                      >\r\n                        Danh sách bệnh nhân đã khám\r\n                      </div>\r\n                      <div\r\n                        className=\"sub-mn\"\r\n                        onClick={this.handleShowListPatientScheduled}\r\n                      >\r\n                        Danh sách bệnh nhân đã đặt lịch\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"mn-handlebook\"\r\n                      onClick={this.handShowHandBook}\r\n                    >\r\n                      Bệnh Nhân\r\n                    </div>\r\n                    <div className=\"mn-exit\">\r\n                      <a\r\n                        href=\"/\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                        onClick={processLogout}\r\n                      >\r\n                        Thoát <BiLogOut />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"content-right-admin\">\r\n                  <div className=\"header-content-right-admin\">\r\n                    <div className=\"title-manage-admin\">Bác Sĩ Quản Lý</div>\r\n                    <div className=\"info-admin\"> Bác Sĩ</div>\r\n                  </div>\r\n                  <div className=\"show-content-right-admin\">\r\n                  {showManageDoctorRole === true || showManagePatient === true ||\r\n                      showManagePrescription === true || showListPatientExamined === true || showListPatientScheduled === true\r\n                    ?\r\n                      <>\r\n\r\n                      </> : <>\r\n                        {showDashBoard = true ? <>\r\n                          <div className=\"dashboard-admin\">\r\n                            <div className=\"content-dashboard\">\r\n                              <div className=\"dashborad-pt\">\r\n                                <span className=\"number-sum\">{arrUsers.length}</span>\r\n                                Tổng số bệnh nhân\r\n                              </div>\r\n                              <div className=\"dashborad-pt\">\r\n                                <span className=\"number-sum\">{arrUsers1.length}</span>\r\n                                Tổng số bác sĩ\r\n                              </div>\r\n                              <div className=\"dashborad-pt\">\r\n                                <span className=\"number-sum\">{arrUsers2.length}</span>\r\n                                Số bệnh nhân đợi khám\r\n                              </div>\r\n                              <div className=\"dashborad-pt\">\r\n                                <span className=\"number-sum\">{arrUsers3.length}</span>\r\n                                Số bệnh nhân đã khám\r\n                              </div>\r\n                              <div className=\"dashborad-pt\">\r\n                                <span className=\"number-sum\">{arrUsers4.length}</span>\r\n                                Số bệnh nhân đặt chưa xác nhận\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"chart-doctor-number\">\r\n                              <Chart chartType=\"ColumnChart\" width=\"100%\" height=\"600px\" data={data} />\r\n                            </div>\r\n                          </div></> : <></>}</>}\r\n                    {showManageDoctorRole === true ? <ManageSchedule /> : <></>}\r\n                    {showManagePatient === true ? <ManagePatient /> : <></>}\r\n                    {showManagePrescription === true ? (\r\n                      <ManagePrescription />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    {showListPatientExamined === true ? (\r\n                      <ListPatientExam />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    {showListPatientScheduled === true ? (\r\n                      <ListPatienShedule />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    processLogout: () => dispatch(actions.processLogout()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageAdmin);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\index.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\HomeHeader.js",["665","666"],"import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport \"./HomeHeader.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { LANGUAGES } from \"../../utils/constant\";\r\nimport { changeLanguageApp } from \"../../store/actions\";\r\nimport { withRouter } from \"react-router\";\r\nimport logovn from \"../../assets/images/logovn.png\";\r\nimport logoen from \"../../assets/images/logoen.png\";\r\nclass HomeHeader extends Component {\r\n  ChangeLanguages = (language) => {\r\n    this.props.changeLanguageAppRedux(language);\r\n  };\r\n\r\n  render() {\r\n    let language = this.props.language;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"home-header-container\">\r\n          <div className=\"home-header-content\">\r\n            <div className=\"left-content\">\r\n              <i className=\"fas fa-bars\"></i>\r\n\r\n              <div className=\"header-logo\">\r\n                <a href=\"/home\" className=\"header-logo-link\">\r\n                  <span>Booking</span>\r\n                  <span>Doctor.com</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"center-content\">\r\n              <div className=\"child-content\">\r\n                <div>\r\n                  <b>\r\n                    <FormattedMessage id=\"home-header.Speciality\" />\r\n                  </b>\r\n                </div>\r\n                <div className=\"subs-title\">\r\n                  <FormattedMessage id=\"home-header.Search-doctor\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"child-content\">\r\n                <div>\r\n                  <b>\r\n                    <FormattedMessage id=\"home-header.Health-facility\" />\r\n                  </b>\r\n                </div>\r\n                <div className=\"subs-title\">\r\n                  <FormattedMessage id=\"home-header.Select-room\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"child-content\">\r\n                <div>\r\n                  <b>\r\n                    <FormattedMessage id=\"home-header.Doctor\" />\r\n                  </b>\r\n                </div>\r\n                <div className=\"subs-title\">\r\n                  <FormattedMessage id=\"home-header.Select-doctor\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"child-content\">\r\n                <div>\r\n                  <b>\r\n                    {\" \"}\r\n                    <FormattedMessage id=\"home-header.Fee\" />\r\n                  </b>\r\n                </div>\r\n                <div className=\"subs-title\">\r\n                  <FormattedMessage id=\"home-header.Check-health\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"right-content\">\r\n              <div className=\"support\">\r\n                <i className=\"fa fa-question-circle\"></i>\r\n                <FormattedMessage id=\"home-header.Sp\" />\r\n              </div>\r\n              <div\r\n                className={\r\n                  language === LANGUAGES.VI\r\n                    ? \"language-vi active\"\r\n                    : \"language-vi\"\r\n                }\r\n              >\r\n                <span\r\n                  onClick={() => {\r\n                    this.ChangeLanguages(LANGUAGES.VI);\r\n                  }}\r\n                >\r\n                  {language === LANGUAGES.VI ? (\r\n                    <img\r\n                      src={logovn}\r\n                      className=\"logovn\"\r\n                      style={{\r\n                        width: \"50px\",\r\n                        height: \"30px\",\r\n                        margin: \"10px\",\r\n                        borderRadius: \"5px\",\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  VN\r\n                </span>\r\n              </div>\r\n              <div\r\n                className={\r\n                  language === LANGUAGES.EN\r\n                    ? \"language-en active\"\r\n                    : \"language-en\"\r\n                }\r\n              >\r\n                <span\r\n                  onClick={() => {\r\n                    this.ChangeLanguages(LANGUAGES.EN);\r\n                  }}\r\n                >\r\n                  {language === LANGUAGES.EN ? (\r\n                    <img\r\n                      src={logoen}\r\n                      className=\"logoen\"\r\n                      style={{\r\n                        width: \"50px\",\r\n                        height: \"30px\",\r\n                        margin: \"10px\",\r\n                        borderRadius: \"5px\",\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  EN\r\n                </span>\r\n                <button\r\n                  className=\"btn btn-warning btn-login\"\r\n                  style={{\r\n                    marginLeft: \"25px\",\r\n                    paddingLeft: \"5px\",\r\n                    paddingRight: \"5px\",\r\n                  }}\r\n                >\r\n                  <a\r\n                    href=\"/login\"\r\n                    style={{ textDecoration: \"none\", color: \"black\" }}\r\n                  >\r\n                    {\" \"}\r\n                    Đăng Nhập\r\n                  </a>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isShowBanner === true && (\r\n          <div className=\"home-header-banner\">\r\n            <div className=\"content-up\">\r\n              <div className=\"center\">\r\n                <div className=\"title\">\r\n                  <h3>\r\n                    <FormattedMessage id=\"banner.t-one\" />\r\n                  </h3>\r\n                </div>\r\n                <div className=\"title\">\r\n                  <h1>\r\n                    {\" \"}\r\n                    <FormattedMessage id=\"banner.t-two\" />\r\n                  </h1>\r\n                </div>\r\n                <div className=\"search\">\r\n                  <i className=\"fa fa-search\"></i>\r\n                  <input type=\"text\" placeholder=\"Tìm Bác Sĩ\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"content-down\">\r\n              <div className=\"banner-options\">\r\n                <div className=\"option-child\">\r\n                  <div className=\"icon-child one\"></div>\r\n                  <div className=\"text-child\"> Khám Chuyên Khoa</div>\r\n                </div>\r\n                <div className=\"option-child\">\r\n                  <div className=\"icon-child two\"></div>\r\n                  <div className=\"text-child\">Khám từ xa</div>\r\n                </div>\r\n                <div className=\"option-child\">\r\n                  <div className=\"icon-child three\"></div>\r\n                  <div className=\"text-child\">Khám tổng quát</div>\r\n                </div>\r\n                <div className=\"option-child\">\r\n                  <div className=\"icon-child four\"></div>\r\n                  <div className=\"text-child\">Xét nhiệm y học</div>\r\n                </div>\r\n                <div className=\"option-child\">\r\n                  <div className=\"icon-child five\"></div>\r\n                  <div className=\"text-child\">Sức Khỏe Tinh Thần</div>\r\n                </div>\r\n                <div className=\"option-child\">\r\n                  <div className=\"icon-child six\"></div>\r\n                  <div className=\"text-child\">Khám Nha Khoa</div>\r\n                </div>\r\n                <div className=\"option-child\">\r\n                  <div className=\"icon-child seven\"></div>\r\n                  <div className=\"text-child\">Gói Phẩu Thuật</div>\r\n                </div>\r\n                <div className=\"option-child\">\r\n                  <div className=\"icon-child eight\"></div>\r\n                  <div className=\"text-child\">Sản Phẩm Y Tế</div>\r\n                </div>{\" \"}\r\n                <div className=\"option-child\">\r\n                  <div className=\"icon-child nine\"></div>\r\n                  <div className=\"text-child\">Sức Khỏe Doanh Nghiệp</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeLanguageAppRedux: (language) => dispatch(changeLanguageApp(language)),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(HomeHeader)\r\n);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Doctor\\DoctorSchedule.js",["667","668","669","670","671","672","673","674","675","676"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./DoctorSchedule.scss\";\r\nimport moment from \"moment\";\r\nimport localization from \"moment/locale/vi\";\r\nimport { getScheduleDoctorByDate } from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport BookingModal from \"../../Patient/Doctor/Modal/BookingModal\";\r\nclass DoctorSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allDays: [],\r\n      allAvalableTimes: [],\r\n      isOpenModalBooking: false,\r\n      dataScheduleTimeModal: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let { language } = this.props;\r\n    let allDays = this.getArrDays(language);\r\n    this.setState({ allDays: allDays });\r\n\r\n    if (this.props.detailDoctorIdFromParent) {\r\n      let res = await getScheduleDoctorByDate(\r\n        this.props.detailDoctorIdFromParent,\r\n        allDays[0].value\r\n      );\r\n      this.setState({\r\n        allAvalableTimes: res.data ? res.data : [],\r\n      });\r\n    }\r\n  }\r\n\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  getArrDays = (language) => {\r\n    let allDays = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      let object = {};\r\n      if (language === LANGUAGES.VI) {\r\n        if (i === 0) {\r\n          let ddMM = moment(new Date()).format(\"DD/MM\");\r\n          let today = `Hôm nay - ${ddMM}`;\r\n          object.label = today;\r\n        } else {\r\n          let labelVi = moment(new Date())\r\n            .add(i, \"days\")\r\n            .format(\"dddd - DD/MM\");\r\n          object.label = this.capitalizeFirstLetter(labelVi);\r\n        }\r\n      } else {\r\n        if (i === 0) {\r\n          let ddMM = moment(new Date()).format(\"DD/MM\");\r\n          let today = `Today - ${ddMM}`;\r\n          object.label = today;\r\n          console.log(\"ddmm\", today);\r\n        } else {\r\n          object.label = moment(new Date())\r\n            .add(i, \"days\")\r\n            .locale(\"en\")\r\n            .format(\"dddd - DD/MM\");\r\n        }\r\n      }\r\n      object.value = moment(new Date()).add(i, \"days\").startOf(\"day\").valueOf();\r\n      allDays.push(object);\r\n    }\r\n    return allDays;\r\n  };\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n      let allDays = this.getArrDays(this.props.language);\r\n      this.setState({\r\n        allDays: allDays,\r\n      });\r\n    }\r\n    if (\r\n      this.props.detailDoctorIdFromParent !== prevProps.detailDoctorIdFromParent\r\n    ) {\r\n      let allDays = this.getArrDays(this.props.language);\r\n      let res = await getScheduleDoctorByDate(\r\n        this.props.detailDoctorIdFromParent,\r\n        allDays[0].value\r\n      );\r\n      this.setState({\r\n        allAvalableTimes: res.data ? res.data : [],\r\n      });\r\n    }\r\n  }\r\n  handleOnChangeSelect = async (event) => {\r\n    if (\r\n      this.props.detailDoctorIdFromParent &&\r\n      this.props.detailDoctorIdFromParent !== -1\r\n    ) {\r\n      let doctorId = this.props.detailDoctorIdFromParent;\r\n      let date = event.target.value;\r\n      let res = await getScheduleDoctorByDate(doctorId, date);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          allAvalableTimes: res.data ? res.data : [],\r\n        });\r\n        console.log(\"check res after\", res);\r\n        //day\r\n      }\r\n    }\r\n  };\r\n  handleClickScheduleTime = (time) => {\r\n    console.log(\"check\", time);\r\n    this.setState({\r\n      isOpenModalBooking: true,\r\n      dataScheduleTimeModal: time,\r\n    });\r\n  };\r\n  closeBookingClose = () => {\r\n    this.setState({\r\n      isOpenModalBooking: false,\r\n    });\r\n  };\r\n  isShow = (data) => {\r\n    if (new Date().getTime() < Number(data.date)){\r\n      return true;\r\n    }\r\n    return this.getListShow().includes(data.timeType);\r\n  };\r\n  getListShow = () => {\r\n    var result = [];\r\n    var nowHours = new Date().getHours();\r\n    var type =\r\n      nowHours <= 7\r\n        ? 1\r\n        : nowHours >= 16\r\n        ? 0\r\n        : nowHours <= 11\r\n        ? nowHours - 6\r\n        : nowHours - 7;\r\n    switch (type) {\r\n      case 1:\r\n        result.push(\"T1\")\r\n      case 2:\r\n        result.push(\"T2\")\r\n      case 3:\r\n        result.push(\"T3\")\r\n      case 4:\r\n        result.push(\"T4\")\r\n      case 5:\r\n        result.push(\"T5\")\r\n      case 6:\r\n        result.push(\"T6\")\r\n      case 7:\r\n        result.push(\"T7\")\r\n      case 8:\r\n        result.push(\"T8\")\r\n    }\r\n    return result;\r\n  };\r\n  render() {\r\n    let {\r\n      allDays,\r\n      allAvalableTimes,\r\n      isOpenModalBooking,\r\n      dataScheduleTimeModal,\r\n    } = this.state;\r\n    console.log(\"check 122312312\", allAvalableTimes);\r\n    let { language } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"doctor-schedule-container\">\r\n          <div className=\"all-schedule\">\r\n            <select onChange={(event) => this.handleOnChangeSelect(event)}>\r\n              {allDays &&\r\n                allDays.length > 0 &&\r\n                allDays.map((item, index) => {\r\n                  return (\r\n                    <option key={index} value={item.value}>\r\n                      {item.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"all-available-time\">\r\n            <div className=\"text-calendar\">\r\n              <i className=\"fa fa-calendar-alt\"></i>{\" \"}\r\n              <span>\r\n                <FormattedMessage id=\"patient.detail-doctor.schedule\" />\r\n              </span>\r\n            </div>\r\n            <div className=\"time-content\">\r\n              {allAvalableTimes && allAvalableTimes.length > 0 ? (\r\n                <>\r\n                  <div className=\"time-content-btn\">\r\n                    {allAvalableTimes.map((item, index) => {\r\n                      let timeDisplay =\r\n                        language === LANGUAGES.VI\r\n                          ? item.timeTypeData.valueVi\r\n                          : item.timeTypeData.valueEn;\r\n                      console.log(\"check time\", item);\r\n                      return (\r\n                        <button\r\n                          key={index}\r\n                          onClick={() => this.handleClickScheduleTime(item)}\r\n                          disabled={!this.isShow(item)}\r\n                        >\r\n                          {\" \"}\r\n                          {timeDisplay}\r\n                        </button>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"book-free\">\r\n                    <FormattedMessage id=\"patient.detail-doctor.choose\" />{\" \"}\r\n                    <i className=\"far fa-hand-point-up\"></i>{\" \"}\r\n                    <FormattedMessage id=\"patient.detail-doctor.free\" />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div style={{ fontStyle: \"italic\", fontSize: \"16px\" }}>\r\n                  <FormattedMessage id=\"patient.detail-doctor.no-schedule\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <BookingModal\r\n          isOpenModal={isOpenModalBooking}\r\n          closeBookingClose={this.closeBookingClose}\r\n          dataTime={dataScheduleTimeModal}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Footer.js",["677"],"import React from \"react\";\r\nimport './Footer.scss';\r\nclass Footer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div className=\"font-small pt-4 mt-4\" color=\"red\" >\r\n                    <div fluid className=\"text-center text-md-left\">\r\n\r\n                        <div className=\"content-footer\">\r\n                            <div md=\"4\" className=\"contact-location-booking\">\r\n                                <h5 className=\"title\" style={{ fontSize: '20px', color: 'white', fontWeight: 'bold', textAlign: 'center' }}>\r\n                                    {/* <Icon.GeoAlt size={30} color=\"white\" className=\" mb-1\" /> */}\r\n                                    Địa Chỉ Liên Hệ</h5>\r\n\r\n                                <p className=\"content-footer-contact m-1\" style={{ fontSize: '15px', color: 'white', padding: '10px' }}>\r\n                                    <span className=\"text-content-footer-contact\">CHI NHÁNH TP. HỒ CHÍ MINH</span>\r\n                                    <br></br>\r\n                                    <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3919.3511596167095!2d106.7440271152603!3d10.784393761994389!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31752ed2ffffffff%3A0x1e479a207d5c2285!2sIIG%20Vi%E1%BB%87t%20Nam%20-%20Chi%20nh%C3%A1nh%20TPHCM!5e0!3m2!1svi!2s!4v1657523087155!5m2!1svi!2s\"\r\n                                        width=\"520\" height=\"200\" className=\"mt-3 mb-4\" style={{ borderRadius: '5px' }} />\r\n                                    <br></br>\r\n                                    <span className=\"text-content-footer-contact\">Tầng 1, Tháp 1, The Sun Avenue, 28 Mai Chí Thọ, An Phú, TP.Thủ Đức, TP.HCM</span>\r\n                                </p>\r\n                            </div>\r\n                            <div md=\"3\" className=\"contact-booking\">\r\n                                <h5 className=\"title\" style={{ fontSize: '20px', color: 'white', fontWeight: 'bold', textAlign: 'center' }}>\r\n                                    {/* <Icon.Envelope size={30} color=\"white\" className=\" mb-1 mr-3\" /> */}\r\n                                    Địa Chỉ Email</h5>\r\n                                <span className=\"content-footer-more\" style={{ fontSize: '15px', color: 'white' }}>\r\n                                    anlnd70@wru.vn</span>\r\n                                <h5 className=\"title\" style={{ fontSize: '20px', color: 'white', fontWeight: 'bold', textAlign: 'center' }}>\r\n                                    {/* <Icon.TelephoneInbound size={30} color=\"white\" className=\" mb-1 mr-3\" /> */}\r\n                                    Liên Hệ Với Chúng Tôi Qua</h5>\r\n                                <span className=\" content-footer-more hot-line \" style={{ fontSize: '15px', color: 'white' }}>\r\n                                    Hotline: 0335138167\r\n                                </span>\r\n                            </div>\r\n                            <div md=\"3\" className=\"connect-booking\">\r\n                                <h5 className=\"title\" style={{ fontSize: '20px', color: 'white', fontWeight: 'bold', textAlign: 'left' }}>\r\n                                    {/* <Icon.Globe size={30} color=\"white\" className=\" mb-1 mr-3\" /> */}\r\n                                    Kết Nối Với Chúng Tôi</h5>\r\n                                <div className=\"contact-with\" style={{ display: 'grid' }}>\r\n                                    <a href=\"https://www.facebook.com/profile.php?id=100028034513044\" style={{ padding: '5px', color: 'white', textDecoration: 'none' }}>\r\n                                        {/* <Icon.Facebook size={50} color=\"#0d8af0\" style={{ background: 'white' }} className=\"rounded-circle m-2\" /> */}\r\n                                        {\r\n                                            '  '\r\n                                        }Facebook\r\n                                    </a>\r\n                                    <a href=\"https://www.facebook.com/profile.php?id=100028034513044\" style={{ padding: '5px', color: 'white', textDecoration: 'none' }}>\r\n                                        {/* <Icon.Messenger href=\"https://www.facebook.com/messages/t/100005880064567/\" size={50} color=\"#874189\" style={{ background: 'none' }} className=\"rounded-circle m-2\" /> */}\r\n                                        {\r\n                                            '  '\r\n                                        }Messenger\r\n                                    </a>\r\n\r\n                                    <a href=\"https://www.facebook.com/profile.php?id=100028034513044\" style={{ padding: '5px', color: 'white', textDecoration: 'none' }} className=\"rounded-circle m-2\">\r\n                                        {/* <Icon.Twitter size={50} color=\"#0d8af0\" /> */}\r\n                                        {\r\n                                            '  '\r\n                                        }\r\n                                        Twiter\r\n                                    </a>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div md=\"2\" className=\"work-booking\">\r\n                                <h5 className=\"title\" style={{ fontSize: '20px', color: 'white', fontWeight: 'bold', textAlign: 'left' }}>\r\n                                    {/* <Icon.Alarm size={30} color=\"white\" className=\" mb-1 mr-3\" /> */}\r\n                                    Thời Gian Làm Việc</h5>\r\n                                <p className=\"content-footer m-3 \" style={{ fontSize: '15px', color: 'white' }}>\r\n                                    Sáng: 08:00 - 12:00</p>\r\n                                <p className=\"content-footer m-3 \" style={{ fontSize: '15px', color: 'white' }}>\r\n                                    (Thứ Hai - thứ Bảy)</p>\r\n                                <p className=\"content-footer m-3 \" style={{ fontSize: '15px', color: 'white' }}>\r\n                                    Chiều: 13:30 - 17:30</p>\r\n                                <p className=\"content-footer m-3 \" style={{ fontSize: '15px', color: 'white' }}>\r\n                                    (Thứ Hai - Thứ Sáu)</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"footer-copyright text-center py-3\">\r\n                        <div fluid>\r\n                            <span className=\"copyright\">&copy; {new Date().getFullYear()} Copyright: by BOOKING CARE 2022. All rights reserved.</span>\r\n                            <br></br>\r\n                            <span className=\"copyright\">Designed and Developed by Lê Nam Đại An</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Doctor\\DoctorExtraInfor.js",["678","679"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./DoctorExtraInfor.scss\";\r\nimport moment from \"moment\";\r\n\r\nimport { getExtraInforDoctorById } from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nclass DoctorExtraInfor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowDetailInfor: false,\r\n      extraInfor: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.doctorIdFromParent) {\r\n      let res = await getExtraInforDoctorById(this.props.doctorIdFromParent);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          extraInfor: res.data,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n    if (this.props.doctorIdFromParent !== prevProps.doctorIdFromParent) {\r\n      let res = await getExtraInforDoctorById(this.props.doctorIdFromParent);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          extraInfor: res.data,\r\n        });\r\n      }\r\n\r\n      console.log(\"chekc data doctor id\", res);\r\n    }\r\n  }\r\n  showHideDetailInfo = (status) => {\r\n    this.setState({\r\n      isShowDetailInfor: status,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { isShowDetailInfor, extraInfor } = this.state;\r\n    let { language } = this.props;\r\n    console.log(\"check data state\", this.state);\r\n    return (\r\n      <div className=\"doctor-extra-info-container\">\r\n        <div className=\"content-up\">\r\n          <div className=\"text-address\">\r\n            <FormattedMessage id=\"patient.extra-infor-doctor.text-address\" />\r\n          </div>\r\n          <div className=\"name-clinic\">\r\n            {extraInfor && extraInfor.nameClinic ? extraInfor.nameClinic : \"\"}\r\n          </div>\r\n          <div className=\"detail-address\">\r\n            {extraInfor && extraInfor.addressClinic\r\n              ? extraInfor.addressClinic\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"content-down\">\r\n          {isShowDetailInfor === false && (\r\n            <div className=\"\">\r\n              <FormattedMessage id=\"patient.extra-infor-doctor.price\" />\r\n              {extraInfor &&\r\n                extraInfor.priceTypeData &&\r\n                language === LANGUAGES.VI && (\r\n                  <NumberFormat\r\n                    value={extraInfor.priceTypeData.valueVi}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    suffix={\"VND\"}\r\n                  />\r\n                )}\r\n              {extraInfor &&\r\n                extraInfor.priceTypeData &&\r\n                language === LANGUAGES.EN && (\r\n                  <NumberFormat\r\n                    value={extraInfor.priceTypeData.valueEn}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    suffix={\"$\"}\r\n                  />\r\n                )}\r\n              <span\r\n                className=\"show-detail\"\r\n                onClick={() => this.showHideDetailInfo(true)}\r\n              >\r\n                <FormattedMessage id=\"patient.extra-infor-doctor.detail\" />\r\n              </span>\r\n            </div>\r\n          )}\r\n          {isShowDetailInfor === true && (\r\n            <div className=\"\">\r\n              <div className=\"\">\r\n                <FormattedMessage id=\"patient.extra-infor-doctor.price\" />\r\n                {extraInfor &&\r\n                  extraInfor.priceTypeData &&\r\n                  language === LANGUAGES.VI && (\r\n                    <NumberFormat\r\n                      value={extraInfor.priceTypeData.valueVi}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      suffix={\"VND\"}\r\n                    />\r\n                  )}\r\n                {extraInfor &&\r\n                  extraInfor.priceTypeData &&\r\n                  language === LANGUAGES.EN && (\r\n                    <NumberFormat\r\n                      value={extraInfor.priceTypeData.valueEn}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      suffix={\"$\"}\r\n                    />\r\n                  )}\r\n              </div>\r\n              <div>{extraInfor && extraInfor.note ? extraInfor.note : \"\"}</div>\r\n              <div>\r\n                <FormattedMessage id=\"patient.extra-infor-doctor.payment\" />\r\n                {extraInfor &&\r\n                extraInfor.paymentTypeData &&\r\n                language === LANGUAGES.VI\r\n                  ? extraInfor.paymentTypeData.valueVi\r\n                  : \"\"}\r\n                {extraInfor &&\r\n                extraInfor.paymentTypeData &&\r\n                language === LANGUAGES.EN\r\n                  ? extraInfor.paymentTypeData.valueEn\r\n                  : \"\"}\r\n              </div>\r\n              <div>\r\n                <span\r\n                  className=\"hide-detail\"\r\n                  onClick={() => this.showHideDetailInfo(false)}\r\n                >\r\n                  <FormattedMessage id=\"patient.extra-infor-doctor.hide-price\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorExtraInfor);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Doctor\\ProfileDoctor.js",["680"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./ProfileDoctor.scss\";\r\nimport moment from \"moment\";\r\nimport BookingModal from \"./Modal/BookingModal\";\r\nimport { getProfileDoctorById } from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nclass ProfileDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataProfile: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let data = await this.getInforDoctor(this.props.doctorId);\r\n    this.setState({\r\n      dataProfile: data,\r\n    });\r\n  }\r\n  getInforDoctor = async (id) => {\r\n    let result = {};\r\n    if (id) {\r\n      let res = await getProfileDoctorById(id);\r\n      if (res && res.errCode === 0) {\r\n        result = res.data;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n    if (this.props.doctorId !== prevProps.doctorId) {\r\n      // this.getInforDoctor(this.props.doctorId)\r\n    }\r\n  }\r\n\r\n  renderTimeBooking = (dataTime, language) => {\r\n    console.log(\"check 123123d d\", dataTime);\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let date =\r\n        language === LANGUAGES.VI\r\n          ? moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\")\r\n          : moment\r\n              .unix(+dataTime.date / 1000)\r\n              .locale(\"en\")\r\n              .format(\"ddd - MM/DD/YYYY\");\r\n      return (\r\n        <>\r\n          <div>\r\n            {language === LANGUAGES.VI &&\r\n              dataTime &&\r\n              dataTime.timeTypeData.valueVi + \" \" + date}\r\n            {language === LANGUAGES.EN &&\r\n              dataTime &&\r\n              dataTime.timeTypeData.valueEn + \" \" + date}\r\n          </div>\r\n          <div>\r\n            <FormattedMessage id=\"patient.booking-modal.price-bookign\" />\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n    return <></>;\r\n  };\r\n  render() {\r\n    console.log(\"check state file profile DOctor\", this.state);\r\n    let { dataProfile } = this.state;\r\n    let {\r\n      language,\r\n      isShowDescriptionDoctor,\r\n      dataTime,\r\n      isShowPrice,\r\n      isShowLinkDetail,\r\n      doctorId,\r\n    } = this.props;\r\n    let nameVi = \"\",\r\n      nameEn = \"\";\r\n    if (dataProfile && dataProfile.positionData) {\r\n      nameVi = `${dataProfile.positionData.valueVi},  ${dataProfile.lastName} ${dataProfile.firstName} `;\r\n      nameEn = `${dataProfile.positionData.valueEn}, ${dataProfile.firstName} ${dataProfile.lastName}`;\r\n    }\r\n    console.log(\"check datatime\", dataTime);\r\n    return (\r\n      <>\r\n      <BookingModal  dataProfileprop={dataProfile} style = {{ display:'none'}} />\r\n        <div className=\"profile-doctor-container\">\r\n          <div className=\"intro-doctor\">\r\n            <div\r\n              className=\"content-left\"\r\n              style={{\r\n                backgroundImage: `url(\"${\r\n                  dataProfile && dataProfile.image ? dataProfile.image : \"\"\r\n                }\")`,\r\n              }}\r\n            ></div>\r\n            <div className=\"content-right\">\r\n              <div className=\"content-up\">\r\n                {language === LANGUAGES.VI ? nameVi : nameEn}\r\n              </div>\r\n              <div className=\"content-down\">\r\n                {isShowDescriptionDoctor === true ? (\r\n                  <>\r\n                    {dataProfile &&\r\n                      dataProfile.Markdown &&\r\n                      dataProfile.Markdown.description && (\r\n                        <span>{dataProfile.Markdown.description}</span>\r\n                      )}\r\n                  </>\r\n                ) : (\r\n                  <>{this.renderTimeBooking(dataTime, language)}</>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {isShowLinkDetail === true && (\r\n            <div className=\"view-detail-doctor\">\r\n              <Link\r\n                to={`/detail-doctor/${doctorId}`}\r\n                className=\"view-detail-link\"\r\n              >\r\n                Xem Thêm\r\n              </Link>\r\n            </div>\r\n          )}\r\n          {isShowPrice === true && (\r\n            <div className=\"price\">\r\n              {\" \"}\r\n              <FormattedMessage id=\"patient.booking-modal.price-book\" />\r\n              {dataProfile &&\r\n                dataProfile.Doctor_Info &&\r\n                language === LANGUAGES.VI && (\r\n                  <NumberFormat\r\n                    value={dataProfile.Doctor_Info.priceTypeData.valueVi}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    suffix={\"VND\"}\r\n                  />\r\n                )}\r\n              {dataProfile &&\r\n                dataProfile.Doctor_Info &&\r\n                language === LANGUAGES.EN && (\r\n                  <NumberFormat\r\n                    value={dataProfile.Doctor_Info.priceTypeData.valueEn}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    suffix={\"$\"}\r\n                  />\r\n                )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDoctor);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\ManageDoctor.js",["681","682","683","684","685","686","687","688","689"],"import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { LANGUAGES, CRUD_ACTIONS } from \"../../../utils\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport \"./ManageDoctor.scss\";\r\nimport moment from \"moment\";\r\nimport Select from \"react-select\";\r\nimport { getDetailInfoDoctor } from \"../../../services/userService\";\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n// Finish!\r\n\r\nclass ManageDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contentMarkdown: \"\",\r\n      contentHTML: \"\",\r\n      selectedOption: \"\",\r\n      description: \"\",\r\n      listDoctor: [],\r\n      hasOldData: false,\r\n\r\n      //save to doctor table\r\n      listPrice: [],\r\n      listPayment: [],\r\n      listProvince: [],\r\n      listClinic: [],\r\n      listSpecialty: [],\r\n\r\n      selectedPrice: \"\",\r\n      selectedPayment: \"\",\r\n      selectedProvince: \"\",\r\n\r\n      selectedClinic: \"\",\r\n      selectedSpecialty: \"\",\r\n      nameClinic: \"\",\r\n      addressClinic: \"\",\r\n      note: \"\",\r\n      clinicId: \"\",\r\n      specialtyId: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchAllDoctorsRedux();\r\n    this.props.getRequiredDoctorInfo();\r\n  }\r\n  buildDataInputSelect = (inputData, type) => {\r\n    let result = [];\r\n    let language = this.props.language;\r\n    if (inputData && inputData.length > 0) {\r\n      if (type === \"USER\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          let labelVi = ` ${item.lastName} ${item.firstName}`;\r\n\r\n          let labelEn = ` ${item.firstName} ${item.lastName}`;\r\n\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.id;\r\n          result.push(object);\r\n        });\r\n      }\r\n      if (type === \"PRICE\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          let labelVi = `${item.valueVi} VND`;\r\n          let labelEn = `${item.valueEn} USD`;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.keyMap;\r\n          result.push(object);\r\n          // console.log(\"item price\", item);\r\n        });\r\n      }\r\n      if (type === \"PAYMENT\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          let labelVi = `${item.valueVi}`;\r\n          let labelEn = `${item.valueEn}`;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.keyMap;\r\n          result.push(object);\r\n          // console.log(\"item payment\", item);\r\n        });\r\n      }\r\n      if (type === \"PROVINCE\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          let labelVi = `${item.valueVi}`;\r\n          let labelEn = `${item.valueEn}`;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.keyMap;\r\n          result.push(object);\r\n        });\r\n      }\r\n      if (type === \"SPECIALTY\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          object.label = item.name;\r\n          object.value = item.id;\r\n          result.push(object);\r\n          console.log(\"item specialty\", item);\r\n        });\r\n      }\r\n      if (type === \"CLINIC\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          object.label = item.name;\r\n          object.value = item.id;\r\n          result.push(object);\r\n          console.log(\"item clinic\", item);\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.allDoctors !== this.props.allDoctors) {\r\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors, \"USER\");\r\n      this.setState({\r\n        listDoctor: dataSelect,\r\n      });\r\n    }\r\n    if (prevProps.language !== this.props.language) {\r\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors);\r\n      let { resPayment, resPrice, resProvince } =\r\n        this.props.allRequiredDoctorInfo;\r\n      let dataSelectPrice = this.buildDataInputSelect(resPrice, \"PRICE\");\r\n      let dataSelectPayment = this.buildDataInputSelect(resPayment, \"PAYMENT\");\r\n      this.setState({\r\n        listDoctor: dataSelect,\r\n        listPrice: dataSelectPrice,\r\n        listPayment: dataSelectPayment,\r\n      });\r\n    }\r\n    if (prevProps.allRequiredDoctorInfo !== this.props.allRequiredDoctorInfo) {\r\n      let { resPayment, resPrice, resProvince, resSpecialty, resClinic } =\r\n        this.props.allRequiredDoctorInfo;\r\n      let dataSelectPrice = this.buildDataInputSelect(resPrice, \"PRICE\");\r\n      let dataSelectPayment = this.buildDataInputSelect(resPayment, \"PAYMENT\");\r\n      let dataSelectProvince = this.buildDataInputSelect(\r\n        resProvince,\r\n        \"PROVINCE\"\r\n      );\r\n      let dataSelectSpecialty = this.buildDataInputSelect(\r\n        resSpecialty,\r\n        \"SPECIALTY\"\r\n      );\r\n      let dataSelectClinic = this.buildDataInputSelect(resClinic, \"CLINIC\");\r\n      console.log(\"resProvince\", resProvince);\r\n      console.log(\"dataSelectProvince\", dataSelectProvince);\r\n      console.log(\"dataSelectSpecialty\", dataSelectSpecialty);\r\n      this.setState({\r\n        listPrice: dataSelectPrice,\r\n        listPayment: dataSelectPayment,\r\n        listProvince: dataSelectProvince,\r\n        listSpecialty: dataSelectSpecialty,\r\n        listClinic: dataSelectClinic,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      contentMarkdown: text,\r\n      contentHTML: html,\r\n    });\r\n  };\r\n  handleSaveContentMarkdown = () => {\r\n    let { hasOldData } = this.state;\r\n\r\n    this.props.saveDetailDoctor({\r\n      contentHTML: this.state.contentHTML,\r\n      contentMarkdown: this.state.contentMarkdown,\r\n      description: this.state.description,\r\n      doctorId: this.state.selectedOption.value,\r\n      action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\r\n      selectedPrice: this.state.selectedPrice.value,\r\n      selectedPayment: this.state.selectedPayment.value,\r\n      selectedProvince: this.state.selectedProvince.value,\r\n      nameClinic: this.state.nameClinic,\r\n      addressClinic: this.state.addressClinic,\r\n      note: this.state.note,\r\n      clinicId:\r\n        this.state.selectedClinic && this.state.selectedClinic.value\r\n          ? this.state.selectedClinic.value\r\n          : \"\",\r\n      specialtyId: this.state.selectedSpecialty.value,\r\n    });\r\n  };\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    let { listPayment, listPrice, listProvince, listSpecialty, listClinic } =\r\n      this.state;\r\n    let res = await getDetailInfoDoctor(selectedOption.value);\r\n    if (res && res.errCode === 0 && res.data && res.data.Markdown) {\r\n      let markdown = res.data.Markdown;\r\n      let addressClinic = \"\",\r\n        nameClinic = \"\",\r\n        note = \"\",\r\n        paymentId = \"\",\r\n        priceId = \"\",\r\n        provinceId = \"\",\r\n        specialtyId = \"\",\r\n        clinicId,\r\n        selectedPayment = \"\",\r\n        selectedPrice = \"\",\r\n        selectedProvince = \"\",\r\n        selectedSpecialty = \"\",\r\n        selectedClinic = \"\";\r\n\r\n      if (res.data.Doctor_Info) {\r\n        addressClinic = res.data.Doctor_Info.addressClinic;\r\n        nameClinic = res.data.Doctor_Info.nameClinic;\r\n        note = res.data.Doctor_Info.note;\r\n        paymentId = res.data.Doctor_Info.paymentId;\r\n        priceId = res.data.Doctor_Info.priceId;\r\n        provinceId = res.data.Doctor_Info.provinceId;\r\n        specialtyId = res.data.Doctor_Info.specialtyId;\r\n\r\n        clinicId = res.data.Doctor_Info.clinicId;\r\n        selectedPayment = listPayment.find((item) => {\r\n          return item && item.value === paymentId;\r\n        });\r\n        console.log(\r\n          \"check find array\",\r\n          selectedPayment,\r\n          listPayment,\r\n          paymentId\r\n        );\r\n        selectedPrice = listPrice.find((item) => {\r\n          return item && item.value === priceId;\r\n        });\r\n        console.log(\"check find array\", selectedPrice, listPrice, priceId);\r\n        selectedProvince = listProvince.find((item) => {\r\n          return item && item.value === provinceId;\r\n        });\r\n        selectedSpecialty = listSpecialty.find((item) => {\r\n          return item && item.value === specialtyId;\r\n        });\r\n        selectedClinic = listClinic.find((item) => {\r\n          return item && item.value === clinicId;\r\n        });\r\n\r\n        console.log(\r\n          \"check find array\",\r\n          selectedProvince,\r\n          listProvince,\r\n          provinceId\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        contentHTML: markdown.contentHTML,\r\n        contentMarkdown: markdown.contentMarkdown,\r\n        description: markdown.description,\r\n        hasOldData: true,\r\n        addressClinic: addressClinic,\r\n        nameClinic: nameClinic,\r\n        note: note,\r\n        selectedPayment: selectedPayment,\r\n        selectedPrice: selectedPrice,\r\n        selectedProvince: selectedProvince,\r\n        selectedSpecialty: selectedSpecialty,\r\n        selectedClinic: selectedClinic,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        contentHTML: \"\",\r\n        contentMarkdown: \"\",\r\n        description: \"\",\r\n        hasOldData: false,\r\n        addressClinic: \"\",\r\n        nameClinic: \"\",\r\n        note: \"\",\r\n        selectedPayment: \"\",\r\n        selectedPrice: \"\",\r\n        selectedProvince: \"\",\r\n        selectedSpecialty: \"\",\r\n        selectedClinic: \"\",\r\n      });\r\n    }\r\n  };\r\n  handleChangeSelectDoctorInfo = async (selectedOption, name) => {\r\n    let stateName = name.name;\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[stateName] = selectedOption;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n    console.log(\"select oop, name\", selectedOption, stateName, stateCopy);\r\n  };\r\n\r\n  handleOnChangeText = (event, id) => {\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = event.target.value;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n  };\r\n  render() {\r\n    let { hasOldData, listSpecialty } = this.state;\r\n    // console.log(\"render\", this.state);\r\n    console.log(\"check state\", this.state);\r\n    return (\r\n      <div className=\"manage-doctor-container\">\r\n        <div className=\"manage-doctor-title\">\r\n          {\" \"}\r\n          <FormattedMessage id=\"admin.manage-doctor.title\" />\r\n        </div>\r\n        <div className=\"more-info\">\r\n          <div className=\"content-left form-group\">\r\n            <label>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.select-doctor\" />\r\n            </label>\r\n            <Select\r\n              value={this.state.selectedOption}\r\n              onChange={this.handleChangeSelect}\r\n              options={this.state.listDoctor}\r\n              placeholder={\r\n                <FormattedMessage id=\"admin.manage-doctor.select-doctor\" />\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"content-right\">\r\n            <label className=\"\">\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.info-doctor\" />\r\n            </label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              rows=\"5\"\r\n              onChange={(event) =>\r\n                this.handleOnChangeText(event, \"description\")\r\n              }\r\n              value={this.state.description}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className=\"more-info-extra row\">\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              <FormattedMessage id=\"admin.manage-doctor.price\" />\r\n            </label>\r\n            <Select\r\n              value={this.state.selectedPrice}\r\n              onChange={this.handleChangeSelectDoctorInfo}\r\n              options={this.state.listPrice}\r\n              placeholder={<FormattedMessage id=\"admin.manage-doctor.price\" />}\r\n              name=\"selectedPrice\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              <FormattedMessage id=\"admin.manage-doctor.payment\" />\r\n            </label>\r\n            <Select\r\n              value={this.state.selectedPayment}\r\n              onChange={this.handleChangeSelectDoctorInfo}\r\n              options={this.state.listPayment}\r\n              placeholder={\r\n                <FormattedMessage id=\"admin.manage-doctor.payment\" />\r\n              }\r\n              name=\"selectedPayment\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.province\" />\r\n            </label>\r\n\r\n            <Select\r\n              value={this.state.selectedProvince}\r\n              onChange={this.handleChangeSelectDoctorInfo}\r\n              options={this.state.listProvince}\r\n              placeholder={\r\n                <FormattedMessage id=\"admin.manage-doctor.province\" />\r\n              }\r\n              name=\"selectedProvince\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.nameClinic\" />\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(event) => this.handleOnChangeText(event, \"nameClinic\")}\r\n              value={this.state.nameClinic}\r\n            />\r\n          </div>\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.addressClinic\" />\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(event) =>\r\n                this.handleOnChangeText(event, \"addressClinic\")\r\n              }\r\n              value={this.state.addressClinic}\r\n            />\r\n          </div>\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.note\" />\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(event) => this.handleOnChangeText(event, \"note\")}\r\n              value={this.state.note}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-4 form-group\">\r\n              <label>\r\n                {\" \"}\r\n                <FormattedMessage id=\"admin.manage-doctor.specialty\" />\r\n              </label>\r\n              <Select\r\n                value={this.state.selectedSpecialty}\r\n                onChange={this.handleChangeSelectDoctorInfo}\r\n                name=\"selectedSpecialty\"\r\n                options={this.state.listSpecialty}\r\n                placeholder={\r\n                  <FormattedMessage id=\"admin.manage-doctor.specialty\" />\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-4 form-group\">\r\n              <label>\r\n                <FormattedMessage id=\"admin.manage-doctor.clinic\" />\r\n              </label>\r\n              <Select\r\n                value={this.state.selectedClinic}\r\n                onChange={this.handleChangeSelectDoctorInfo}\r\n                name=\"selectedClinic\"\r\n                options={this.state.listClinic}\r\n                placeholder={\r\n                  <FormattedMessage id=\"admin.manage-doctor.clinic\" />\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"manage-doctor-editor\">\r\n          <label>\r\n            <FormattedMessage id=\"admin.manage-doctor.biography-doctor\" />\r\n          </label>\r\n          <MdEditor\r\n            style={{ height: \"300px\" }}\r\n            renderHTML={(text) => mdParser.render(text)}\r\n            onChange={this.handleEditorChange}\r\n            value={this.state.contentMarkdown}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => this.handleSaveContentMarkdown()}\r\n          className={\r\n            hasOldData === true\r\n              ? \"save-content-doctor\"\r\n              : \"create-content-doctor\"\r\n          }\r\n        >\r\n          {hasOldData === true ? (\r\n            <span>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.save-info\" />\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.create-info\" />\r\n            </span>\r\n          )}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allDoctors: state.admin.allDoctors,\r\n    language: state.app.language,\r\n    allRequiredDoctorInfo: state.admin.allRequiredDoctorInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAllDoctorsRedux: (id) => dispatch(actions.fetchAllDoctors(id)),\r\n    getRequiredDoctorInfo: () => dispatch(actions.getRequiredDoctorInfo()),\r\n    saveDetailDoctor: (data) => dispatch(actions.saveDetailDoctor(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\UserRedux.js",["690"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport * as actions from \"../../../store/actions\";\r\n// import { getAllCodeService } from \"../../../services/userService\";\r\nimport { LANGUAGES, CRUD_ACTIONS, CommonUtils } from \"../../../utils\";\r\nimport \"./UserRedux.scss\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\"; // This only needs to be imported once in your app\r\nimport TableManageUser from \"./TableManageUser\";\r\n\r\nclass UserRedux extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      genderArr: [],\r\n      positionArr: [],\r\n      roleArr: [],\r\n      previewImg: \"\",\r\n      isOpen: false,\r\n\r\n      //Khoi tao\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phoneNumber: \"\",\r\n      gender: \"\",\r\n      position: \"\",\r\n      role: \"\",\r\n      avatar: \"\",\r\n\r\n      action: \"\",\r\n      userEditId: \"\",\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.gendersRedux !== this.props.gendersRedux) {\r\n      //render lai gan value vao ben\r\n      let arrGender = this.props.gendersRedux;\r\n      this.setState({\r\n        genderArr: arrGender,\r\n        gender: arrGender && arrGender.length > 0 ? arrGender[0].keyMap : \"\",\r\n      });\r\n    }\r\n    if (prevProps.positionsRedux !== this.props.positionsRedux) {\r\n      //render lai gan value vao ben\r\n      let arrPositions = this.props.positionsRedux;\r\n      this.setState({\r\n        positionArr: arrPositions,\r\n        position:\r\n          arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : \"\",\r\n      });\r\n    }\r\n    if (prevProps.rolesRedux !== this.props.rolesRedux) {\r\n      let arrRoles = this.props.rolesRedux;\r\n      //render lai gan value vao ben\r\n      this.setState({\r\n        roleArr: this.props.rolesRedux,\r\n        role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : \"\",\r\n      });\r\n    }\r\n    if (prevProps.listUser !== this.props.listUser) {\r\n      let arrGender = this.props.gendersRedux;\r\n      let arrPositions = this.props.positionsRedux;\r\n      let arrRoles = this.props.rolesRedux;\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        address: \"\",\r\n        phoneNumber: \"\",\r\n        avatar: \"\",\r\n        previewImg: \"\",\r\n\r\n        gender: arrGender && arrGender.length > 0 ? arrGender[0].keyMap : \"\",\r\n        position:\r\n          arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : \"\",\r\n        role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : \"\",\r\n\r\n        action: CRUD_ACTIONS.CREATE,\r\n      });\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.props.getGenderStart();\r\n    this.props.getPositionStart();\r\n    this.props.getRoleStart();\r\n    // this.props.dispatch(actions.fetchGenderStart());\r\n  }\r\n\r\n  // try {\r\n  //   let res = await getAllCodeService(\"gender\");\r\n  //   if (res && res.errCode === 0) {\r\n  //     this.setState({\r\n  //       genderArr: res.data,\r\n  //     });\r\n  //   }\r\n  // } catch (e) {\r\n  //   console.log(e);\r\n  // }\r\n\r\n  handleOnChangeImg = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    console.log(file);\r\n    if (file) {\r\n      let base64 = await CommonUtils.convertBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImg: objectUrl,\r\n        avatar: base64,\r\n      });\r\n    }\r\n  };\r\n  openPreviewImg = () => {\r\n    if (!this.state.previewImg) return;\r\n    this.setState({\r\n      isOpen: true,\r\n    });\r\n  };\r\n  handleSaveUser = () => {\r\n    let isValid = this.checkValidInput();\r\n    if (isValid === false) return;\r\n\r\n    let { action } = this.state;\r\n\r\n    ///check action\r\n\r\n    if (action === CRUD_ACTIONS.CREATE) {\r\n      this.props.createNewUser({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        address: this.state.address,\r\n        phoneNumber: this.state.phoneNumber,\r\n        gender: this.state.gender,\r\n        roleId: this.state.role,\r\n        positionId: this.state.position,\r\n        avatar: this.state.avatar,\r\n      });\r\n    }\r\n    if (action === CRUD_ACTIONS.EDIT) {\r\n      //redux edit\r\n      this.props.editAUserRedux({\r\n        id: this.state.userEditId,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        address: this.state.address,\r\n        phoneNumber: this.state.phoneNumber,\r\n        gender: this.state.gender,\r\n        roleId: this.state.role,\r\n        positionId: this.state.position,\r\n        avatar: this.state.avatar,\r\n      });\r\n    }\r\n  };\r\n\r\n  checkValidInput = () => {\r\n    let isValid = true;\r\n    let arrCheck = [\r\n      \"email\",\r\n      \"password\",\r\n      \"firstName\",\r\n      \"lastName\",\r\n      \"address\",\r\n      \"phoneNumber\",\r\n    ];\r\n    for (let i = 0; i < arrCheck.length; i++) {\r\n      if (!this.state[arrCheck[i]]) {\r\n        isValid = false;\r\n        alert(\"input required :\" + arrCheck[i]);\r\n        break;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n  onChangeInput = (event, id) => {\r\n    let copyState = { ...this.state };\r\n\r\n    copyState[id] = event.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  handleEditUserFromParent = (user) => {\r\n    let imageBase64 = \"\";\r\n    if (user.image) {\r\n      imageBase64 = new Buffer(user.image, \"base64\").toString(\"binary\");\r\n    }\r\n    this.setState({\r\n      email: user.email,\r\n      password: \"HARDCODE\",\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      address: user.address,\r\n      phoneNumber: user.phoneNumber,\r\n      gender: user.gender,\r\n      roleId: user.role,\r\n      position: user.position,\r\n      avatar: \"\",\r\n      previewImg: imageBase64,\r\n      action: CRUD_ACTIONS.EDIT,\r\n\r\n      userEditId: user.id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //gan biet cho mang\r\n    let genders = this.state.genderArr;\r\n    let positions = this.state.positionArr;\r\n    let roles = this.state.roleArr;\r\n\r\n    let language = this.props.language;\r\n    let isGender = this.state.isLoadingGender;\r\n\r\n    let {\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      address,\r\n      phoneNumber,\r\n      role,\r\n      position,\r\n      gender,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"user-redux-container\"  style={{height:'960px'}}>\r\n        <div className=\"title \"> User redux</div>\r\n        <div className=\"col-12\">\r\n          {/* {isGender === true ? \"loading gender\" : \"failed\"} */}\r\n        </div>\r\n        <div className=\"user-redux-body\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 my-3\">\r\n                <FormattedMessage id=\"manage-user.add\" />\r\n              </div>\r\n\r\n              <div className=\"col-3\">\r\n                <label>\r\n                  <FormattedMessage id=\"manage-user.email\" />\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"email\");\r\n                  }}\r\n                  disabled={\r\n                    this.state.action === CRUD_ACTIONS.EDIT ? true : false\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <label>\r\n                  <FormattedMessage id=\"manage-user.password\" />\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"password\");\r\n                  }}\r\n                  disabled={\r\n                    this.state.action === CRUD_ACTIONS.EDIT ? true : false\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <label>\r\n                  <FormattedMessage id=\"manage-user.firstName\" />\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  value={firstName}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"firstName\");\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <label>\r\n                  <FormattedMessage id=\"manage-user.lastName\" />\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  value={lastName}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"lastName\");\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col-9\">\r\n                <label>\r\n                  <FormattedMessage id=\"manage-user.address\" />\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  value={address}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"address\");\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <label>\r\n                  <FormattedMessage id=\"manage-user.phone\" />\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  value={phoneNumber}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"phoneNumber\");\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <label>\r\n                  <FormattedMessage id=\"manage-user.gender\" />\r\n                </label>\r\n                <select\r\n                  id=\"inputState\"\r\n                  className=\"form-control\"\r\n                  value={gender}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"gender\");\r\n                  }}\r\n                >\r\n                  {genders &&\r\n                    genders.length > 0 &&\r\n                    genders.map((item, index) => {\r\n                      return (\r\n                        <option key={index} value={item.keyMap}>\r\n                          {language === LANGUAGES.VI\r\n                            ? item.valueVi\r\n                            : item.valueEn}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <label>\r\n                  <FormattedMessage id=\"manage-user.position\" />\r\n                </label>\r\n                <select\r\n                  id=\"inputState\"\r\n                  className=\"form-control\"\r\n                  value={position}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"position\");\r\n                  }}\r\n                >\r\n                  {positions &&\r\n                    positions.length > 0 &&\r\n                    positions.map((item, index) => {\r\n                      return (\r\n                        <option key={index} value={item.keyMap}>\r\n                          {language === LANGUAGES.VI\r\n                            ? item.valueVi\r\n                            : item.valueEn}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <label>\r\n                  <FormattedMessage id=\"manage-user.role\" />\r\n                </label>\r\n                <select\r\n                  value={role}\r\n                  id=\"inputState\"\r\n                  className=\"form-control\"\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"role\");\r\n                  }}\r\n                >\r\n                  {roles &&\r\n                    roles.length > 0 &&\r\n                    roles.map((item, index) => {\r\n                      return (\r\n                        <option key={index} value={item.keyMap}>\r\n                          {language === LANGUAGES.VI\r\n                            ? item.valueVi\r\n                            : item.valueEn}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <label>\r\n                  <FormattedMessage id=\"manage-user.image\" />\r\n                </label>\r\n                <div className=\"preview-container-img\">\r\n                  <input\r\n                    id=\"preview-img\"\r\n                    type=\"file\"\r\n                    hidden\r\n                    onChange={(event) => {\r\n                      this.handleOnChangeImg(event);\r\n                    }}\r\n                  />\r\n                  <label className=\"label-upload\" htmlFor=\"preview-img\">\r\n                    Tải Ảnh <i className=\"fa fa-upload\"></i>\r\n                  </label>\r\n                  <div\r\n                    className=\"preview-img\"\r\n                    style={{\r\n                      backgroundImage: `url(\"${this.state.previewImg}\")`,\r\n                    }}\r\n                    onClick={() => this.openPreviewImg()}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-12 my-5\">\r\n                {\" \"}\r\n                <button\r\n                  className={\r\n                    this.state.action === CRUD_ACTIONS.EDIT\r\n                      ? \"btn btn-warning\"\r\n                      : \"btn btn-primary\"\r\n                  }\r\n                  onClick={() => this.handleSaveUser()}\r\n                >\r\n                  {this.state.action === CRUD_ACTIONS.EDIT ? (\r\n                    <FormattedMessage id=\"manage-user.edit\" />\r\n                  ) : (\r\n                    <FormattedMessage id=\"manage-user.save\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"col-12 mb-̀5\">\r\n                <TableManageUser\r\n                  handleEditUserFromParent={this.handleEditUserFromParent}\r\n                  action={this.state.action}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.isOpen === true && (\r\n          <Lightbox\r\n            mainSrc={this.state.previewImg}\r\n            onCloseRequest={() => this.setState({ isOpen: false })}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoadingGender: state.admin.isLoadingGender,\r\n    language: state.app.language,\r\n    gendersRedux: state.admin.genders,\r\n    positionsRedux: state.admin.positions,\r\n    listUser: state.admin.users,\r\n    rolesRedux: state.admin.roles,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n    getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n    getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n    createNewUser: (data) => dispatch(actions.createNewUser(data)),\r\n    fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\r\n    editAUserRedux: (data) => dispatch(actions.editAUser(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\UserManage.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\ManagePatient.js",["691","692","693","694","695"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./ManagePatient.scss\";\r\nimport moment from \"moment\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport {\r\n  getAllPatientForDoctor,\r\n  postSendRemedy,\r\n} from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport RemedyModel from \"./RemedyModel\";\r\nimport WatchPatientModel from \"./WatchPatientModel\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport CreatePrecription from \"./CreatePrecription\";\r\nclass ManagePatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentDate: moment(new Date()).startOf(\"day\").valueOf(),\r\n      dataPatient: [],\r\n      isOpenRemedyModal: false,\r\n      isOpenWatchPatient: false,\r\n      dataModel: {},\r\n      isShowLoading: false,\r\n      showCreatePresiton: false,\r\n      Idtesst: ''\r\n    };\r\n  }\r\n\r\n  handleOnchangeDatePiker = (date) => {\r\n    this.setState(\r\n      {\r\n        currentDate: date[0],\r\n      },\r\n      async () => {\r\n        await this.getDatePatient();\r\n      }\r\n    );\r\n  };\r\n\r\n  // $(window).on(\"load resize \", function() {\r\n  //   var scrollWidth = $('.tbl-content').width() - $('.tbl-content table').width();\r\n  //   $('.tbl-header').css({'padding-right':scrollWidth});\r\n  // }).resize();\r\n  async componentDidMount() {\r\n    this.getDatePatient();\r\n  }\r\n\r\n  getDatePatient = async () => {\r\n    let { user } = this.props;\r\n    let { currentDate } = this.state;\r\n\r\n    let formattedDate = new Date(currentDate).getTime();\r\n    console.log(\"this state\", this.state);\r\n    let res = await getAllPatientForDoctor({\r\n      doctorId: user.id,\r\n      date: formattedDate,\r\n    });\r\n    console.log(\"res\", res);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        dataPatient: res.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  handleChangeDate = (date) => {\r\n    this.setState(\r\n      {\r\n        currentDate: date[0],\r\n      },\r\n      () => {\r\n        let { user } = this.props;\r\n        let { currentDate } = this.state;\r\n\r\n        let formattedDate = new Date(currentDate).getTime();\r\n\r\n        this.getDatePatient(user, formattedDate);\r\n      }\r\n    );\r\n  };\r\n  handleBtnConfirm = (item) => {\r\n    alert(\"Bạn đã chắc chắn muốn gửi hóa đơn xác nhận\");\r\n    let data = {\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      email: item.patientData.email,\r\n      timeType: item.timeType,\r\n      patientName: item.patientData.lastName,\r\n    };\r\n    this.setState({\r\n      isOpenRemedyModal: true,\r\n      dataModel: data,\r\n    });\r\n    console.log(\"data\", data);\r\n  };\r\n\r\n  handleBtnWatch = (item) => {\r\n    let data = {\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      email: item.patientData.email,\r\n      timeType: item.timeType,\r\n      patientName: item.patientData.lastName,\r\n    };\r\n    this.setState({\r\n      isOpenWatchPatient: true,\r\n      dataModel: data,\r\n      Idtesst: item.patientId\r\n    });\r\n    console.log(\"data\", data);\r\n  };\r\n\r\n  closeRemedyClose = () => {\r\n    this.setState({\r\n      isOpenRemedyModal: false,\r\n      isOpenWatchPatient: false,\r\n      dataModel: {},\r\n    });\r\n  };\r\n\r\n  sendRemedy = async (dataChild) => {\r\n    let { dataModel } = this.state;\r\n    this.setState({ isShowLoading: true });\r\n    let res = await postSendRemedy({\r\n      email: dataChild.email,\r\n      imgBase64: dataChild.imgBase64,\r\n      doctorId: dataModel.doctorId,\r\n      patientId: dataModel.patientId,\r\n      timeType: dataModel.timeType,\r\n      language: this.props.language,\r\n      patientName: dataModel.patientName,\r\n\r\n      // ...dataChild,\r\n    });\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Send success message !\");\r\n      this.setState({ isShowLoading: false });\r\n      this.closeRemedyClose();\r\n      await this.getDatePatient();\r\n    } else {\r\n      toast.error(\"Send error message.....\");\r\n      this.setState({ isShowLoading: false });\r\n    }\r\n  };\r\n  render() {\r\n    let yesterday = new Date(new Date().setHours(0, 0, 0, 0));\r\n    let { language } = this.props;\r\n    let { dataPatient, isOpenRemedyModal, dataModel, isOpenWatchPatient, Idtesst } = this.state;\r\n    console.log(\"dataPatient\", dataPatient)\r\n    console.log('test Idtesst', Idtesst)\r\n    return (\r\n      <>\r\n        <LoadingOverlay\r\n          active={this.state.isShowLoading}\r\n          spinner\r\n          text=\"Loading...\"\r\n        >\r\n          <div className=\"manage-patient-container\">\r\n            <div className=\"manage-patient-title\">Quản lý bệnh nhân khám </div>\r\n            <div className=\"manage-patient-body  row\">\r\n              <div className=\"col-4 form-group\">\r\n                <label\r\n                  style={{\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Chọn ngày khám:\r\n                </label>\r\n                <DatePicker\r\n                  onChange={this.handleChangeDate}\r\n                  className=\"form-control\"\r\n                  value={this.state.currentDate}\r\n                // minDate={yesterday}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 table-manage-patient\">\r\n                <section>\r\n                  <h1>Table Patient</h1>\r\n\r\n                  <div className=\"tbl-header\">\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>STT</th>\r\n                          <th>Thời gian</th>\r\n                          <th>Họ và Tên</th>\r\n                          <th>Địa chỉ</th>\r\n                          <th>Giới Tính</th>\r\n                          <th className=\"two\">Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                    </table>\r\n                  </div>\r\n\r\n                  {dataPatient && dataPatient.length > 0 ? (\r\n                    dataPatient.map((item, index) => {\r\n                      let time =\r\n                        language === LANGUAGES.VI\r\n                          ? item.timeTypeDataPatient.valueVi\r\n                          : item.timeTypeDataPatient.valueEn;\r\n                      let gender =\r\n                        language === LANGUAGES.VI\r\n                          ? item.patientData.genderData.valueVi\r\n                          : item.patientData.genderData.valueEn;\r\n                      return (\r\n                        <div className=\"tbl-content\">\r\n                          <table>\r\n                            <tbody>\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td> {time}</td>\r\n                                <td> {item.patientData.lastName}</td>\r\n                                <td>{item.patientData.address}</td>\r\n\r\n                                <td>{gender}</td>\r\n                                <td className=\"one\">\r\n                                  <button\r\n                                    className=\"btn btn-watch\"\r\n                                    onClick={() => this.handleBtnWatch(item)}\r\n                                  >\r\n                                    {\" \"}\r\n                                    See more\r\n                                  </button>\r\n                                  <button\r\n                                    className=\"btn btn-confirm\"\r\n                                    onClick={() => this.handleBtnConfirm(item)}\r\n                                  >\r\n                                    Xác Nhận\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <div className=\"tbl-content\">\r\n                      <table>\r\n                        <tbody>\r\n                          <tr>\r\n                            <h1>NO DATA</h1>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  )}\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <WatchPatientModel\r\n            isOpenModal={isOpenWatchPatient}\r\n            dataModel={dataModel}\r\n            closeRemedyClose={this.closeRemedyClose}\r\n            dataPatient={dataPatient}\r\n            Idtesst={Idtesst}\r\n          />\r\n          <RemedyModel\r\n            isOpenModal={isOpenRemedyModal}\r\n            dataModel={dataModel}\r\n            closeRemedyClose={this.closeRemedyClose}\r\n            sendRemedy={this.sendRemedy}\r\n          />\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    user: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePatient);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\ManagePrescription.js",["696","697","698","699"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./ManagePrescription.scss\";\r\nimport moment from \"moment\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport {\r\n  getListPatientForDoctor,\r\n  postSendPrescription,\r\n} from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport PrescriptionModel from \"./PrescriptionModel\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport CreatePrecription from \"./CreatePrecription\";\r\nimport WatchPrescripttionModel from \"./WatchPrescripttionModel\";\r\nclass ManagePrescription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentDate: moment(new Date()).startOf(\"day\").valueOf(),\r\n      dataPatient: [],\r\n      isOpenRemedyModal: false,\r\n      isOpenWatchPatient: false,\r\n      dataModel: {},\r\n      isShowLoading: false,\r\n      showCreatePresiton: false,\r\n      idPatient: \"\",\r\n      doctorDiagnose: \"\",\r\n    };\r\n  }\r\n\r\n  handleOnchangeDatePiker = (date) => {\r\n    this.setState(\r\n      {\r\n        currentDate: date[0],\r\n      },\r\n      async () => {\r\n        await this.getDatePatient();\r\n      }\r\n    );\r\n  };\r\n\r\n  // $(window).on(\"load resize \", function() {\r\n  //   var scrollWidth = $('.tbl-content').width() - $('.tbl-content table').width();\r\n  //   $('.tbl-header').css({'padding-right':scrollWidth});\r\n  // }).resize();\r\n  async componentDidMount() {\r\n    this.getDatePatient();\r\n  }\r\n\r\n  getDatePatient = async () => {\r\n    let { user } = this.props;\r\n    let { currentDate } = this.state;\r\n\r\n    let formattedDate = new Date(currentDate).getTime();\r\n    console.log(\"this state\", this.state);\r\n    let res = await getListPatientForDoctor({\r\n      doctorId: user.id,\r\n      date: formattedDate,\r\n    });\r\n    console.log(\"res manage\", res);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        dataPatient: res.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  handleChangeDate = (date) => {\r\n    this.setState(\r\n      {\r\n        currentDate: date[0],\r\n      },\r\n      () => {\r\n        let { user } = this.props;\r\n        let { currentDate } = this.state;\r\n\r\n        let formattedDate = new Date(currentDate).getTime();\r\n\r\n        this.getDatePatient(user, formattedDate);\r\n      }\r\n    );\r\n  };\r\n  handleBtnConfirm = (item) => {\r\n    let data = {\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      email: item.patientData.email,\r\n      timeType: item.timeType,\r\n      patientName: item.patientData.lastName,\r\n    };\r\n    this.setState({\r\n      isOpenRemedyModal: true,\r\n\r\n      dataModel: data,\r\n    });\r\n    console.log(\"data\", data);\r\n  };\r\n\r\n  closeRemedyClose = () => {\r\n    this.setState({\r\n      isOpenRemedyModal: false,\r\n      isOpenWatchPatient: false,\r\n      dataModel: {},\r\n    });\r\n  };\r\n\r\n  handleBtnWatch = (item) => {\r\n    let data = {\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      email: item.patientData.email,\r\n      timeType: item.timeType,\r\n      patientName: item.patientData.lastName,\r\n    };\r\n    this.setState({\r\n      isOpenRemedyModal: true,\r\n      isOpenWatchPatient: true,\r\n      dataModel: data,\r\n      idPatient: item.patientId,\r\n    });\r\n    console.log(\"data\", data);\r\n  };\r\n\r\n  closeRemedyClose = () => {\r\n    this.setState({\r\n      isOpenRemedyModal: false,\r\n      isOpenWatchPatient: false,\r\n      dataModel: {},\r\n    });\r\n  };\r\n  sendPrescription = async (dataChild) => {\r\n    let { dataModel } = this.state;\r\n    this.setState({ isShowLoading: true });\r\n    let res = await postSendPrescription({\r\n      email: dataChild.email,\r\n      imgBase64: dataChild.imgBase64,\r\n      doctorId: dataModel.doctorId,\r\n      patientId: dataModel.patientId,\r\n      timeType: dataModel.timeType,\r\n      language: this.props.language,\r\n      patientName: dataModel.patientName,\r\n\r\n      // ...dataChild,\r\n    });\r\n    console.log(\"dataModel\", dataModel);\r\n    console.log(\"dataChild\", dataChild);\r\n    \r\n    console.log(\"res,\", res);\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Send gmail Success !\");\r\n      this.setState({ isShowLoading: false });\r\n      this.closeRemedyClose();\r\n      await this.getDatePatient();\r\n    } else {\r\n      toast.error(\"Send error message.....\");\r\n      this.setState({ isShowLoading: false });\r\n    }\r\n  };\r\n  render() {\r\n    let toDay = new Date();\r\n    let toDayString =\r\n      toDay.getDate() +\r\n      \"/\" +\r\n      (toDay.getMonth() + 1) +\r\n      \"/\" +\r\n      toDay.getFullYear();\r\n    let { language } = this.props;\r\n    // console.log('chech dấdas',doctorDiagnose)\r\n    let {\r\n      dataPatient,\r\n      isOpenRemedyModal,\r\n      dataModel,\r\n      isOpenWatchPatient,\r\n      idPatient,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <LoadingOverlay\r\n          active={this.state.isShowLoading}\r\n          spinner\r\n          text=\"Loading...\"\r\n        >\r\n          <div className=\"manage-patient-container\">\r\n            <div className=\"manage-patient-title\">Quản lý Đơn thuốc</div>\r\n            <div className=\"manage-patient-body  row\">\r\n              <div className=\"col-4 form-group\" style={{ color: \"white\" }}>\r\n                <h3> Hôm nay là:</h3>\r\n                <DatePicker\r\n                  onChange={this.handleChangeDate}\r\n                  className=\"form-control\"\r\n                  value={this.state.currentDate}\r\n                  minDate={toDayString}\r\n                  maxDate={toDayString}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 table-manage-patient\">\r\n                <section>\r\n                  <h1>Table Patient</h1>\r\n                  <div className=\"tbl-header\">\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>STT</th>\r\n                          <th>Thời gian</th>\r\n                          <th>Họ và Tên</th>\r\n                          <th>Địa chỉ</th>\r\n                          <th>Giới Tính</th>\r\n                          <th className=\"two\">Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                    </table>\r\n                  </div>\r\n\r\n                  {dataPatient && dataPatient.length > 0 ? (\r\n                    dataPatient.map((item, index) => {\r\n                      let time =\r\n                        language === LANGUAGES.VI\r\n                          ? item.timeTypeDataPatient.valueVi\r\n                          : item.timeTypeDataPatient.valueEn;\r\n                      let gender =\r\n                        language === LANGUAGES.VI\r\n                          ? item.patientData.genderData.valueVi\r\n                          : item.patientData.genderData.valueEn;\r\n                      return (\r\n                        <div className=\"tbl-content\">\r\n                          <table>\r\n                            <tbody>\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td> {time}</td>\r\n                                <td> {item.patientData.lastName}</td>\r\n                                <td>{item.patientData.address}</td>\r\n                                <td>{gender}</td>\r\n\r\n                                <td className=\"one\">\r\n                                  <button\r\n                                    className=\"btn btn-warning\"\r\n                                    onClick={() => this.handleBtnWatch(item)}\r\n                                  >\r\n                                    See more\r\n                                  </button>\r\n                                </td>\r\n                                <td className=\"one\">\r\n                                  <button\r\n                                    className=\"btn btn-confirm\"\r\n                                    onClick={() => this.handleBtnConfirm(item)}\r\n                                  >\r\n                                    Gửi đơn thuốc\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <div className=\"tbl-content\">\r\n                      <table>\r\n                        <tbody>\r\n                          <tr>\r\n                            <h1>NO DATA</h1>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  )}\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <PrescriptionModel\r\n            isOpenModal={isOpenRemedyModal}\r\n            dataModel={dataModel}\r\n            closeRemedyClose={this.closeRemedyClose}\r\n            sendRemedy={this.sendPrescription}\r\n          />\r\n          <WatchPrescripttionModel\r\n            isOpenModal={isOpenWatchPatient}\r\n            // isOpenModal={isOpenRemedyModal}\r\n            dataModel={dataPatient}\r\n            closeRemedyClose={this.closeRemedyClose}\r\n            sendRemedy={this.sendPrescription}\r\n            dataIdShow={idPatient}\r\n          />\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    user: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePrescription);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\ManageSchedule.js",["700","701","702","703","704","705","706"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ManageSchedule.scss\";\r\nimport Select from \"react-select\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { LANGUAGES, CRUD_ACTIONS, dateFormat } from \"../../../utils\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport moment from \"moment\";\r\nimport FormattedDate from \"../../../components/Formating/FormattedDate\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport { saveBulkScheduleDoctor } from \"../../../services/userService\";\r\nclass ManageSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listDoctor: [],\r\n      selectedDoctor: {},\r\n      currentDate: new Date(),\r\n      rangeTime: [],\r\n      isSelected:false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchAllDoctorsRedux();\r\n    this.props.fetchAllScheduleTime();\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.allDoctors !== this.props.allDoctors) {\r\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors);\r\n      this.setState({\r\n        listDoctor: dataSelect,\r\n      });\r\n    }\r\n    if (prevProps.allScheduleTime !== this.props.allScheduleTime) {\r\n      let data = this.props.allScheduleTime;\r\n      if (data && data.length > 0) {\r\n        data = data.map((item) => ({ ...item, isSelected: false }));\r\n      }\r\n      console.log(data);\r\n      this.setState({\r\n        rangeTime: data,\r\n      });\r\n    }\r\n  }\r\n  buildDataInputSelect = (inputData) => {\r\n    let result = [];\r\n    let language = this.props.language;\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let object = {};\r\n        let labelVi = ` ${item.lastName} ${item.firstName}`;\r\n        let labelEn = ` ${item.firstName} ${item.lastName}`;\r\n        object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n        object.value = item.id;\r\n        result.push(object);\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedDoctor: selectedOption });\r\n  };\r\n  handleChangeDate = (date) => {\r\n    this.setState({\r\n      currentDate: date[0],\r\n    });\r\n  };\r\n  handleClickBtnTime = (time) => {\r\n    let { rangeTime } = this.state;\r\n    if (rangeTime && rangeTime.length > 0) {\r\n      rangeTime = rangeTime.map((item) => {\r\n        if (item.id === time.id) item.isSelected = !item.isSelected;\r\n        return item;\r\n      });\r\n      this.setState({\r\n        rangeTime: rangeTime,\r\n      });\r\n    }\r\n  };\r\n  handleSaveSchedule = async () => {\r\n    let { rangeTime, currentDate, selectedDoctor,isSelected } = this.state;\r\n    console.log(\"ressss\",rangeTime)\r\n    let result = [];\r\n    this.setState({\r\n      rangeTime: rangeTime,\r\n      selectedDoctor:false,\r\n      isSelected:false\r\n    });\r\n    if (selectedDoctor && _.isEmpty(selectedDoctor)) {\r\n      toast.error(\"Select DocTor Required\");\r\n      return;\r\n    }\r\n    if (!currentDate) {\r\n      toast.error(\"Date Required\");\r\n      return;\r\n    }\r\n\r\n\r\n    // let formattedDate = moment(currentDate).unix();\r\n    let formattedDate = new Date(currentDate).getTime();\r\n\r\n    if (rangeTime && rangeTime.length > 0) {\r\n      let selectedTime = rangeTime.filter((item) => item.isSelected === true);\r\n      if (selectedTime && selectedTime.length > 0) {\r\n        selectedTime.map((schedule, index) => {\r\n          let object = {};\r\n          object.doctorId = selectedDoctor.value;\r\n          object.date = formattedDate;\r\n          object.timeType = schedule.keyMap;\r\n          result.push(object);\r\n        });\r\n      } else {\r\n        toast.error(\"Select Time\");\r\n        return;\r\n      }\r\n    }\r\n    let res = await saveBulkScheduleDoctor({\r\n      arrSchedule: result,\r\n      doctorId: selectedDoctor.value,\r\n      formattedDate: formattedDate,\r\n    });\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Success\");\r\n    } else {\r\n      toast.error(\"Error\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { rangeTime } = this.state;\r\n    let { language } = this.props;\r\n    let yesterday = new Date(new Date().setHours(0, 0, 0, 0));\r\n    return (\r\n      <>\r\n        <div className=\"manage-schedule-container\">\r\n          <div className=\"m-s-title\">\r\n            <FormattedMessage id=\"manage-schedule.title\" />\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6 form-group\">\r\n                <label>\r\n                  <FormattedMessage id=\"manage-schedule.chooseDoctor\" />\r\n                </label>\r\n                <Select\r\n                  value={this.state.selectedDoctor}\r\n                  onChange={this.handleChangeSelect}\r\n                  options={this.state.listDoctor}\r\n                />\r\n              </div>\r\n              <div className=\"col-6 form-group\">\r\n                <label>\r\n                  {\" \"}\r\n                  <FormattedMessage id=\"manage-schedule.chooseDate\" />_\r\n                </label>\r\n                <DatePicker\r\n                  onChange={this.handleChangeDate}\r\n                  className=\"form-control\"\r\n                  value={this.state.currentDate}\r\n                  minDate={yesterday}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 pick-hour-container\">\r\n                {rangeTime &&\r\n                  rangeTime.length > 0 &&\r\n                  rangeTime.map((item, index) => {\r\n                    return (\r\n                      <button\r\n                        className={\r\n                          item.isSelected === true\r\n                            ? \"btn btn-schedule active\"\r\n                            : \"btn btn-schedule\"\r\n                        }\r\n                        key={index}\r\n                        onClick={() => this.handleClickBtnTime(item)}\r\n                      >\r\n                        {language === LANGUAGES.VI\r\n                          ? item.valueVi\r\n                          : item.valueEn}\r\n                      </button>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => this.handleSaveSchedule()}\r\n            >\r\n              <FormattedMessage id=\"manage-schedule.save\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    allDoctors: state.admin.allDoctors,\r\n    language: state.app.language,\r\n    allScheduleTime: state.admin.allScheduleTime,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAllDoctorsRedux: () => dispatch(actions.fetchAllDoctors()),\r\n    fetchAllScheduleTime: () => dispatch(actions.fetchAllScheduleTime()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\services\\userService.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Header\\Header.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\MedicalFacility.js",["707"],"import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nimport { getAllClinic } from \"../../../services/userService\";\r\nimport { withRouter } from \"react-router\";\r\nimport Footer from \"../../Footer\";\r\n// import \"./MedicalFacility.scss\";\r\nclass MedicalFacility extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataClinic: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    let res = await getAllClinic();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        dataClinic: res.data ? res.data : [],\r\n      });\r\n    }\r\n  }\r\n\r\n  handleViewDetailClinic = (clinic) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-clinic/${clinic.id}`);\r\n    }\r\n  };\r\n  render() {\r\n    let { dataClinic } = this.state;\r\n    return (\r\n      <div className=\"section-share section-medical-facility\">\r\n        <div className=\"section-container\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\">\r\n              {\" \"}\r\n              Cơ Sở Y Tế Nổi Bật\r\n              <span className=\"border-load-outstanding\"></span>\r\n            </span>\r\n\r\n            <button type=\"button\" className=\"btn-section\">\r\n              {\" \"}\r\n              Xem thêm\r\n            </button>\r\n          </div>\r\n          <div href=\"#\" className=\"section-content\">\r\n            <Slider {...this.props.settings}>\r\n              {dataClinic &&\r\n                dataClinic.length > 0 &&\r\n                dataClinic.map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      className=\"section-customize\"\r\n                      key={index}\r\n                      onClick={() => this.handleViewDetailClinic(item)}\r\n                    >\r\n                      <div\r\n                        className=\"img-bg section-medical-facility \"\r\n                        style={{\r\n                          backgroundImage: `url(\"${item.image}\")`,\r\n                        }}\r\n                      />\r\n                      <span className=\"dt-name\">{item.name}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(MedicalFacility)\r\n);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\Specialty.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\About.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\OutStandingDoctor.js",["708"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { withRouter } from \"react-router\";\r\nclass OutStandingDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrDoctors: [],\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\r\n      this.setState({\r\n        arrDoctors: this.props.topDoctorsRedux,\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.loadTopDoctors();\r\n  }\r\n  handleViewDetailDoctor = (doctor) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-doctor/${doctor.id}`);\r\n    }\r\n  };\r\n  render() {\r\n    let arrDoctors = this.state.arrDoctors;\r\n    let { language } = this.props;\r\n    return (\r\n      <div className=\"section-share section-outstanding-doctor\">\r\n        <div className=\"section-container\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\"> Bác Sĩ Nổi Bật Tuần Qua\r\n              <span className=\"border-load-doctor\"></span>\r\n            </span>\r\n            <button type=\"button\" className=\"btn-section\">\r\n              Xem thêm\r\n            </button>\r\n          </div>\r\n          <div href=\"#\" className=\"section-content\">\r\n            <Slider {...this.props.settings}>\r\n              {arrDoctors &&\r\n                arrDoctors.length >= 0 &&\r\n                arrDoctors.map((item, index) => {\r\n                  let imageBase64 = \"\";\r\n                  if (item.image) {\r\n                    imageBase64 = new Buffer(item.image, \"base64\").toString(\r\n                      \"binary\"\r\n                    );\r\n                  }\r\n\r\n                  let nameVi = `${item.positionData.valueVi},  ${item.firstName} ${item.lastName} `;\r\n                  let nameEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`;\r\n\r\n                  return (\r\n                    <div\r\n                      className=\"section-customize border\"\r\n                      key={index}\r\n                      onClick={() => this.handleViewDetailDoctor(item)}\r\n                    >\r\n                      <div>\r\n                        <div\r\n                          className=\"img-bg section-outstanding-doctor \"\r\n                          style={{\r\n                            backgroundImage: `url(\"${imageBase64}\")`,\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"position text-center\">\r\n                        {<h5>{language === LANGUAGES.VI ? nameVi : nameEn}</h5>}\r\n                        <span>Giao su , Tien sy </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    topDoctorsRedux: state.admin.topDoctors,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadTopDoctors: () => dispatch(actions.fetchTopDoctor()),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor)\r\n);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\HomeFooter.js",["709"],"import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HomeFooter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home-footer\">\r\n        <p>\r\n          &copy; 2022 Booking Doctor with Le_An. More information .\r\n          <a target=\"_blank\" href=\"https://www.facebook.com/\">\r\n            {\" \"}\r\n            &#8594; Click here &#8592;\r\n          </a>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\SocialPlugin\\LikeAndShare.js",["710","711","712","713","714","715"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\n// import \"./DoctorExtraInfor.scss\";\r\nimport moment from \"moment\";\r\n\r\nimport { getExtraInforDoctorById } from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nclass LikeAndShare extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  initFacebookSDK() {\r\n    if (window.FB) {\r\n      window.FB.XFBML.parse();\r\n    }\r\n\r\n    let { language } = this.props;\r\n    let locale = language === LANGUAGES.VI ? \"vi_VN\" : \"en_US\";\r\n    window.fbAsyncInit = function () {\r\n      window.FB.init({\r\n        appId: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n        cookie: true, // enable cookies to allow the server to access\r\n        // the session\r\n        xfbml: true, // parse social plugins on this page\r\n        version: \"v2.5\", // use version 2.1\r\n      });\r\n    };\r\n    // Load the SDK asynchronously\r\n    (function (d, s, id) {\r\n      var js,\r\n        fjs = d.getElementsByTagName(s)[0];\r\n      if (d.getElementById(id)) return;\r\n      js = d.createElement(s);\r\n      js.id = id;\r\n      js.src = `//connect.facebook.net/${locale}/sdk.js`;\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    })(document, \"script\", \"facebook-jssdk\");\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.initFacebookSDK();\r\n  }\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { dataHref } = this.props;\r\n    return (\r\n      <>\r\n        {/* <div\r\n          class=\"fb-like\"\r\n          data-href={dataHref}\r\n          data-width=\"\"\r\n          data-layout=\"standard\"\r\n          data-action=\"like\"\r\n          data-size=\"small\"\r\n          data-share=\"true\"\r\n        ></div> */}\r\n        <div\r\n          class=\"fb-like\"\r\n          data-href=\"https://developers.facebook.com/docs/plugins/\"\r\n          data-width=\"\"\r\n          data-layout=\"standard\"\r\n          data-action=\"like\"\r\n          data-size=\"small\"\r\n          data-share=\"true\"\r\n        ></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LikeAndShare);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\HomePage\\Section\\HandBook.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\SocialPlugin\\Comment.js",["716","717","718","719","720","721"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\n// import \"./DoctorExtraInfor.scss\";\r\nimport moment from \"moment\";\r\n\r\nimport { getExtraInforDoctorById } from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nclass Comment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  initFacebookSDK() {\r\n    if (window.FB) {\r\n      window.FB.XFBML.parse();\r\n    }\r\n    let { language } = this.props;\r\n    let locale = language === LANGUAGES.VI ? \"vi_VN\" : \"en_US\";\r\n    window.fbAsyncInit = function () {\r\n      window.FB.init({\r\n        appId: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n        cookie: true,\r\n        xfbml: true,\r\n        version: \"v2.5\",\r\n      });\r\n    };\r\n\r\n    (function (d, s, id) {\r\n      var js,\r\n        fjs = d.getElementsByTagName(s)[0];\r\n      if (d.getElementById(id)) return;\r\n      js = d.createElement(s);\r\n      js.id = id;\r\n      js.src = `//connect.facebook.net/${locale}/sdk.js`;\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    })(document, \"script\", \"facebook-jssdk\");\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.initFacebookSDK();\r\n  }\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { width, dataHref, numPost } = this.props;\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"fb-comments\"\r\n          data-href=\"https://developers.facebook.com/docs/plugins/comments#configurator\"\r\n          data-width={width ? width : \"\"}\r\n          data-numposts={numPost ? numPost : 5}\r\n        >\r\n          {\" \"}\r\n        </div>\r\n        {/* <div\r\n          class=\"fb-comments\"\r\n          data-href=\"https://developers.facebook.com/docs/plugins/comments#configurator\"\r\n          data-width=\"\"\r\n          data-numposts=\"5\"\r\n        ></div> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Patient\\Doctor\\Modal\\BookingModal.js",["722","723","724","725","726","727","728","729"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./BookingModal.scss\";\r\nimport moment from \"moment\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport ProfileDoctor from \"../ProfileDoctor\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  postPatientAppoiment,\r\n  postBanking,\r\n  getDetailInfoDoctor,\r\n  getAllCodeService,\r\n} from \"../../../../services/userService\";\r\nimport DatePicker from \"../../../../components/Input/DatePicker\";\r\nimport * as actions from \"../../../../store/actions\";\r\nimport { LANGUAGES } from \"../../../../utils\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nclass BookingModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullName: \"\",\r\n      phoneNumber: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      reason: \"\",\r\n      birthday: '',\r\n      genders: \"\",\r\n      doctorId: \"\",\r\n      selectedGender: \"\",\r\n      timeType: \"\",\r\n      isShowLoading: false,\r\n      dataPayment: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.props.getGenders();\r\n\r\n    await this.getallpayment();\r\n  }\r\n\r\n  getallpayment = async () => {\r\n    let response = await getAllCodeService(\"PAYMENT\");\r\n    if (response && response.errCode === 0) {\r\n      this.setState({\r\n        dataPayment: response.data,\r\n      });\r\n    }\r\n    console.log(\"check data pay ment 1233\", response);\r\n  };\r\n  disableDates = () => {\r\n    var today, dd, mm, yyyy;\r\n    today = new Date();\r\n    dd = today.getDate() + 1;\r\n    mm = today.getMonth() + 1;\r\n    yyyy = today.getFullYear();\r\n    return yyyy + \"-\" + mm + \"-\" + dd;\r\n  };\r\n  buildDataGender = (data) => {\r\n    let result = [];\r\n    let language = this.props.language;\r\n    if (data && data.length > 0) {\r\n      data.map((item) => {\r\n        let object = {};\r\n        object.label = language === LANGUAGES.VI ? item.valueVi : item.valueEn;\r\n        object.value = item.keyMap;\r\n        result.push(object);\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n      this.setState({\r\n        genders: this.buildDataGender(this.props.genders),\r\n      });\r\n    }\r\n    if (this.props.genders !== prevProps.genders) {\r\n      this.setState({\r\n        genders: this.buildDataGender(this.props.genders),\r\n      });\r\n    }\r\n    if (this.props.dataTime !== prevProps.dataTime) {\r\n      if (this.props.dataTime && !_.isEmpty(this.props.dataTime)) {\r\n        let doctorId = this.props.dataTime.doctorId;\r\n        let timeType = this.props.dataTime.timeType;\r\n        this.setState({\r\n          doctorId: doctorId,\r\n          timeType: timeType,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleOnChangeInput = (event, id) => {\r\n    let valueInput = event.target.value;\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = valueInput;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n  };\r\n  handleOnchangeDatePiker = (date) => {\r\n    this.setState({\r\n      birthday: date[0],\r\n    });\r\n  };\r\n  handleChangeSelect = (selectedOption) => {\r\n    this.setState({\r\n      selectedGender: selectedOption,\r\n    });\r\n  };\r\n  handleChangeSelectPhuongThucKham = (selectedOption) => {\r\n    this.setState({\r\n      phuongThucKham: selectedOption.value,\r\n    });\r\n  };\r\n\r\n  buildDataBooking = (dataTime) => {\r\n    let { language } = this.props;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let time =\r\n        language === LANGUAGES.VI\r\n          ? dataTime.timeTypeData.valueVi\r\n          : dataTime.timeTypeData.valueEn;\r\n      let date =\r\n        language === LANGUAGES.VI\r\n          ? moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\")\r\n          : moment\r\n              .unix(+dataTime.date / 1000)\r\n              .locale(\"en\")\r\n              .format(\"ddd - MM/DD/YYYY\");\r\n\r\n      return `${time}-${date}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  buildDoctorName = (dataTime) => {\r\n    let { language } = this.props;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let name =\r\n        language === LANGUAGES.VI\r\n          ? `${dataTime.doctorData.lastName}${dataTime.doctorData.firstName}`\r\n          : `${dataTime.doctorData.firstName}${dataTime.doctorData.lastName}`;\r\n      return name;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  // handlePayBooking =  async () => {\r\n\r\n  //   let res = await postBanking({\r\n  //   });\r\n  //   console.log(\"res\", res);\r\n  //   this.setState({\r\n  //     isShowLoading: false,\r\n  //   });\r\n\r\n  // };\r\n\r\n  handleDoctorInfo = async () => {\r\n    console.log(\"thanh toan dien tu\")\r\n    let data = {};\r\n    data.amount = 350000;\r\n    data.orderInfo = \"test create payment 350.000 VND\";\r\n    let res = await postBanking(data);\r\n    console.log(\"res\", res);\r\n    this.setState({\r\n      isShowLoading: false,\r\n    });\r\n  };\r\n\r\n  handleConfirmBooking = async () => {\r\n    console.log(\"check confirm\", this.state);\r\n    this.setState({\r\n      isShowLoading: true,\r\n    });\r\n    // !data.email || !data.doctorId || !data.timeType || !data.date\r\n    let date = new Date(this.state.birthday).getTime();\r\n    let timeString = this.buildDataBooking(this.props.dataTime);\r\n    let doctorName = this.buildDoctorName(this.props.dataTime);\r\n\r\n    let res = await postPatientAppoiment({\r\n      fullName: this.state.fullName,\r\n      phoneNumber: this.state.phoneNumber,\r\n      email: this.state.email,\r\n      address: this.state.address,\r\n      reason: this.state.reason,\r\n      date: this.props.dataTime.date,\r\n      birthday: date,\r\n      selectedGender: this.state.selectedGender.value,\r\n      doctorId: this.state.doctorId,\r\n      timeType: this.state.timeType,\r\n      language: this.props.language,\r\n      timeString: timeString,\r\n      doctorName: doctorName,\r\n      firstName: this.state.phuongThucKham,\r\n    });\r\n\r\n    console.log(\"res\", res);\r\n    this.setState({\r\n      isShowLoading: false,\r\n    });\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Bookign a new appoiment succedd\");\r\n      this.props.closeBookingClose();\r\n    } else {\r\n      toast.error(\"Bookign a new appoiment error\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { isOpenModal, closeBookingClose, dataTime, dataProfileprop } =\r\n      this.props;\r\n    console.log(\"check data thanh toan\", dataProfileprop);\r\n    console.log(\"check prop bookign modal\", this.props);\r\n    console.log(\"asdsadasdasd\", this.state.dataPayment);\r\n    let yesterday = new Date(new Date().setTime());\r\n    let doctorId = \"\";\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      doctorId = dataTime.doctorId;\r\n    }\r\n    const optionsPayMent = [\r\n      { value: \"Tiền Mặt\", label: \"Tiền Mặt\" },\r\n      { value: \"Thanh Toán Điện Tử\", label: \"Thanh Toán Điện Tử\" },\r\n    ];\r\n\r\n    const optionsExamination = [\r\n      { value: \"Gặp Trực Tiếp\", label: \"Gặp Trực Tiếp\" },\r\n      { value: \"Khám Từ Xa\", label: \"Khám Từ Xa\" },\r\n    ];\r\n\r\n    // fullName: '',\r\n    //     phoneNumber: '',\r\n    //         email: '',\r\n    //             address: '',\r\n    //                 reason: '',\r\n    //                     birthday: '',\r\n    //                         gender: '',\r\n    //                             doctorId: ''\r\n    return (\r\n      <>\r\n        <LoadingOverlay\r\n          active={this.state.isShowLoading}\r\n          spinner\r\n          text=\"Loading...\"\r\n        >\r\n          <Modal\r\n            isOpen={isOpenModal}\r\n            // toggle={}\r\n            className={\"booking-modal-container\"}\r\n            size=\"lg\"\r\n            centered\r\n            // backdrop={true}\r\n          >\r\n            <div className=\"booking-modal-content\">\r\n              <div className=\"booking-modal-header\">\r\n                <span className=\"left\">\r\n                  <FormattedMessage id={\"patient.booking-modal.title\"} />\r\n                </span>\r\n                <span className=\"right\" onClick={closeBookingClose}>\r\n                  <i className=\"fas fa-times\"></i>\r\n                </span>\r\n              </div>\r\n              <div className=\"booking-modal-body\">\r\n                {/* {JSON.stringify(dataTime)} */}\r\n                <div className=\"doctor-infor\">\r\n                  <ProfileDoctor\r\n                    doctorId={doctorId}\r\n                    isShowDescriptionDoctor={false}\r\n                    dataTime={dataTime}\r\n                    isShowLinkDetail={false}\r\n                    isShowPrice={true}\r\n                  />\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.fullName\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.fullName}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"fullName\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage\r\n                        id={\"patient.booking-modal.phoneNumber\"}\r\n                      />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.phoneNumber}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"phoneNumber\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.email\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.email}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"email\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.address\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.address}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"address\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  {/* <p>test</p> */}\r\n                  <div className=\"col-12 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.reson\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.reason}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"reason\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.birthday\"} />\r\n                    </label>\r\n                    <DatePicker\r\n                      onChange={this.handleOnchangeDatePiker}\r\n                      className=\"form-control\"\r\n                      value={this.state.birthday}\r\n                      maxDate={this.disableDates()}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.gender\"} />\r\n                    </label>\r\n                    <Select\r\n                      value={this.state.selectedGender}\r\n                      onChange={this.handleChangeSelect}\r\n                      options={this.state.genders}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>Phương thức thanh toán</label>\r\n                    <Select\r\n                      value={this.state.options}\r\n                      // onChange={this.handleChangeSelect}\r\n                      options={optionsPayMent}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>Phương Thức Khám</label>\r\n                    <Select\r\n                      value={this.state.optionsExamination}\r\n                      onChange={this.handleChangeSelectPhuongThucKham}\r\n                      options={optionsExamination}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"booking-modal-footer\">\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  onClick={() => this.handleDoctorInfo()}\r\n                >\r\n                  Thanh Toán Điện Tử\r\n                </button>\r\n                <button\r\n                  className=\" btn-booking-confirm\"\r\n                  onClick={() => this.handleConfirmBooking()}\r\n                >\r\n                  <FormattedMessage id={\"patient.booking-modal.btn-confirm\"} />\r\n                </button>\r\n                <button\r\n                  className=\" btn-booking-cancel\"\r\n                  onClick={closeBookingClose}\r\n                >\r\n                  <FormattedMessage id={\"patient.booking-modal.btn-cancel\"} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGenders: () => dispatch(actions.fetchGenderStart()),\r\n    getRequiredDoctorInfo: () => dispatch(actions.getRequiredDoctorInfo()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Clinic\\ManageClinic.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Specialty\\ManageSpecialty.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\reducers\\adminReducer.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\reducers\\appReducer.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\ListPatienShedule.js",["730","731","732","733","734","735"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  getExtraInforDoctorById,\r\n  getAllListPatient,\r\n} from \"../../../services/userService\";\r\nimport \"./ListPatienShedule.scss\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nclass ListPatienShedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listPatient: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllListPatient(\"S2\");\r\n    console.log(\"res\", res);\r\n    if (res && res.err === 0) {\r\n      this.setState({\r\n        listPatient: res.patientAccept.data,\r\n      });\r\n    }\r\n  }\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { listPatient } = this.state;\r\n    console.log(\"data patient\", listPatient);\r\n    return (\r\n      <>\r\n        <div className=\"col-12 table-manage-patient-loading\">\r\n          <h1> Danh sách bệnh nhân đang chờ</h1>\r\n          <table class=\"table table-light\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">STT</th>\r\n                <th scope=\"col\">Thời gian</th>\r\n                <th scope=\"col\">Họ và tên </th>\r\n                <th scope=\"col\">Địa chỉ</th>\r\n                <th scope=\"col\">Giới tính</th>\r\n                <th scope=\"col\">Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {listPatient && listPatient.length > 0 ? (\r\n                listPatient.map((item, index) => {\r\n                  console.log(\"item\", item);\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{item.timeTypeDataPatient.valueEn}</td>\r\n                      <td>{item.patientData.lastName}</td>\r\n                      <td>{item.patientData.address}</td>\r\n                      <td>{item.patientData.genderData.valueVi}</td>\r\n                      <td>{item.patientData.email}</td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"tbl-content\">\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <h1>NO DATA</h1>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPatienShedule);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\ListPatientExam.js",["736","737","738","739","740","741"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  getExtraInforDoctorById,\r\n  getAllListPatient,\r\n} from \"../../../services/userService\";\r\nimport \"./ListPatientExam.scss\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nclass ListPatientExam extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listPatient: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllListPatient(\"S4\");\r\n    console.log(\"res\", res);\r\n    if (res && res.err === 0) {\r\n      this.setState({\r\n        listPatient: res.patientAccept.data,\r\n      });\r\n    }\r\n  }\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { listPatient } = this.state;\r\n    console.log(\"data patient\", listPatient);\r\n    return (\r\n      <>\r\n        <div className=\"col-12 table-manage-patient-success\">\r\n          <h1> Danh sách bệnh nhân đã khám :</h1>\r\n          <table class=\"table table-dark\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">STT</th>\r\n                <th scope=\"col\">Thời gian</th>\r\n                <th scope=\"col\">Họ và tên </th>\r\n                <th scope=\"col\">Địa chỉ</th>\r\n                <th scope=\"col\">Giới tính</th>\r\n                <th scope=\"col\">Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {listPatient && listPatient.length > 0 ? (\r\n                listPatient.map((item, index) => {\r\n                  console.log(\"item\", item);\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{item.timeTypeDataPatient.valueEn}</td>\r\n                      <td>{item.patientData.lastName}</td>\r\n                      <td>{item.patientData.address}</td>\r\n                      <td>{item.patientData.genderData.valueVi}</td>\r\n                      <td>{item.patientData.email}</td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"tbl-content\">\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <h1>NO DATA</h1>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPatientExam);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\ManageHandBook.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\actions\\index.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\ToastUtil.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\ModelEditUser.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\axios.js",["742","743"],"import axios from \"axios\";\r\nimport _ from \"lodash\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  basePaymemt: 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html?vnp_Amount=35000000&vnp_Command=pay&vnp_CreateDate=20230102001834&vnp_CurrCode=VND&vnp_IpAddr=127.0.0.1&vnp_Locale=vn&vnp_OrderInfo=test+create+payment+350.000+VND&vnp_OrderType=other&vnp_ReturnUrl=http://localhost:3000/detail-doctor/161&vnp_TmnCode=U71WYR2Q&vnp_TxnRef=001834&vnp_Version=2.1.0&vnp_SecureHash=3fa41c583690dc85ee04d47cf6c25e739a498299fbded11305ab3992d6b50954701b60f967dd8ed91bc9a01a7ece419447b7d4d887f86c64d6a3dda0c28fdda8/api/get-schedule-doctor-by-date?doctorId=160&date=1672678800000'\r\n\r\n  // withCredentials: true,\r\n});\r\n\r\ninstance.interceptors.response.use((response) => {\r\n  // Thrown error for request with OK status code\r\n  const { data } = response;\r\n  return response.data;\r\n});\r\nexport default instance;\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\components\\Input\\DatePicker.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\components\\Navigator.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\Header\\menuApp.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\CreatePrecription.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\components\\Formating\\FormattedDate.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\PrescriptionModel.js",["744","745","746","747","748","749"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\n// import \"./PrescriptionModel.scss\";\r\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { LANGUAGES, CommonUtils } from \"../../../utils\";\r\n\r\nclass PrescriptionModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      imgBase64: \"\",\r\n      doctorDiagnose :''\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.dataModel) {\r\n      this.setState({\r\n        email: this.props.dataModel.email,\r\n      });\r\n    }\r\n  \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.dataModel !== this.props.dataModel) {\r\n      this.setState({\r\n        email: this.props.dataModel.email,\r\n      });\r\n    }\r\n  }\r\n  handleOnChangeEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleOnChangeImg = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    console.log(file);\r\n    if (file) {\r\n      let base64 = await CommonUtils.convertBase64(file);\r\n      this.setState({\r\n        imgBase64: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSendRemedy = () => {\r\n    this.props.sendRemedy(this.state);\r\n  };\r\n  render() {\r\n    let { isOpenModal, closeRemedyClose, dataModel, sendRemedy, } = this.props;\r\n    \r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={isOpenModal}\r\n          // toggle={}\r\n          className={\"booking-modal-container\"}\r\n          size=\"md\"\r\n          centered\r\n          // backdrop={true}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\"> Gửi hóa đơn Đơn thuốc</h5>\r\n            <button\r\n              className=\"close\"\r\n              type=\"button\"\r\n              aria-label=\"Close\"\r\n              onClick={closeRemedyClose}\r\n            >\r\n              <span aria-hidden=\"true\">x</span>\r\n            </button>\r\n          </div>\r\n          <ModalBody>\r\n            <form>\r\n              {\" \"}\r\n              <div className=\"row\">\r\n                <div className=\"col-6 form-group\">\r\n                  <label>Email bệnh nhân</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={this.state.email}\r\n                    onChange={(event) => this.handleOnChangeEmail(event)}\r\n                  />\r\n\r\n                  <div className=\"col-12 form-group\">\r\n                    <label>Chọn file đơn thuốc</label>\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control-file\"\r\n                      onChange={(event) => this.handleOnChangeImg(event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={() => this.handleSendRemedy()}>\r\n              Send\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={closeRemedyClose}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PrescriptionModel);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\actions\\adminActions.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\actions\\appActions.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\store\\actions\\userActions.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\components\\CustomToast.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\WatchPatientModel.js",["750","751","752","753","754","755","756"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./WatchPatientModel.scss\";\r\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport ManagePatient from \"./ManagePatient\";\r\nimport { LANGUAGES, CommonUtils } from \"../../../utils\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport moment from \"moment\";\r\nimport { savePatientService } from \"../../../services/userService\";\r\nclass WatchPatientModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      updatedAt: \"\",\r\n      date: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phoneNumber: \"\",\r\n      patientReason: \"\",\r\n      genders: \"\",\r\n      idPatient: this.props.Idtesst,\r\n      code: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.dataModel) {\r\n      this.setState({\r\n        // email: this.props.dataModel.patientData.email,\r\n        // date: this.props.dataPatient.updatedAt,\r\n        // phoneNumber: this.props.dataPatient.phoneNumber,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.dataModel !== this.props.dataModel) {\r\n      this.setState({\r\n        // email: this.props.dataModel.patientData.email,\r\n      });\r\n    }\r\n  }\r\n  handleOnChangeEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSendRemedy = () => {\r\n    this.props.sendRemedy(this.state);\r\n  };\r\n  onChangeCode = (e) => {\r\n    this.setState({\r\n      code: e.target.value,\r\n    });\r\n  };\r\n  onSaveForm = async () => {\r\n    console.log(this.state);\r\n    let res = await savePatientService({\r\n      id: this.state.idPatient,\r\n      code: this.state.code,\r\n      isUpdateCode: true,\r\n    });\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Save success\");\r\n    } else {\r\n      toast.error(\"Save error\");\r\n    }\r\n    this.props.closeRemedyClose();\r\n  };\r\n  render() {\r\n    let { isOpenModal, closeRemedyClose, language, dataPatient, Idtesst } =\r\n      this.props;\r\n    console.log(\"dataPatient\", dataPatient);\r\n    console.log(\"cgeck prop Idtesst\", Idtesst);\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={isOpenModal}\r\n          // toggle={}\r\n          className={\"booking-modal-container\"}\r\n          size=\"lg\"\r\n          style={{ width: \"1500px\" }}\r\n          centered\r\n          // backdrop={true}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\"> Form Thông tin Bệnh Nhân</h5>\r\n            <button\r\n              className=\"close\"\r\n              type=\"button\"\r\n              aria-label=\"Close\"\r\n              onClick={closeRemedyClose}\r\n            >\r\n              <span aria-hidden=\"true\">x</span>\r\n            </button>\r\n          </div>\r\n          <ModalBody style={{ height: \"500px\" }}>\r\n            <div className=\"booking-modal-content\">\r\n              <div className=\"booking-modal-body\">\r\n                {/* {JSON.stringify(dataTime)} */}\r\n                {dataPatient &&\r\n                  dataPatient.length > 0 &&\r\n                  dataPatient.map((item, index) => {\r\n                    let data = item.date;\r\n                    data = moment(new Date()).format(\"dddd - DD/MM\");\r\n                    console.log(\"data Date\", Idtesst === item.patientId);\r\n                    return (\r\n                      <>\r\n                        <div className=\"row\" key={index}>\r\n                          {Idtesst === item.patientId ? (\r\n                            <>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Họ Và Tên</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.lastName}\r\n                                  // onChange={(event) =>\r\n                                  //   this.handleOnChangeInput(event, \"fullName\")\r\n                                  // }\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>SDT</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.phoneNumber}\r\n                                  // onChange={(event) =>\r\n                                  //   this.handleOnChangeInput(event, \"phoneNumber\")\r\n                                  // }\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.email}\r\n                                  // onChange={(event) =>\r\n                                  //   this.handleOnChangeInput(event, \"email\")\r\n                                  // }\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Địa Chỉ</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.address}\r\n                                  // onChange={(event) =>\r\n                                  //   this.handleOnChangeInput(event, \"address\")\r\n                                  // }\r\n                                />\r\n                              </div>\r\n                              {/* <p>test</p> */}\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Lý Do Khám Bệnh :</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.patientReason}\r\n                                  // onChange={(event) =>\r\n                                  //   this.handleOnChangeInput(event, \"reason\")\r\n                                  // }\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Giới tính</label>\r\n                                <input\r\n                                  // onChange={this.handleOnchangeDatePiker}\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.genderData.valueVi}\r\n                                  // value={this.state.birthday}\r\n                                  // maxDate={this.disableDates()}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Ngày Đặt</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={data}\r\n                                  // onChange={this.handleChangeSelect}\r\n                                  // options={this.state.genders}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Thời Gian khám :</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.timeTypeDataPatient.valueEn}\r\n                                  // onChange={this.handleChangeSelect}\r\n                                  // options={this.state.genders}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Phương thức khám</label>\r\n\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.firstName}\r\n                                ></input>\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Mã Phòng Khám</label>\r\n\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  onChange={(e) => this.onChangeCode(e)}\r\n                                ></input>\r\n                              </div>\r\n                              {/* <div className=\"col-12 form-group\">\r\n                    <label>8</label>\r\n                    <textarea />\r\n                  </div> */}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"warning\" onClick={() => this.onSaveForm()}>\r\n              Save\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={closeRemedyClose}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WatchPatientModel);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\RemedyModel.js",["757","758","759","760","761","762"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./RemedyModel.scss\";\r\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { LANGUAGES, CommonUtils } from \"../../../utils\";\r\nclass RemedyModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      imgBase64: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.dataModel) {\r\n      this.setState({\r\n        email: this.props.dataModel.email,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.dataModel !== this.props.dataModel) {\r\n      this.setState({\r\n        email: this.props.dataModel.email,\r\n      });\r\n    }\r\n  }\r\n  handleOnChangeEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleOnChangeImg = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    console.log(file);\r\n    if (file) {\r\n      let base64 = await CommonUtils.convertBase64(file);\r\n      this.setState({\r\n        imgBase64: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSendRemedy = () => {\r\n    this.props.sendRemedy(this.state);\r\n  };\r\n  render() {\r\n    let { isOpenModal, closeRemedyClose, dataModel, sendRemedy } = this.props;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={isOpenModal}\r\n          // toggle={}\r\n          className={\"booking-modal-container\"}\r\n          size=\"md\"\r\n          centered\r\n          // backdrop={true}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\"> Gửi hóa đơn xác nhận</h5>\r\n            <button\r\n              className=\"close\"\r\n              type=\"button\"\r\n              aria-label=\"Close\"\r\n              onClick={closeRemedyClose}\r\n            >\r\n              <span aria-hidden=\"true\">x</span>\r\n            </button>\r\n          </div>\r\n          <ModalBody>\r\n            <form>\r\n              {\" \"}\r\n              <div className=\"row\">\r\n                <div className=\"col-6 form-group\">\r\n                  <label>Email bệnh nhân</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={this.state.email}\r\n                    onChange={(event) => this.handleOnChangeEmail(event)}\r\n                  />\r\n\r\n                  {/* <div className=\"col-12 form-group\">\r\n                    <label>Chọn file đơn thuốc</label>\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control-file\"\r\n                      onChange={(event) => this.handleOnChangeImg(event)}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={() => this.handleSendRemedy()}>\r\n              Send\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={closeRemedyClose}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModel);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\ModelUser.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\emitter.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Admin\\TableManageUser.js",["763","764","765","766"],"import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./TableManageUser.scss\";\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\n// import style manually\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\n\r\n// Register plugins if required\r\n// MdEditor.use(YOUR_PLUGINS_HERE);\r\n\r\n// Initialize a markdown parser\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n// Finish!\r\nfunction handleEditorChange({ html, text }) {\r\n  console.log(\"handleEditorChange\", html, text);\r\n}\r\n\r\nclass TableManageUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usersRedux: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchUserRedux();\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.listUser !== this.props.listUser) {\r\n      this.setState({\r\n        usersRedux: this.props.listUser,\r\n      });\r\n    }\r\n  }\r\n  handleDelete = (user) => {\r\n    this.props.DeleteUsers(user.id);\r\n  };\r\n  handleEditUser = (user) => {\r\n    this.props.handleEditUserFromParent(user);\r\n  };\r\n  render() {\r\n    let arrUsers = this.state.usersRedux;\r\n    return (\r\n      <>\r\n        <table id=\"TableManageUser\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Email</th>\r\n              <th>Fist Name</th>\r\n              <th>Last Name</th>\r\n              <th>Address</th>\r\n              <th>SDT</th>\r\n              <th>Action</th>\r\n            </tr>\r\n            {arrUsers &&\r\n              arrUsers.length > 0 &&\r\n              arrUsers.map((item, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{item.email}</td>\r\n                    <td>{item.firstName}</td>\r\n                    <td>{item.lastName}</td>\r\n                    <td>{item.address}</td>\r\n                    <td>{item.phoneNumber}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn-edit\"\r\n                        onClick={() => this.handleEditUser(item)}\r\n                      >\r\n                        <i className=\"fas fa-pencil-alt\"></i>\r\n                      </button>\r\n                      <button\r\n                        className=\"btn-delete\"\r\n                        onClick={() => this.handleDelete(item)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* <MdEditor\r\n          style={{ height: \"500px\" }}\r\n          renderHTML={(text) => mdParser.render(text)}\r\n          onChange={handleEditorChange}\r\n        /> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listUser: state.admin.users,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchUserRedux: () => dispatch(actions.fetchAllUsersStart()),\r\n    DeleteUsers: (id) => dispatch(actions.DeleteUsersStart(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\constant.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\LanguageUtils.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\KeyCodeUtils.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\utils\\CommonUtils.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\reactFE\\src\\containers\\System\\Doctor\\WatchPrescripttionModel.js",["767","768","769","770","771","772","773","774","775","776"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./WatchPatientModel.scss\";\r\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport ManagePatient from \"./ManagePatient\";\r\nimport { LANGUAGES, CommonUtils } from \"../../../utils\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport moment from \"moment\";\r\nimport {\r\n  postPatientAppoiment,\r\n  savePatientService,\r\n} from \"../../../services/userService\";\r\nimport PrescriptionModel from \"./PrescriptionModel\";\r\nclass WatchPrescripttionModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      updatedAt: \"\",\r\n      date: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phoneNumber: \"\",\r\n      patientReason: \"\",\r\n      genders: \"\",\r\n      doctorDiagnose: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.dataModel) {\r\n      this.setState({\r\n        // email: this.props.dataModel.patientData.email,\r\n        // date: this.props.dataPatient.updatedAt,\r\n        // phoneNumber: this.props.dataPatient.phoneNumber,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.dataModel !== this.props.dataModel) {\r\n      this.setState({\r\n        // email: this.props.dataModel.patientData.email,\r\n      });\r\n    }\r\n  }\r\n  handleOnChangeEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSendRemedy = () => {\r\n    this.props.sendRemedy(this.state);\r\n  };\r\n\r\n  handleOnclick = async (item, doctorDiagnose, data) => {\r\n    console.log(\"doctorDiagnose,\", doctorDiagnose);\r\n    console.log(\"item,\", item);\r\n    console.log(\"item id,\", item.id);\r\n\r\n    // let res = await postPatientAppoiment({\r\n    //   fullName: item.patientData.lastName,\r\n    //   phoneNumber: item.patientData.phoneNumber,\r\n    //   email: item.patientData.email,\r\n    //   address: item.patientData.address,\r\n    //   reason: item.patientData.patientReason,\r\n    //   selectedGender:item.patientData.genderData.valueVi,\r\n    //   date:data,\r\n    //   doctorDiagnose:doctorDiagnose\r\n    // });\r\n    let res = await savePatientService({\r\n      id: item.patientId,\r\n      doctorDiagnose: doctorDiagnose,\r\n    });\r\n\r\n    // console.log(\"res\", res);\r\n    // this.setState({\r\n    //   isShowLoading: false,\r\n    // });\r\n    console.log(\"ress data\", res);\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Bookign a new appoiment succedd\");\r\n    } else {\r\n      toast.error(\"Bookign a new appoiment error\");\r\n    }\r\n  };\r\n\r\n  handleChangeTextArea = (event) => {\r\n    this.setState({\r\n      doctorDiagnose: event.target.value,\r\n    });\r\n    console.log(\"check event doctorDiagnose\", event.target.value);\r\n  };\r\n  sendData = (callback) => {\r\n    const childData = \"Message from Child\";\r\n    callback(childData);\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      isOpenModal,\r\n      closeRemedyClose,\r\n      language,\r\n      dataModel,\r\n      Idtesst,\r\n      dataIdShow,\r\n    } = this.props;\r\n    let { doctorDiagnose } = this.state;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={isOpenModal}\r\n          // toggle={}\r\n          className={\"booking-modal-container\"}\r\n          size=\"lg\"\r\n          style={{ width: \"1500px\" }}\r\n          centered\r\n          // backdrop={true}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\"> Form Thông tin Bệnh Nhân</h5>\r\n            <button\r\n              className=\"close\"\r\n              type=\"button\"\r\n              aria-label=\"Close\"\r\n              onClick={closeRemedyClose}\r\n            >\r\n              <span aria-hidden=\"true\">x</span>\r\n            </button>\r\n          </div>\r\n          <ModalBody style={{ height: \"500px\" }}>\r\n            <div className=\"booking-modal-content\">\r\n              <div className=\"booking-modal-body\">\r\n                {/* {JSON.stringify(dataTime)} */}\r\n                {dataModel &&\r\n                  dataModel.length >= 0 &&\r\n                  dataModel.map((item, index) => {\r\n                    console.log(\"item\", item);\r\n                    let data = item.date;\r\n                    data = moment(new Date()).format(\"dddd - DD/MM\");\r\n                    console.log(\"data Date\", dataIdShow === item.patientId);\r\n                    return (\r\n                      <>\r\n                        <div className=\"row\" key={index}>\r\n                          {dataIdShow === item.patientId ? (\r\n                            <>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Họ Và Tên</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.lastName}\r\n                                  // onChange={(event) =>\r\n                                  //   this.handleOnChangeInput(event, \"fullName\")\r\n                                  // }\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>SDT</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.phoneNumber}\r\n                                  // onChange={(event) =>\r\n                                  //   this.handleOnChangeInput(event, \"phoneNumber\")\r\n                                  // }\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.email}\r\n                                  // onChange={(event) =>\r\n                                  //   this.handleOnChangeInput(event, \"email\")\r\n                                  // }\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Địa Chỉ</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.address}\r\n                                  // onChange={(event) =>\r\n                                  //   this.handleOnChangeInput(event, \"address\")\r\n                                  // }\r\n                                />\r\n                              </div>\r\n                              {/* <p>test</p> */}\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Lý Do Khám Bệnh :</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.patientReason}\r\n                                  // onChange={(event) =>\r\n                                  //   this.handleOnChangeInput(event, \"reason\")\r\n                                  // }\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Giới tính</label>\r\n                                <input\r\n                                  // onChange={this.handleOnchangeDatePiker}\r\n                                  className=\"form-control\"\r\n                                  value={item.patientData.genderData.valueVi}\r\n                                  // value={this.state.birthday}\r\n                                  // maxDate={this.disableDates()}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Ngày Đặt</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={data}\r\n                                  // onChange={this.handleChangeSelect}\r\n                                  // options={this.state.genders}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6 form-group\">\r\n                                <label>Thời Gian khám :</label>\r\n                                <input\r\n                                  className=\"form-control\"\r\n                                  value={item.timeTypeDataPatient.valueEn}\r\n                                  // onChange={this.handleChangeSelect}\r\n                                  // options={this.state.genders}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-12 form-group\">\r\n                                <label>Chuẩn đoán của bác sĩ:</label>\r\n\r\n                                <textarea\r\n                                  id=\"text\"\r\n                                  rows=\"4\"\r\n                                  cols=\"50\"\r\n                                  onChange={(event) => {\r\n                                    this.handleChangeTextArea(event);\r\n                                  }}\r\n                                  value={doctorDiagnose}\r\n                                >\r\n                                  {\" \"}\r\n                                </textarea>\r\n                              </div>\r\n                              <button\r\n                                className=\"col-4 btn btn-warning\"\r\n                                color=\"warning\"\r\n                                onClick={() =>\r\n                                  this.handleOnclick(item, doctorDiagnose, data)\r\n                                }\r\n                              >\r\n                                Send\r\n                              </button>\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={closeRemedyClose}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WatchPrescripttionModel);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\index.js",[],["777","778"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\redux.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\serviceWorker.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\App.js",["779"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\hoc\\IntlProviderWrapper.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\hoc\\authentication.js",["780"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\routes\\Home.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\routes\\Doctor.js",["781"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\routes\\System.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\components\\CustomScrollbars.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\VerifyEmail.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Auth\\Login.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\HomePage.js",["782"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Doctor\\DetailDoctor.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Specialty\\DetailSpecialty.js",["783","784"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Clinic\\DetailClinic.js",["785","786","787"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\reducers\\rootReducer.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\Doctor.js",["788","789","790"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\ManageAdmin.js",["791","792","793","794","795","796","797","798","799"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\index.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\UserManage.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\UserRedux.js",["800"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\ManageDoctor.js",["801","802","803","804","805","806","807","808","809"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\HomeHeader.js",["810","811"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Footer.js",["812"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Doctor\\DoctorSchedule.js",["813","814"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./DoctorSchedule.scss\";\r\nimport moment from \"moment\";\r\nimport localization from \"moment/locale/vi\";\r\nimport { getScheduleDoctorByDate } from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport BookingModal from \"../../Patient/Doctor/Modal/BookingModal\";\r\nclass DoctorSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allDays: [],\r\n      allAvalableTimes: [],\r\n      isOpenModalBooking: false,\r\n      dataScheduleTimeModal: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let { language } = this.props;\r\n    let allDays = this.getArrDays(language);\r\n    this.setState({ allDays: allDays });\r\n\r\n    if (this.props.detailDoctorIdFromParent) {\r\n      let res = await getScheduleDoctorByDate(\r\n        this.props.detailDoctorIdFromParent,\r\n        allDays[0].value\r\n      );\r\n      this.setState({\r\n        allAvalableTimes: res.data ? res.data : [],\r\n      });\r\n    }\r\n  }\r\n\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  getArrDays = (language) => {\r\n    let allDays = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      let object = {};\r\n      if (language === LANGUAGES.VI) {\r\n        if (i === 0) {\r\n          let ddMM = moment(new Date()).format(\"DD/MM\");\r\n          let today = `Hôm nay - ${ddMM}`;\r\n          object.label = today;\r\n        } else {\r\n          let labelVi = moment(new Date())\r\n            .add(i, \"days\")\r\n            .format(\"dddd - DD/MM\");\r\n          object.label = this.capitalizeFirstLetter(labelVi);\r\n        }\r\n      } else {\r\n        if (i === 0) {\r\n          let ddMM = moment(new Date()).format(\"DD/MM\");\r\n          let today = `Today - ${ddMM}`;\r\n          object.label = today;\r\n          console.log(\"ddmm\", today);\r\n        } else {\r\n          object.label = moment(new Date())\r\n            .add(i, \"days\")\r\n            .locale(\"en\")\r\n            .format(\"dddd - DD/MM\");\r\n        }\r\n      }\r\n      object.value = moment(new Date()).add(i, \"days\").startOf(\"day\").valueOf();\r\n      allDays.push(object);\r\n    }\r\n    return allDays;\r\n  };\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n      let allDays = this.getArrDays(this.props.language);\r\n      this.setState({\r\n        allDays: allDays,\r\n      });\r\n    }\r\n    if (\r\n      this.props.detailDoctorIdFromParent !== prevProps.detailDoctorIdFromParent\r\n    ) {\r\n      let allDays = this.getArrDays(this.props.language);\r\n      let res = await getScheduleDoctorByDate(\r\n        this.props.detailDoctorIdFromParent,\r\n        allDays[0].value\r\n      );\r\n      this.setState({\r\n        allAvalableTimes: res.data ? res.data : [],\r\n      });\r\n    }\r\n  }\r\n  handleOnChangeSelect = async (event) => {\r\n    if (\r\n      this.props.detailDoctorIdFromParent &&\r\n      this.props.detailDoctorIdFromParent !== -1\r\n    ) {\r\n      let doctorId = this.props.detailDoctorIdFromParent;\r\n      let date = event.target.value;\r\n      let res = await getScheduleDoctorByDate(doctorId, date);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          allAvalableTimes: res.data ? res.data : [],\r\n        });\r\n        console.log(\"check res after\", res);\r\n        //day\r\n      }\r\n    }\r\n  };\r\n  handleClickScheduleTime = (time) => {\r\n    console.log(\"check\", time);\r\n    this.setState({\r\n      isOpenModalBooking: true,\r\n      dataScheduleTimeModal: time,\r\n    });\r\n  };\r\n  closeBookingClose = () => {\r\n    this.setState({\r\n      isOpenModalBooking: false,\r\n    });\r\n  };\r\n  render() {\r\n    let {\r\n      allDays,\r\n      allAvalableTimes,\r\n      isOpenModalBooking,\r\n      dataScheduleTimeModal,\r\n    } = this.state;\r\n    console.log('check 122312312', allAvalableTimes)\r\n    let { language } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"doctor-schedule-container\">\r\n          <div className=\"all-schedule\">\r\n            <select onChange={(event) => this.handleOnChangeSelect(event)}>\r\n              {allDays &&\r\n                allDays.length > 0 &&\r\n                allDays.map((item, index) => {\r\n                  return (\r\n                    <option key={index} value={item.value}>\r\n                      {item.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"all-available-time\">\r\n            <div className=\"text-calendar\">\r\n              <i className=\"fa fa-calendar-alt\"></i>{\" \"}\r\n              <span>\r\n                <FormattedMessage id=\"patient.detail-doctor.schedule\" />\r\n              </span>\r\n            </div>\r\n            <div className=\"time-content\">\r\n              {allAvalableTimes && allAvalableTimes.length > 0 ? (\r\n                <>\r\n                  <div className=\"time-content-btn\">\r\n                    {allAvalableTimes.map((item, index) => {\r\n                      let timeDisplay =\r\n                        language === LANGUAGES.VI\r\n                          ? item.timeTypeData.valueVi\r\n                          : item.timeTypeData.valueEn;\r\n                      var today = new Date();\r\n                      var time = today.getHours();\r\n                      console.log('check time Now', time)\r\n                      console.log('check time Now 1', timeDisplay.slice(7, 11))\r\n                      return (\r\n                        <button\r\n                          key={index}\r\n                          onClick={() => this.handleClickScheduleTime(item)}\r\n                        >\r\n                          {\" \"}\r\n\r\n                          {timeDisplay}\r\n                          {console.log('check timeDisplay', timeDisplay)}\r\n                        </button>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"book-free\">\r\n                    <FormattedMessage id=\"patient.detail-doctor.choose\" />{\" \"}\r\n                    <i className=\"far fa-hand-point-up\"></i>{\" \"}\r\n                    <FormattedMessage id=\"patient.detail-doctor.free\" />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div style={{ fontStyle: \"italic\", fontSize: \"16px\" }}>\r\n                  <FormattedMessage id=\"patient.detail-doctor.no-schedule\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <BookingModal\r\n          isOpenModal={isOpenModalBooking}\r\n          closeBookingClose={this.closeBookingClose}\r\n          dataTime={dataScheduleTimeModal}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Doctor\\ProfileDoctor.js",["815"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Doctor\\DoctorExtraInfor.js",["816","817"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\ManageSchedule.js",["818","819","820","821","822","823","824"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\ManagePrescription.js",["825","826","827","828"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\ManagePatient.js",["829","830","831","832","833"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Specialty\\ManageSpecialty.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Header\\Header.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Clinic\\ManageClinic.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\Specialty.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\services\\userService.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\OutStandingDoctor.js",["834"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\HandBook.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\MedicalFacility.js",["835"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\About.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\SocialPlugin\\Comment.js",["836","837","838","839","840","841"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\SocialPlugin\\LikeAndShare.js",["842","843","844","845","846","847"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Patient\\Doctor\\Modal\\BookingModal.js",["848","849","850","851","852","853","854","855"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./BookingModal.scss\";\r\nimport moment from \"moment\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport ProfileDoctor from \"../ProfileDoctor\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  postPatientAppoiment,\r\n  postBanking,\r\n  getDetailInfoDoctor,\r\n  getAllCodeService,\r\n} from \"../../../../services/userService\";\r\nimport DatePicker from \"../../../../components/Input/DatePicker\";\r\nimport * as actions from \"../../../../store/actions\";\r\nimport { LANGUAGES } from \"../../../../utils\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nclass BookingModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullName: \"\",\r\n      phoneNumber: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      reason: \"\",\r\n      birthday: '',\r\n      genders: \"\",\r\n      doctorId: \"\",\r\n      selectedGender: \"\",\r\n      timeType: \"\",\r\n      isShowLoading: false,\r\n      dataPayment: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.props.getGenders();\r\n\r\n    await this.getallpayment();\r\n  }\r\n\r\n  getallpayment = async () => {\r\n    let response = await getAllCodeService(\"PAYMENT\");\r\n    if (response && response.errCode === 0) {\r\n      this.setState({\r\n        dataPayment: response.data,\r\n      });\r\n    }\r\n    console.log(\"check data pay ment 1233\", response);\r\n  };\r\n  disableDates = () => {\r\n    var today, dd, mm, yyyy;\r\n    today = new Date();\r\n    dd = today.getDate() + 1;\r\n    mm = today.getMonth() + 1;\r\n    yyyy = today.getFullYear();\r\n    return yyyy + \"-\" + mm + \"-\" + dd;\r\n  };\r\n  buildDataGender = (data) => {\r\n    let result = [];\r\n    let language = this.props.language;\r\n    if (data && data.length > 0) {\r\n      data.map((item) => {\r\n        let object = {};\r\n        object.label = language === LANGUAGES.VI ? item.valueVi : item.valueEn;\r\n        object.value = item.keyMap;\r\n        result.push(object);\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n      this.setState({\r\n        genders: this.buildDataGender(this.props.genders),\r\n      });\r\n    }\r\n    if (this.props.genders !== prevProps.genders) {\r\n      this.setState({\r\n        genders: this.buildDataGender(this.props.genders),\r\n      });\r\n    }\r\n    if (this.props.dataTime !== prevProps.dataTime) {\r\n      if (this.props.dataTime && !_.isEmpty(this.props.dataTime)) {\r\n        let doctorId = this.props.dataTime.doctorId;\r\n        let timeType = this.props.dataTime.timeType;\r\n        this.setState({\r\n          doctorId: doctorId,\r\n          timeType: timeType,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleOnChangeInput = (event, id) => {\r\n    let valueInput = event.target.value;\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = valueInput;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n  };\r\n  handleOnchangeDatePiker = (date) => {\r\n    this.setState({\r\n      birthday: date[0],\r\n    });\r\n  };\r\n  handleChangeSelect = (selectedOption) => {\r\n    this.setState({\r\n      selectedGender: selectedOption,\r\n    });\r\n  };\r\n\r\n  buildDataBooking = (dataTime) => {\r\n    let { language } = this.props;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let time =\r\n        language === LANGUAGES.VI\r\n          ? dataTime.timeTypeData.valueVi\r\n          : dataTime.timeTypeData.valueEn;\r\n      let date =\r\n        language === LANGUAGES.VI\r\n          ? moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\")\r\n          : moment\r\n              .unix(+dataTime.date / 1000)\r\n              .locale(\"en\")\r\n              .format(\"ddd - MM/DD/YYYY\");\r\n\r\n      return `${time}-${date}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  buildDoctorName = (dataTime) => {\r\n    let { language } = this.props;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let name =\r\n        language === LANGUAGES.VI\r\n          ? `${dataTime.doctorData.lastName}${dataTime.doctorData.firstName}`\r\n          : `${dataTime.doctorData.firstName}${dataTime.doctorData.lastName}`;\r\n      return name;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  // handlePayBooking =  async () => {\r\n\r\n  //   let res = await postBanking({\r\n  //   });\r\n  //   console.log(\"res\", res);\r\n  //   this.setState({\r\n  //     isShowLoading: false,\r\n  //   });\r\n\r\n  // };\r\n\r\n  handleDoctorInfo = async () => {\r\n    console.log(\"thanh toan dien tu\")\r\n    let data = {};\r\n    data.amount = 350000;\r\n    data.orderInfo = \"test create payment 350.000 VND\";\r\n    let res = await postBanking(data);\r\n    console.log(\"res\", res);\r\n    this.setState({\r\n      isShowLoading: false,\r\n    });\r\n  };\r\n\r\n  handleConfirmBooking = async () => {\r\n    console.log(\"check confirm\", this.state);\r\n    this.setState({\r\n      isShowLoading: true,\r\n    });\r\n    // !data.email || !data.doctorId || !data.timeType || !data.date\r\n    let date = new Date(this.state.birthday).getTime();\r\n    let timeString = this.buildDataBooking(this.props.dataTime);\r\n    let doctorName = this.buildDoctorName(this.props.dataTime);\r\n\r\n    let res = await postPatientAppoiment({\r\n      fullName: this.state.fullName,\r\n      phoneNumber: this.state.phoneNumber,\r\n      email: this.state.email,\r\n      address: this.state.address,\r\n      reason: this.state.reason,\r\n      date: this.props.dataTime.date,\r\n      birthday: date,\r\n      selectedGender: this.state.selectedGender.value,\r\n      doctorId: this.state.doctorId,\r\n      timeType: this.state.timeType,\r\n      language: this.props.language,\r\n      timeString: timeString,\r\n      doctorName: doctorName,\r\n    });\r\n\r\n    console.log(\"res\", res);\r\n    this.setState({\r\n      isShowLoading: false,\r\n    });\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Bookign a new appoiment succedd\");\r\n      this.props.closeBookingClose();\r\n    } else {\r\n      toast.error(\"Bookign a new appoiment error\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { isOpenModal, closeBookingClose, dataTime, dataProfileprop } =\r\n      this.props;\r\n    console.log(\"check data thanh toan\", dataProfileprop);\r\n    console.log(\"check prop bookign modal\", this.props);\r\n    console.log(\"asdsadasdasd\", this.state.dataPayment);\r\n    let yesterday = new Date(new Date().setTime());\r\n    let doctorId = \"\";\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      doctorId = dataTime.doctorId;\r\n    }\r\n    const optionsPayMent = [\r\n      { value: \"Tiền Mặt\", label: \"Tiền Mặt\" },\r\n      { value: \"Thanh Toán Điện Tử\", label: \"Thanh Toán Điện Tử\" },\r\n    ];\r\n\r\n    const optionsExamination = [\r\n      { value: \"Gặp Trực Tiếp\", label: \"Gặp Trực Tiếp\" },\r\n      { value: \"Khám Từ Xa\", label: \"Khám Từ Xa\" },\r\n    ];\r\n\r\n    // fullName: '',\r\n    //     phoneNumber: '',\r\n    //         email: '',\r\n    //             address: '',\r\n    //                 reason: '',\r\n    //                     birthday: '',\r\n    //                         gender: '',\r\n    //                             doctorId: ''\r\n    return (\r\n      <>\r\n        <LoadingOverlay\r\n          active={this.state.isShowLoading}\r\n          spinner\r\n          text=\"Loading...\"\r\n        >\r\n          <Modal\r\n            isOpen={isOpenModal}\r\n            // toggle={}\r\n            className={\"booking-modal-container\"}\r\n            size=\"lg\"\r\n            centered\r\n            // backdrop={true}\r\n          >\r\n            <div className=\"booking-modal-content\">\r\n              <div className=\"booking-modal-header\">\r\n                <span className=\"left\">\r\n                  <FormattedMessage id={\"patient.booking-modal.title\"} />\r\n                </span>\r\n                <span className=\"right\" onClick={closeBookingClose}>\r\n                  <i className=\"fas fa-times\"></i>\r\n                </span>\r\n              </div>\r\n              <div className=\"booking-modal-body\">\r\n                {/* {JSON.stringify(dataTime)} */}\r\n                <div className=\"doctor-infor\">\r\n                  <ProfileDoctor\r\n                    doctorId={doctorId}\r\n                    isShowDescriptionDoctor={false}\r\n                    dataTime={dataTime}\r\n                    isShowLinkDetail={false}\r\n                    isShowPrice={true}\r\n                  />\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.fullName\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.fullName}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"fullName\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage\r\n                        id={\"patient.booking-modal.phoneNumber\"}\r\n                      />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.phoneNumber}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"phoneNumber\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.email\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.email}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"email\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.address\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.address}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"address\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  {/* <p>test</p> */}\r\n                  <div className=\"col-12 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.reson\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.reason}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"reason\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.birthday\"} />\r\n                    </label>\r\n                    <DatePicker\r\n                      onChange={this.handleOnchangeDatePiker}\r\n                      className=\"form-control\"\r\n                      value={this.state.birthday}\r\n                      maxDate={this.disableDates()}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.gender\"} />\r\n                    </label>\r\n                    <Select\r\n                      value={this.state.selectedGender}\r\n                      onChange={this.handleChangeSelect}\r\n                      options={this.state.genders}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>Phương thức thanh toán</label>\r\n                    <Select\r\n                      value={this.state.options}\r\n                      // onChange={this.handleChangeSelect}\r\n                      options={optionsPayMent}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>Phương Thức Khám</label>\r\n                    <Select\r\n                      value={this.state.optionsExamination}\r\n                      // onChange={this.handleChangeSelect}\r\n                      options={optionsExamination}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"booking-modal-footer\">\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  onClick={() => this.handleDoctorInfo()}\r\n                >\r\n                  Thanh Toán Điện Tử\r\n                </button>\r\n                <button\r\n                  className=\" btn-booking-confirm\"\r\n                  onClick={() => this.handleConfirmBooking()}\r\n                >\r\n                  <FormattedMessage id={\"patient.booking-modal.btn-confirm\"} />\r\n                </button>\r\n                <button\r\n                  className=\" btn-booking-cancel\"\r\n                  onClick={closeBookingClose}\r\n                >\r\n                  <FormattedMessage id={\"patient.booking-modal.btn-cancel\"} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGenders: () => dispatch(actions.fetchGenderStart()),\r\n    getRequiredDoctorInfo: () => dispatch(actions.getRequiredDoctorInfo()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\ListPatienShedule.js",["856","857","858","859","860","861"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\ListPatientExam.js",["862","863","864","865","866","867"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\ManageHandBook.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\reducers\\adminReducer.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\reducers\\appReducer.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\HomePage\\Section\\HomeFooter.js",["868"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\actions\\index.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\LanguageUtils.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\ToastUtil.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\ModelEditUser.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\axios.js",["869","870"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\components\\Input\\DatePicker.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\Header\\menuApp.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\components\\Navigator.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\CreatePrecription.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\actions\\adminActions.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\actions\\userActions.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\components\\CustomToast.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\store\\actions\\appActions.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\RemedyModel.js",["871","872","873","874","875","876"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\WatchPatientModel.js",["877","878","879","880","881","882","883","884","885"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./WatchPatientModel.scss\";\r\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport ManagePatient from \"./ManagePatient\";\r\nimport { LANGUAGES, CommonUtils } from \"../../../utils\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport moment from \"moment\";\r\nclass WatchPatientModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      updatedAt: \"\",\r\n      date: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phoneNumber: \"\",\r\n      patientReason: \"\",\r\n      genders: \"\",\r\n      idPatient: \"\"\r\n    };\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n    if (this.props.dataModel) {\r\n      this.setState({\r\n        // email: this.props.dataModel.patientData.email,\r\n        // date: this.props.dataPatient.updatedAt,\r\n        // phoneNumber: this.props.dataPatient.phoneNumber,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.dataModel !== this.props.dataModel) {\r\n      this.setState({\r\n        // email: this.props.dataModel.patientData.email,\r\n      });\r\n    }\r\n  }\r\n  handleOnChangeEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSendRemedy = () => {\r\n    this.props.sendRemedy(this.state);\r\n  };\r\n  render() {\r\n    let { isOpenModal, closeRemedyClose, language, dataPatient, Idtesst } = this.props;\r\n    console.log(\"dataPatient\", dataPatient)\r\n    console.log('cgeck prop Idtesst', Idtesst)\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={isOpenModal}\r\n          // toggle={}\r\n          className={\"booking-modal-container\"}\r\n          size=\"lg\"\r\n          style={{ width: \"1500px\" }}\r\n          centered\r\n        // backdrop={true}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\"> Form Thông tin Bệnh Nhân</h5>\r\n            <button\r\n              className=\"close\"\r\n              type=\"button\"\r\n              aria-label=\"Close\"\r\n              onClick={closeRemedyClose}\r\n            >\r\n              <span aria-hidden=\"true\">x</span>\r\n            </button>\r\n          </div>\r\n          <ModalBody style={{ height: \"500px\" }}>\r\n            <div className=\"booking-modal-content\">\r\n              <div className=\"booking-modal-body\">\r\n                {/* {JSON.stringify(dataTime)} */}\r\n                {dataPatient &&\r\n                  dataPatient.length > 0 &&\r\n                  dataPatient.map((item, index) => {\r\n                    let data = item.date;\r\n                    data = moment(new Date()).format('dddd - DD/MM')\r\n                    console.log(\"data Date\", Idtesst === item.patientId);\r\n                    return (\r\n                      <>\r\n\r\n                        <div className=\"row\" key={index} >\r\n                          {Idtesst === item.patientId ? <>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Họ Và Tên</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.patientData.\r\n                                  lastName}\r\n                              // onChange={(event) =>\r\n                              //   this.handleOnChangeInput(event, \"fullName\")\r\n                              // }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>SDT</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.patientData\r\n                                  .phoneNumber}\r\n                              // onChange={(event) =>\r\n                              //   this.handleOnChangeInput(event, \"phoneNumber\")\r\n                              // }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Email</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.patientData.email}\r\n                              // onChange={(event) =>\r\n                              //   this.handleOnChangeInput(event, \"email\")\r\n                              // }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Địa Chỉ</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.patientData.address}\r\n                              // onChange={(event) =>\r\n                              //   this.handleOnChangeInput(event, \"address\")\r\n                              // }\r\n                              />\r\n                            </div>\r\n                            {/* <p>test</p> */}\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Lý Do Khám Bệnh :</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.patientData.patientReason}\r\n                              // onChange={(event) =>\r\n                              //   this.handleOnChangeInput(event, \"reason\")\r\n                              // }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Giới tính</label>\r\n                              <input\r\n                                // onChange={this.handleOnchangeDatePiker}\r\n                                className=\"form-control\"\r\n                                value={item.patientData.genderData.valueVi}\r\n                              // value={this.state.birthday}\r\n                              // maxDate={this.disableDates()}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Ngày Đặt</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={data}\r\n                              // onChange={this.handleChangeSelect}\r\n                              // options={this.state.genders}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Thời Gian khám :</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.timeTypeDataPatient.valueEn}\r\n                              // onChange={this.handleChangeSelect}\r\n                              // options={this.state.genders}\r\n                              />\r\n                            </div>\r\n                            {/* <div className=\"col-12 form-group\">\r\n                    <label>8</label>\r\n                    <textarea />\r\n                  </div> */}\r\n                          </> : <></>\r\n                          }\r\n\r\n                        </div>\r\n                      </>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"warning\">Send</Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={closeRemedyClose}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WatchPatientModel);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\WatchPrescripttionModel.js",["886","887","888","889","890","891","892","893","894","895"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./WatchPatientModel.scss\";\r\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport ManagePatient from \"./ManagePatient\";\r\nimport { LANGUAGES, CommonUtils } from \"../../../utils\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport moment from \"moment\";\r\nimport { postPatientAppoiment,savePatientService} from '../../../services/userService';\r\nimport ManagePrescription from \"./ManagePrescription\";\r\nclass WatchPrescripttionModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      updatedAt: \"\",\r\n      date: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phoneNumber: \"\",\r\n      patientReason: \"\",\r\n      genders: \"\",\r\n      doctorDiagnose:''\r\n   \r\n    };\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n    if (this.props.dataModel) {\r\n      this.setState({\r\n        // email: this.props.dataModel.patientData.email,\r\n        // date: this.props.dataPatient.updatedAt,\r\n        // phoneNumber: this.props.dataPatient.phoneNumber,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.dataModel !== this.props.dataModel) {\r\n      this.setState({\r\n        // email: this.props.dataModel.patientData.email,\r\n      });\r\n    }\r\n  }\r\n  handleOnChangeEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSendRemedy = () => {\r\n    this.props.sendRemedy(this.state);\r\n  };\r\n\r\n\r\n  handleOnclick = async (item,doctorDiagnose,data)=>{\r\nconsole.log(\"doctorDiagnose,\",doctorDiagnose);\r\nconsole.log(\"item,\",item);\r\nconsole.log(\"item id,\",item.id);\r\n\r\n// let res = await postPatientAppoiment({\r\n//   fullName: item.patientData.lastName,\r\n//   phoneNumber: item.patientData.phoneNumber,\r\n//   email: item.patientData.email,\r\n//   address: item.patientData.address,\r\n//   reason: item.patientData.patientReason,\r\n//   selectedGender:item.patientData.genderData.valueVi,\r\n//   date:data,\r\n//   doctorDiagnose:doctorDiagnose\r\n// });\r\nlet res = await savePatientService({\r\n  id: item.patientId,\r\n  doctorDiagnose:doctorDiagnose\r\n});\r\n\r\n// console.log(\"res\", res);\r\n// this.setState({\r\n//   isShowLoading: false,\r\n// });\r\nconsole.log('ress data',res)\r\nif (res && res.errCode === 0) {\r\n  toast.success(\"Bookign a new appoiment succedd\");\r\n} else {\r\n  toast.error(\"Bookign a new appoiment error\");\r\n}\r\n  }\r\n\r\n\r\n  handleChangeTextArea = (event)=>{\r\n    this.setState({\r\n      doctorDiagnose: event.target.value,\r\n    });\r\n    console.log('check event doctorDiagnose',event.target.value)\r\n  }\r\n  \r\n  render() {\r\n    let { isOpenModal, closeRemedyClose, language, dataModel, Idtesst,dataIdShow  } = this.props;\r\n    let {doctorDiagnose} = this.state\r\n    return (\r\n      <>\r\n      <ManagePrescription doctorDiagnose={doctorDiagnose}/>\r\n        <Modal\r\n          isOpen={isOpenModal}\r\n          // toggle={}\r\n          className={\"booking-modal-container\"}\r\n          size=\"lg\"\r\n          style={{ width: \"1500px\" }}\r\n          centered\r\n        // backdrop={true}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\"> Form Thông tin Bệnh Nhân</h5>\r\n            <button\r\n              className=\"close\"\r\n              type=\"button\"\r\n              aria-label=\"Close\"\r\n              onClick={closeRemedyClose}\r\n            >\r\n              <span aria-hidden=\"true\">x</span>\r\n            </button>\r\n          </div>\r\n          <ModalBody style={{ height: \"500px\" }}>\r\n            <div className=\"booking-modal-content\">\r\n              <div className=\"booking-modal-body\">\r\n                {/* {JSON.stringify(dataTime)} */}\r\n                {dataModel &&\r\n                  dataModel.length >= 0 &&\r\n                  dataModel.map((item, index) => {\r\n                    console.log(\"item\",item)\r\n                    let data = item.date;\r\n                    data = moment(new Date()).format('dddd - DD/MM')\r\n                    console.log(\"data Date\", dataIdShow === item.patientId);\r\n                    return (\r\n                      <>\r\n\r\n                        <div className=\"row\" key={index} >\r\n                          {dataIdShow === item.patientId ? <>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Họ Và Tên</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.patientData.\r\n                                  lastName}\r\n                              // onChange={(event) =>\r\n                              //   this.handleOnChangeInput(event, \"fullName\")\r\n                              // }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>SDT</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.patientData\r\n                                  .phoneNumber}\r\n                              // onChange={(event) =>\r\n                              //   this.handleOnChangeInput(event, \"phoneNumber\")\r\n                              // }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Email</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.patientData.email}\r\n                              // onChange={(event) =>\r\n                              //   this.handleOnChangeInput(event, \"email\")\r\n                              // }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Địa Chỉ</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.patientData.address}\r\n                              // onChange={(event) =>\r\n                              //   this.handleOnChangeInput(event, \"address\")\r\n                              // }\r\n                              />\r\n                            </div>\r\n                            {/* <p>test</p> */}\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Lý Do Khám Bệnh :</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.patientData.patientReason}\r\n                              // onChange={(event) =>\r\n                              //   this.handleOnChangeInput(event, \"reason\")\r\n                              // }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Giới tính</label>\r\n                              <input\r\n                                // onChange={this.handleOnchangeDatePiker}\r\n                                className=\"form-control\"\r\n                                value={item.patientData.genderData.valueVi}\r\n                              // value={this.state.birthday}\r\n                              // maxDate={this.disableDates()}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Ngày Đặt</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={data}\r\n                              // onChange={this.handleChangeSelect}\r\n                              // options={this.state.genders}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-6 form-group\">\r\n                              <label>Thời Gian khám :</label>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                value={item.timeTypeDataPatient.valueEn}\r\n                              // onChange={this.handleChangeSelect}\r\n                              // options={this.state.genders}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-12 form-group\">\r\n                              <label>Chuẩn đoán của bác sĩ:</label>\r\n                           \r\n                              <textarea id=\"text\" rows=\"4\" cols=\"50\" onChange={(event)=>{this.handleChangeTextArea(event)}}  value={doctorDiagnose}> </textarea>\r\n                            </div>\r\n                            <button className=\"col-4 btn btn-warning\" color=\"warning\" onClick={()=>this.handleOnclick(item,doctorDiagnose,data)}>Send</button>\r\n                          </> : <></>\r\n                          }\r\n\r\n                        </div>\r\n                      </>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={closeRemedyClose}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WatchPrescripttionModel);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Doctor\\PrescriptionModel.js",["896","897","898","899","900","901"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\n// import \"./PrescriptionModel.scss\";\r\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { LANGUAGES, CommonUtils } from \"../../../utils\";\r\nclass PrescriptionModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      imgBase64: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.dataModel) {\r\n      this.setState({\r\n        email: this.props.dataModel.email,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.dataModel !== this.props.dataModel) {\r\n      this.setState({\r\n        email: this.props.dataModel.email,\r\n      });\r\n    }\r\n  }\r\n  handleOnChangeEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleOnChangeImg = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    console.log(file);\r\n    if (file) {\r\n      let base64 = await CommonUtils.convertBase64(file);\r\n      this.setState({\r\n        imgBase64: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSendRemedy = () => {\r\n    this.props.sendRemedy(this.state);\r\n  };\r\n  render() {\r\n    let { isOpenModal, closeRemedyClose, dataModel, sendRemedy } = this.props;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={isOpenModal}\r\n          // toggle={}\r\n          className={\"booking-modal-container\"}\r\n          size=\"md\"\r\n          centered\r\n          // backdrop={true}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\"> Gửi hóa đơn Đơn thuốc</h5>\r\n            <button\r\n              className=\"close\"\r\n              type=\"button\"\r\n              aria-label=\"Close\"\r\n              onClick={closeRemedyClose}\r\n            >\r\n              <span aria-hidden=\"true\">x</span>\r\n            </button>\r\n          </div>\r\n          <ModalBody>\r\n            <form>\r\n              {\" \"}\r\n              <div className=\"row\">\r\n                <div className=\"col-6 form-group\">\r\n                  <label>Email bệnh nhân</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={this.state.email}\r\n                    onChange={(event) => this.handleOnChangeEmail(event)}\r\n                  />\r\n\r\n                  <div className=\"col-12 form-group\">\r\n                    <label>Chọn file đơn thuốc</label>\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control-file\"\r\n                      onChange={(event) => this.handleOnChangeImg(event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={() => this.handleSendRemedy()}>\r\n              Send\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={closeRemedyClose}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PrescriptionModel);\r\n","C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\constant.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\components\\Formating\\FormattedDate.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\Admin\\TableManageUser.js",["902","903","904","905"],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\emitter.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\containers\\System\\ModelUser.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\KeyCodeUtils.js",[],"C:\\Users\\anlnd\\Documents\\GitHub\\BookingDoctor\\ReactFE\\src\\utils\\CommonUtils.js",[],{"ruleId":"906","replacedBy":"907"},{"ruleId":"908","replacedBy":"909"},{"ruleId":"910","severity":1,"message":"911","line":18,"column":8,"nodeType":"912","messageId":"913","endLine":18,"endColumn":14},{"ruleId":"910","severity":1,"message":"914","line":24,"column":7,"nodeType":"912","messageId":"913","endLine":24,"endColumn":21},{"ruleId":"910","severity":1,"message":"915","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":18},{"ruleId":"910","severity":1,"message":"916","line":14,"column":8,"nodeType":"912","messageId":"913","endLine":14,"endColumn":18},{"ruleId":"917","severity":1,"message":"918","line":49,"column":28,"nodeType":"919","messageId":"920","endLine":49,"endColumn":30},{"ruleId":"917","severity":1,"message":"918","line":95,"column":28,"nodeType":"919","messageId":"920","endLine":95,"endColumn":30},{"ruleId":"910","severity":1,"message":"921","line":10,"column":10,"nodeType":"912","messageId":"913","endLine":10,"endColumn":19},{"ruleId":"917","severity":1,"message":"918","line":38,"column":28,"nodeType":"919","messageId":"920","endLine":38,"endColumn":30},{"ruleId":"910","severity":1,"message":"922","line":57,"column":11,"nodeType":"912","messageId":"913","endLine":57,"endColumn":19},{"ruleId":"910","severity":1,"message":"923","line":6,"column":10,"nodeType":"912","messageId":"913","endLine":6,"endColumn":16},{"ruleId":"910","severity":1,"message":"924","line":6,"column":28,"nodeType":"912","messageId":"913","endLine":6,"endColumn":41},{"ruleId":"910","severity":1,"message":"925","line":6,"column":43,"nodeType":"912","messageId":"913","endLine":6,"endColumn":50},{"ruleId":"910","severity":1,"message":"926","line":5,"column":10,"nodeType":"912","messageId":"913","endLine":5,"endColumn":21},{"ruleId":"910","severity":1,"message":"927","line":5,"column":40,"nodeType":"912","messageId":"913","endLine":5,"endColumn":57},{"ruleId":"910","severity":1,"message":"928","line":11,"column":10,"nodeType":"912","messageId":"913","endLine":11,"endColumn":16},{"ruleId":"910","severity":1,"message":"929","line":11,"column":18,"nodeType":"912","messageId":"913","endLine":11,"endColumn":30},{"ruleId":"910","severity":1,"message":"924","line":12,"column":28,"nodeType":"912","messageId":"913","endLine":12,"endColumn":41},{"ruleId":"910","severity":1,"message":"925","line":12,"column":43,"nodeType":"912","messageId":"913","endLine":12,"endColumn":50},{"ruleId":"910","severity":1,"message":"930","line":13,"column":10,"nodeType":"912","messageId":"913","endLine":13,"endColumn":22},{"ruleId":"910","severity":1,"message":"931","line":21,"column":10,"nodeType":"912","messageId":"913","endLine":21,"endColumn":17},{"ruleId":"910","severity":1,"message":"932","line":490,"column":26,"nodeType":"912","messageId":"913","endLine":490,"endColumn":39},{"ruleId":"933","severity":1,"message":"934","line":94,"column":21,"nodeType":"935","endLine":103,"endColumn":23},{"ruleId":"933","severity":1,"message":"934","line":123,"column":21,"nodeType":"935","endLine":132,"endColumn":23},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"937","line":6,"column":8,"nodeType":"912","messageId":"913","endLine":6,"endColumn":20},{"ruleId":"938","severity":1,"message":"939","line":141,"column":5,"nodeType":"940","messageId":"941","endLine":158,"endColumn":6},{"ruleId":"942","severity":1,"message":"943","line":144,"column":7,"nodeType":"944","messageId":"945","endLine":145,"endColumn":26},{"ruleId":"942","severity":1,"message":"943","line":146,"column":7,"nodeType":"944","messageId":"945","endLine":147,"endColumn":26},{"ruleId":"942","severity":1,"message":"943","line":148,"column":7,"nodeType":"944","messageId":"945","endLine":149,"endColumn":26},{"ruleId":"942","severity":1,"message":"943","line":150,"column":7,"nodeType":"944","messageId":"945","endLine":151,"endColumn":26},{"ruleId":"942","severity":1,"message":"943","line":152,"column":7,"nodeType":"944","messageId":"945","endLine":153,"endColumn":26},{"ruleId":"942","severity":1,"message":"943","line":154,"column":7,"nodeType":"944","messageId":"945","endLine":155,"endColumn":26},{"ruleId":"942","severity":1,"message":"943","line":156,"column":7,"nodeType":"944","messageId":"945","endLine":157,"endColumn":26},{"ruleId":"946","severity":1,"message":"947","line":27,"column":37,"nodeType":"935","endLine":28,"endColumn":122},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"948","line":5,"column":8,"nodeType":"912","messageId":"913","endLine":5,"endColumn":14},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"948","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":14},{"ruleId":"917","severity":1,"message":"918","line":57,"column":37,"nodeType":"919","messageId":"920","endLine":57,"endColumn":39},{"ruleId":"917","severity":1,"message":"918","line":69,"column":37,"nodeType":"919","messageId":"920","endLine":69,"endColumn":39},{"ruleId":"917","severity":1,"message":"918","line":80,"column":37,"nodeType":"919","messageId":"920","endLine":80,"endColumn":39},{"ruleId":"917","severity":1,"message":"918","line":91,"column":37,"nodeType":"919","messageId":"920","endLine":91,"endColumn":39},{"ruleId":"917","severity":1,"message":"918","line":101,"column":37,"nodeType":"919","messageId":"920","endLine":101,"endColumn":39},{"ruleId":"917","severity":1,"message":"918","line":110,"column":37,"nodeType":"919","messageId":"920","endLine":110,"endColumn":39},{"ruleId":"910","severity":1,"message":"949","line":130,"column":35,"nodeType":"912","messageId":"913","endLine":130,"endColumn":46},{"ruleId":"910","severity":1,"message":"950","line":307,"column":23,"nodeType":"912","messageId":"913","endLine":307,"endColumn":36},{"ruleId":"910","severity":1,"message":"951","line":223,"column":9,"nodeType":"912","messageId":"913","endLine":223,"endColumn":17},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"952","line":12,"column":10,"nodeType":"912","messageId":"913","endLine":12,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":13,"column":8,"nodeType":"912","messageId":"913","endLine":13,"endColumn":20},{"ruleId":"910","severity":1,"message":"954","line":18,"column":8,"nodeType":"912","messageId":"913","endLine":18,"endColumn":25},{"ruleId":"910","severity":1,"message":"955","line":156,"column":9,"nodeType":"912","messageId":"913","endLine":156,"endColumn":18},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"952","line":12,"column":10,"nodeType":"912","messageId":"913","endLine":12,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":13,"column":8,"nodeType":"912","messageId":"913","endLine":13,"endColumn":20},{"ruleId":"910","severity":1,"message":"954","line":17,"column":8,"nodeType":"912","messageId":"913","endLine":17,"endColumn":25},{"ruleId":"910","severity":1,"message":"956","line":7,"column":21,"nodeType":"912","messageId":"913","endLine":7,"endColumn":33},{"ruleId":"910","severity":1,"message":"957","line":7,"column":35,"nodeType":"912","messageId":"913","endLine":7,"endColumn":45},{"ruleId":"910","severity":1,"message":"948","line":9,"column":8,"nodeType":"912","messageId":"913","endLine":9,"endColumn":14},{"ruleId":"910","severity":1,"message":"958","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":21},{"ruleId":"917","severity":1,"message":"918","line":51,"column":35,"nodeType":"919","messageId":"920","endLine":51,"endColumn":37},{"ruleId":"910","severity":1,"message":"959","line":83,"column":50,"nodeType":"912","messageId":"913","endLine":83,"endColumn":60},{"ruleId":"917","severity":1,"message":"918","line":107,"column":44,"nodeType":"919","messageId":"920","endLine":107,"endColumn":46},{"ruleId":"910","severity":1,"message":"960","line":9,"column":8,"nodeType":"912","messageId":"913","endLine":9,"endColumn":14},{"ruleId":"910","severity":1,"message":"952","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":26},{"ruleId":"961","severity":1,"message":"962","line":11,"column":11,"nodeType":"935","messageId":"963","endLine":11,"endColumn":63,"fix":"964"},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"948","line":5,"column":8,"nodeType":"912","messageId":"913","endLine":5,"endColumn":14},{"ruleId":"910","severity":1,"message":"965","line":7,"column":10,"nodeType":"912","messageId":"913","endLine":7,"endColumn":33},{"ruleId":"910","severity":1,"message":"952","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":20},{"ruleId":"910","severity":1,"message":"966","line":54,"column":11,"nodeType":"912","messageId":"913","endLine":54,"endColumn":19},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"948","line":5,"column":8,"nodeType":"912","messageId":"913","endLine":5,"endColumn":14},{"ruleId":"910","severity":1,"message":"965","line":7,"column":10,"nodeType":"912","messageId":"913","endLine":7,"endColumn":33},{"ruleId":"910","severity":1,"message":"952","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":20},{"ruleId":"910","severity":1,"message":"966","line":52,"column":18,"nodeType":"912","messageId":"913","endLine":52,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":7,"column":8,"nodeType":"912","messageId":"913","endLine":7,"endColumn":20},{"ruleId":"910","severity":1,"message":"967","line":8,"column":10,"nodeType":"912","messageId":"913","endLine":8,"endColumn":16},{"ruleId":"910","severity":1,"message":"968","line":8,"column":25,"nodeType":"912","messageId":"913","endLine":8,"endColumn":36},{"ruleId":"910","severity":1,"message":"969","line":8,"column":38,"nodeType":"912","messageId":"913","endLine":8,"endColumn":47},{"ruleId":"910","severity":1,"message":"970","line":8,"column":49,"nodeType":"912","messageId":"913","endLine":8,"endColumn":60},{"ruleId":"910","severity":1,"message":"971","line":14,"column":3,"nodeType":"912","messageId":"913","endLine":14,"endColumn":22},{"ruleId":"917","severity":1,"message":"918","line":68,"column":23,"nodeType":"919","messageId":"920","endLine":68,"endColumn":25},{"ruleId":"910","severity":1,"message":"955","line":224,"column":9,"nodeType":"912","messageId":"913","endLine":224,"endColumn":18},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"948","line":4,"column":8,"nodeType":"912","messageId":"913","endLine":4,"endColumn":14},{"ruleId":"910","severity":1,"message":"965","line":7,"column":3,"nodeType":"912","messageId":"913","endLine":7,"endColumn":26},{"ruleId":"910","severity":1,"message":"921","line":11,"column":10,"nodeType":"912","messageId":"913","endLine":11,"endColumn":19},{"ruleId":"910","severity":1,"message":"952","line":12,"column":10,"nodeType":"912","messageId":"913","endLine":12,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":13,"column":8,"nodeType":"912","messageId":"913","endLine":13,"endColumn":20},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"948","line":4,"column":8,"nodeType":"912","messageId":"913","endLine":4,"endColumn":14},{"ruleId":"910","severity":1,"message":"965","line":7,"column":3,"nodeType":"912","messageId":"913","endLine":7,"endColumn":26},{"ruleId":"910","severity":1,"message":"921","line":11,"column":10,"nodeType":"912","messageId":"913","endLine":11,"endColumn":19},{"ruleId":"910","severity":1,"message":"952","line":12,"column":10,"nodeType":"912","messageId":"913","endLine":12,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":13,"column":8,"nodeType":"912","messageId":"913","endLine":13,"endColumn":20},{"ruleId":"910","severity":1,"message":"972","line":2,"column":8,"nodeType":"912","messageId":"913","endLine":2,"endColumn":9},{"ruleId":"910","severity":1,"message":"973","line":13,"column":11,"nodeType":"912","messageId":"913","endLine":13,"endColumn":15},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"968","line":5,"column":25,"nodeType":"912","messageId":"913","endLine":5,"endColumn":36},{"ruleId":"910","severity":1,"message":"974","line":6,"column":10,"nodeType":"912","messageId":"913","endLine":6,"endColumn":15},{"ruleId":"910","severity":1,"message":"921","line":7,"column":10,"nodeType":"912","messageId":"913","endLine":7,"endColumn":19},{"ruleId":"910","severity":1,"message":"975","line":57,"column":42,"nodeType":"912","messageId":"913","endLine":57,"endColumn":51},{"ruleId":"910","severity":1,"message":"976","line":57,"column":53,"nodeType":"912","messageId":"913","endLine":57,"endColumn":63},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"968","line":5,"column":25,"nodeType":"912","messageId":"913","endLine":5,"endColumn":36},{"ruleId":"910","severity":1,"message":"977","line":7,"column":8,"nodeType":"912","messageId":"913","endLine":7,"endColumn":21},{"ruleId":"910","severity":1,"message":"921","line":8,"column":10,"nodeType":"912","messageId":"913","endLine":8,"endColumn":19},{"ruleId":"910","severity":1,"message":"978","line":8,"column":21,"nodeType":"912","messageId":"913","endLine":8,"endColumn":32},{"ruleId":"910","severity":1,"message":"979","line":9,"column":8,"nodeType":"912","messageId":"913","endLine":9,"endColumn":18},{"ruleId":"910","severity":1,"message":"922","line":75,"column":42,"nodeType":"912","messageId":"913","endLine":75,"endColumn":50},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"968","line":5,"column":25,"nodeType":"912","messageId":"913","endLine":5,"endColumn":36},{"ruleId":"910","severity":1,"message":"974","line":6,"column":10,"nodeType":"912","messageId":"913","endLine":6,"endColumn":15},{"ruleId":"910","severity":1,"message":"921","line":7,"column":10,"nodeType":"912","messageId":"913","endLine":7,"endColumn":19},{"ruleId":"910","severity":1,"message":"975","line":54,"column":42,"nodeType":"912","messageId":"913","endLine":54,"endColumn":51},{"ruleId":"910","severity":1,"message":"976","line":54,"column":53,"nodeType":"912","messageId":"913","endLine":54,"endColumn":63},{"ruleId":"910","severity":1,"message":"952","line":2,"column":10,"nodeType":"912","messageId":"913","endLine":2,"endColumn":26},{"ruleId":"910","severity":1,"message":"980","line":8,"column":8,"nodeType":"912","messageId":"913","endLine":8,"endColumn":16},{"ruleId":"910","severity":1,"message":"981","line":16,"column":7,"nodeType":"912","messageId":"913","endLine":16,"endColumn":15},{"ruleId":"910","severity":1,"message":"982","line":19,"column":10,"nodeType":"912","messageId":"913","endLine":19,"endColumn":28},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"968","line":5,"column":25,"nodeType":"912","messageId":"913","endLine":5,"endColumn":36},{"ruleId":"910","severity":1,"message":"977","line":7,"column":8,"nodeType":"912","messageId":"913","endLine":7,"endColumn":21},{"ruleId":"910","severity":1,"message":"921","line":8,"column":10,"nodeType":"912","messageId":"913","endLine":8,"endColumn":19},{"ruleId":"910","severity":1,"message":"978","line":8,"column":21,"nodeType":"912","messageId":"913","endLine":8,"endColumn":32},{"ruleId":"910","severity":1,"message":"979","line":9,"column":8,"nodeType":"912","messageId":"913","endLine":9,"endColumn":18},{"ruleId":"910","severity":1,"message":"983","line":12,"column":3,"nodeType":"912","messageId":"913","endLine":12,"endColumn":23},{"ruleId":"910","severity":1,"message":"984","line":15,"column":8,"nodeType":"912","messageId":"913","endLine":15,"endColumn":25},{"ruleId":"910","severity":1,"message":"922","line":106,"column":7,"nodeType":"912","messageId":"913","endLine":106,"endColumn":15},{"ruleId":"910","severity":1,"message":"985","line":108,"column":7,"nodeType":"912","messageId":"913","endLine":108,"endColumn":14},{"ruleId":"906","replacedBy":"986"},{"ruleId":"908","replacedBy":"987"},{"ruleId":"910","severity":1,"message":"911","line":18,"column":8,"nodeType":"912","messageId":"913","endLine":18,"endColumn":14},{"ruleId":"910","severity":1,"message":"914","line":24,"column":7,"nodeType":"912","messageId":"913","endLine":24,"endColumn":21},{"ruleId":"910","severity":1,"message":"915","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":18},{"ruleId":"910","severity":1,"message":"916","line":14,"column":8,"nodeType":"912","messageId":"913","endLine":14,"endColumn":18},{"ruleId":"917","severity":1,"message":"918","line":49,"column":28,"nodeType":"919","messageId":"920","endLine":49,"endColumn":30},{"ruleId":"917","severity":1,"message":"918","line":95,"column":28,"nodeType":"919","messageId":"920","endLine":95,"endColumn":30},{"ruleId":"910","severity":1,"message":"921","line":10,"column":10,"nodeType":"912","messageId":"913","endLine":10,"endColumn":19},{"ruleId":"917","severity":1,"message":"918","line":38,"column":28,"nodeType":"919","messageId":"920","endLine":38,"endColumn":30},{"ruleId":"910","severity":1,"message":"922","line":57,"column":11,"nodeType":"912","messageId":"913","endLine":57,"endColumn":19},{"ruleId":"910","severity":1,"message":"923","line":6,"column":10,"nodeType":"912","messageId":"913","endLine":6,"endColumn":16},{"ruleId":"910","severity":1,"message":"924","line":6,"column":28,"nodeType":"912","messageId":"913","endLine":6,"endColumn":41},{"ruleId":"910","severity":1,"message":"925","line":6,"column":43,"nodeType":"912","messageId":"913","endLine":6,"endColumn":50},{"ruleId":"910","severity":1,"message":"926","line":5,"column":10,"nodeType":"912","messageId":"913","endLine":5,"endColumn":21},{"ruleId":"910","severity":1,"message":"927","line":5,"column":40,"nodeType":"912","messageId":"913","endLine":5,"endColumn":57},{"ruleId":"910","severity":1,"message":"928","line":11,"column":10,"nodeType":"912","messageId":"913","endLine":11,"endColumn":16},{"ruleId":"910","severity":1,"message":"929","line":11,"column":18,"nodeType":"912","messageId":"913","endLine":11,"endColumn":30},{"ruleId":"910","severity":1,"message":"924","line":12,"column":28,"nodeType":"912","messageId":"913","endLine":12,"endColumn":41},{"ruleId":"910","severity":1,"message":"925","line":12,"column":43,"nodeType":"912","messageId":"913","endLine":12,"endColumn":50},{"ruleId":"910","severity":1,"message":"930","line":13,"column":10,"nodeType":"912","messageId":"913","endLine":13,"endColumn":22},{"ruleId":"910","severity":1,"message":"931","line":21,"column":10,"nodeType":"912","messageId":"913","endLine":21,"endColumn":17},{"ruleId":"910","severity":1,"message":"932","line":490,"column":26,"nodeType":"912","messageId":"913","endLine":490,"endColumn":39},{"ruleId":"910","severity":1,"message":"951","line":223,"column":9,"nodeType":"912","messageId":"913","endLine":223,"endColumn":17},{"ruleId":"910","severity":1,"message":"948","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":14},{"ruleId":"917","severity":1,"message":"918","line":57,"column":37,"nodeType":"919","messageId":"920","endLine":57,"endColumn":39},{"ruleId":"917","severity":1,"message":"918","line":69,"column":37,"nodeType":"919","messageId":"920","endLine":69,"endColumn":39},{"ruleId":"917","severity":1,"message":"918","line":80,"column":37,"nodeType":"919","messageId":"920","endLine":80,"endColumn":39},{"ruleId":"917","severity":1,"message":"918","line":91,"column":37,"nodeType":"919","messageId":"920","endLine":91,"endColumn":39},{"ruleId":"917","severity":1,"message":"918","line":101,"column":37,"nodeType":"919","messageId":"920","endLine":101,"endColumn":39},{"ruleId":"917","severity":1,"message":"918","line":110,"column":37,"nodeType":"919","messageId":"920","endLine":110,"endColumn":39},{"ruleId":"910","severity":1,"message":"949","line":130,"column":35,"nodeType":"912","messageId":"913","endLine":130,"endColumn":46},{"ruleId":"910","severity":1,"message":"950","line":307,"column":23,"nodeType":"912","messageId":"913","endLine":307,"endColumn":36},{"ruleId":"933","severity":1,"message":"934","line":94,"column":21,"nodeType":"935","endLine":103,"endColumn":23},{"ruleId":"933","severity":1,"message":"934","line":123,"column":21,"nodeType":"935","endLine":132,"endColumn":23},{"ruleId":"946","severity":1,"message":"947","line":27,"column":37,"nodeType":"935","endLine":28,"endColumn":122},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"937","line":6,"column":8,"nodeType":"912","messageId":"913","endLine":6,"endColumn":20},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"948","line":5,"column":8,"nodeType":"912","messageId":"913","endLine":5,"endColumn":14},{"ruleId":"910","severity":1,"message":"956","line":7,"column":21,"nodeType":"912","messageId":"913","endLine":7,"endColumn":33},{"ruleId":"910","severity":1,"message":"957","line":7,"column":35,"nodeType":"912","messageId":"913","endLine":7,"endColumn":45},{"ruleId":"910","severity":1,"message":"948","line":9,"column":8,"nodeType":"912","messageId":"913","endLine":9,"endColumn":14},{"ruleId":"910","severity":1,"message":"958","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":21},{"ruleId":"917","severity":1,"message":"918","line":51,"column":35,"nodeType":"919","messageId":"920","endLine":51,"endColumn":37},{"ruleId":"910","severity":1,"message":"959","line":83,"column":50,"nodeType":"912","messageId":"913","endLine":83,"endColumn":60},{"ruleId":"917","severity":1,"message":"918","line":107,"column":44,"nodeType":"919","messageId":"920","endLine":107,"endColumn":46},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"952","line":12,"column":10,"nodeType":"912","messageId":"913","endLine":12,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":13,"column":8,"nodeType":"912","messageId":"913","endLine":13,"endColumn":20},{"ruleId":"910","severity":1,"message":"954","line":17,"column":8,"nodeType":"912","messageId":"913","endLine":17,"endColumn":25},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"952","line":12,"column":10,"nodeType":"912","messageId":"913","endLine":12,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":13,"column":8,"nodeType":"912","messageId":"913","endLine":13,"endColumn":20},{"ruleId":"910","severity":1,"message":"954","line":18,"column":8,"nodeType":"912","messageId":"913","endLine":18,"endColumn":25},{"ruleId":"910","severity":1,"message":"955","line":156,"column":9,"nodeType":"912","messageId":"913","endLine":156,"endColumn":18},{"ruleId":"910","severity":1,"message":"952","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":26},{"ruleId":"910","severity":1,"message":"960","line":9,"column":8,"nodeType":"912","messageId":"913","endLine":9,"endColumn":14},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"948","line":5,"column":8,"nodeType":"912","messageId":"913","endLine":5,"endColumn":14},{"ruleId":"910","severity":1,"message":"965","line":7,"column":10,"nodeType":"912","messageId":"913","endLine":7,"endColumn":33},{"ruleId":"910","severity":1,"message":"952","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":20},{"ruleId":"910","severity":1,"message":"966","line":52,"column":18,"nodeType":"912","messageId":"913","endLine":52,"endColumn":26},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"948","line":5,"column":8,"nodeType":"912","messageId":"913","endLine":5,"endColumn":14},{"ruleId":"910","severity":1,"message":"965","line":7,"column":10,"nodeType":"912","messageId":"913","endLine":7,"endColumn":33},{"ruleId":"910","severity":1,"message":"952","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":20},{"ruleId":"910","severity":1,"message":"966","line":54,"column":11,"nodeType":"912","messageId":"913","endLine":54,"endColumn":19},{"ruleId":"910","severity":1,"message":"953","line":7,"column":8,"nodeType":"912","messageId":"913","endLine":7,"endColumn":20},{"ruleId":"910","severity":1,"message":"967","line":8,"column":10,"nodeType":"912","messageId":"913","endLine":8,"endColumn":16},{"ruleId":"910","severity":1,"message":"968","line":8,"column":25,"nodeType":"912","messageId":"913","endLine":8,"endColumn":36},{"ruleId":"910","severity":1,"message":"969","line":8,"column":38,"nodeType":"912","messageId":"913","endLine":8,"endColumn":47},{"ruleId":"910","severity":1,"message":"970","line":8,"column":49,"nodeType":"912","messageId":"913","endLine":8,"endColumn":60},{"ruleId":"910","severity":1,"message":"971","line":14,"column":3,"nodeType":"912","messageId":"913","endLine":14,"endColumn":22},{"ruleId":"917","severity":1,"message":"918","line":68,"column":23,"nodeType":"919","messageId":"920","endLine":68,"endColumn":25},{"ruleId":"910","severity":1,"message":"955","line":218,"column":9,"nodeType":"912","messageId":"913","endLine":218,"endColumn":18},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"948","line":4,"column":8,"nodeType":"912","messageId":"913","endLine":4,"endColumn":14},{"ruleId":"910","severity":1,"message":"965","line":7,"column":3,"nodeType":"912","messageId":"913","endLine":7,"endColumn":26},{"ruleId":"910","severity":1,"message":"921","line":11,"column":10,"nodeType":"912","messageId":"913","endLine":11,"endColumn":19},{"ruleId":"910","severity":1,"message":"952","line":12,"column":10,"nodeType":"912","messageId":"913","endLine":12,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":13,"column":8,"nodeType":"912","messageId":"913","endLine":13,"endColumn":20},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"948","line":4,"column":8,"nodeType":"912","messageId":"913","endLine":4,"endColumn":14},{"ruleId":"910","severity":1,"message":"965","line":7,"column":3,"nodeType":"912","messageId":"913","endLine":7,"endColumn":26},{"ruleId":"910","severity":1,"message":"921","line":11,"column":10,"nodeType":"912","messageId":"913","endLine":11,"endColumn":19},{"ruleId":"910","severity":1,"message":"952","line":12,"column":10,"nodeType":"912","messageId":"913","endLine":12,"endColumn":26},{"ruleId":"910","severity":1,"message":"953","line":13,"column":8,"nodeType":"912","messageId":"913","endLine":13,"endColumn":20},{"ruleId":"961","severity":1,"message":"962","line":11,"column":11,"nodeType":"935","messageId":"963","endLine":11,"endColumn":63,"fix":"988"},{"ruleId":"910","severity":1,"message":"972","line":2,"column":8,"nodeType":"912","messageId":"913","endLine":2,"endColumn":9},{"ruleId":"910","severity":1,"message":"973","line":13,"column":11,"nodeType":"912","messageId":"913","endLine":13,"endColumn":15},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"968","line":5,"column":25,"nodeType":"912","messageId":"913","endLine":5,"endColumn":36},{"ruleId":"910","severity":1,"message":"974","line":6,"column":10,"nodeType":"912","messageId":"913","endLine":6,"endColumn":15},{"ruleId":"910","severity":1,"message":"921","line":7,"column":10,"nodeType":"912","messageId":"913","endLine":7,"endColumn":19},{"ruleId":"910","severity":1,"message":"975","line":54,"column":42,"nodeType":"912","messageId":"913","endLine":54,"endColumn":51},{"ruleId":"910","severity":1,"message":"976","line":54,"column":53,"nodeType":"912","messageId":"913","endLine":54,"endColumn":63},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"968","line":5,"column":25,"nodeType":"912","messageId":"913","endLine":5,"endColumn":36},{"ruleId":"910","severity":1,"message":"974","line":6,"column":10,"nodeType":"912","messageId":"913","endLine":6,"endColumn":15},{"ruleId":"910","severity":1,"message":"977","line":7,"column":8,"nodeType":"912","messageId":"913","endLine":7,"endColumn":21},{"ruleId":"910","severity":1,"message":"921","line":8,"column":10,"nodeType":"912","messageId":"913","endLine":8,"endColumn":19},{"ruleId":"910","severity":1,"message":"978","line":8,"column":21,"nodeType":"912","messageId":"913","endLine":8,"endColumn":32},{"ruleId":"910","severity":1,"message":"979","line":9,"column":8,"nodeType":"912","messageId":"913","endLine":9,"endColumn":18},{"ruleId":"910","severity":1,"message":"922","line":55,"column":42,"nodeType":"912","messageId":"913","endLine":55,"endColumn":50},{"ruleId":"989","severity":1,"message":"990","line":99,"column":56,"nodeType":"991","messageId":"992","endLine":99,"endColumn":57,"fix":"993"},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"968","line":5,"column":25,"nodeType":"912","messageId":"913","endLine":5,"endColumn":36},{"ruleId":"910","severity":1,"message":"977","line":7,"column":8,"nodeType":"912","messageId":"913","endLine":7,"endColumn":21},{"ruleId":"910","severity":1,"message":"921","line":8,"column":10,"nodeType":"912","messageId":"913","endLine":8,"endColumn":19},{"ruleId":"910","severity":1,"message":"978","line":8,"column":21,"nodeType":"912","messageId":"913","endLine":8,"endColumn":32},{"ruleId":"910","severity":1,"message":"979","line":9,"column":8,"nodeType":"912","messageId":"913","endLine":9,"endColumn":18},{"ruleId":"910","severity":1,"message":"983","line":11,"column":10,"nodeType":"912","messageId":"913","endLine":11,"endColumn":30},{"ruleId":"910","severity":1,"message":"922","line":100,"column":42,"nodeType":"912","messageId":"913","endLine":100,"endColumn":50},{"ruleId":"910","severity":1,"message":"985","line":100,"column":63,"nodeType":"912","messageId":"913","endLine":100,"endColumn":70},{"ruleId":"989","severity":1,"message":"990","line":145,"column":56,"nodeType":"991","messageId":"992","endLine":145,"endColumn":57,"fix":"994"},{"ruleId":"910","severity":1,"message":"936","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":14},{"ruleId":"910","severity":1,"message":"968","line":5,"column":25,"nodeType":"912","messageId":"913","endLine":5,"endColumn":36},{"ruleId":"910","severity":1,"message":"974","line":6,"column":10,"nodeType":"912","messageId":"913","endLine":6,"endColumn":15},{"ruleId":"910","severity":1,"message":"921","line":7,"column":10,"nodeType":"912","messageId":"913","endLine":7,"endColumn":19},{"ruleId":"910","severity":1,"message":"975","line":54,"column":42,"nodeType":"912","messageId":"913","endLine":54,"endColumn":51},{"ruleId":"910","severity":1,"message":"976","line":54,"column":53,"nodeType":"912","messageId":"913","endLine":54,"endColumn":63},{"ruleId":"910","severity":1,"message":"952","line":2,"column":10,"nodeType":"912","messageId":"913","endLine":2,"endColumn":26},{"ruleId":"910","severity":1,"message":"980","line":8,"column":8,"nodeType":"912","messageId":"913","endLine":8,"endColumn":16},{"ruleId":"910","severity":1,"message":"981","line":16,"column":7,"nodeType":"912","messageId":"913","endLine":16,"endColumn":15},{"ruleId":"910","severity":1,"message":"982","line":19,"column":10,"nodeType":"912","messageId":"913","endLine":19,"endColumn":28},"no-native-reassign",["995"],"no-negated-in-lhs",["996"],"no-unused-vars","'System' is defined but never used.","Identifier","unusedVar","'locationHelper' is assigned a value but never used.","'Redirect' is defined but never used.","'HomeFooter' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'LANGUAGES' is defined but never used.","'language' is assigned a value but never used.","'BiUser' is defined but never used.","'BiBookContent' is defined but never used.","'BiBrain' is defined but never used.","'getAllUsers' is defined but never used.","'getAllListPatient' is defined but never used.","'FaBeer' is defined but never used.","'FaUserCircle' is defined but never used.","'FcDepartment' is defined but never used.","'flatMap' is defined but never used.","'showDashBoard' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Select' is defined but never used.","'localization' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'moment' is defined but never used.","'resProvince' is assigned a value but never used.","'listSpecialty' is assigned a value but never used.","'isGender' is assigned a value but never used.","'FormattedMessage' is defined but never used.","'NumberFormat' is defined but never used.","'CreatePrecription' is defined but never used.","'yesterday' is assigned a value but never used.","'CRUD_ACTIONS' is defined but never used.","'dateFormat' is defined but never used.","'FormattedDate' is defined but never used.","'isSelected' is assigned a value but never used.","'Footer' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"997","text":"998"},"'getExtraInforDoctorById' is defined but never used.","'dataHref' is assigned a value but never used.","'Button' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'getDetailInfoDoctor' is defined but never used.","'_' is defined but never used.","'data' is assigned a value but never used.","'toast' is defined but never used.","'dataModel' is assigned a value but never used.","'sendRemedy' is assigned a value but never used.","'ManagePatient' is defined but never used.","'CommonUtils' is defined but never used.","'DatePicker' is defined but never used.","'MdEditor' is defined but never used.","'mdParser' is assigned a value but never used.","'handleEditorChange' is defined but never used.","'postPatientAppoiment' is defined but never used.","'PrescriptionModel' is defined but never used.","'Idtesst' is assigned a value but never used.",["995"],["996"],{"range":"999","text":"998"},"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"1000","text":"1001"},{"range":"1002","text":"1001"},"no-global-assign","no-unsafe-negation",[333,333]," rel=\"noreferrer\"",[333,333],[3293,3330],"\r\n                                  .",[4624,4661]]