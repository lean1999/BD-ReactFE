{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\reactFE\\\\src\\\\containers\\\\HomePage\\\\Section\\\\OutStandingDoctor.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport Slider from \"react-slick\";\nimport * as actions from \"../../../store/actions\";\nimport { LANGUAGES } from \"../../../utils\";\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OutStandingDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleViewDetailDoctor = doctor => {\n      if (this.props.history) {\n        this.props.history.push(`/detail-doctor/${doctor.id}`);\n      }\n    };\n\n    this.state = {\n      arrDoctors: []\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\n      this.setState({\n        arrDoctors: this.props.topDoctorsRedux\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.props.loadTopDoctors();\n  }\n\n  render() {\n    let arrDoctors = this.state.arrDoctors;\n    let {\n      language\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-share section-outstanding-doctor\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title-section\",\n            children: [\" B\\xE1c S\\u0129 N\\u1ED5i B\\u1EADt Tu\\u1EA7n Qua\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"border-load-doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-section\",\n            children: \"Xem th\\xEAm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          href: \"#\",\n          className: \"section-content\",\n          children: /*#__PURE__*/_jsxDEV(Slider, { ...this.props.settings,\n            children: arrDoctors && arrDoctors.length >= 0 && arrDoctors.map((item, index) => {\n              let imageBase64 = \"\";\n\n              if (item.image) {\n                imageBase64 = new Buffer(item.image, \"base64\").toString(\"binary\");\n              }\n\n              let nameVi = `${item.positionData.valueVi},  ${item.firstName} ${item.lastName} `;\n              let nameEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-customize border\",\n                onClick: () => this.handleViewDetailDoctor(item),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"img-bg section-outstanding-doctor \",\n                    style: {\n                      backgroundImage: `url(\"${imageBase64}\")`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"position text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: language === LANGUAGES.VI ? nameVi : nameEn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 26\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Giao su , Tien sy \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    isLoggedIn: state.user.isLoggedIn,\n    topDoctorsRedux: state.admin.topDoctors\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadTopDoctors: () => dispatch(actions.fetchTopDoctor())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor));","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/reactFE/src/containers/HomePage/Section/OutStandingDoctor.js"],"names":["React","Component","connect","FormattedMessage","Slider","actions","LANGUAGES","withRouter","OutStandingDoctor","constructor","props","handleViewDetailDoctor","doctor","history","push","id","state","arrDoctors","componentDidUpdate","prevProps","prevState","snapshot","topDoctorsRedux","setState","componentDidMount","loadTopDoctors","render","language","settings","length","map","item","index","imageBase64","image","Buffer","toString","nameVi","positionData","valueVi","firstName","lastName","nameEn","valueEn","backgroundImage","VI","mapStateToProps","app","isLoggedIn","user","admin","topDoctors","mapDispatchToProps","dispatch","fetchTopDoctor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { withRouter } from \"react-router\";\r\nclass OutStandingDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrDoctors: [],\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\r\n      this.setState({\r\n        arrDoctors: this.props.topDoctorsRedux,\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.loadTopDoctors();\r\n  }\r\n  handleViewDetailDoctor = (doctor) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-doctor/${doctor.id}`);\r\n    }\r\n  };\r\n  render() {\r\n    let arrDoctors = this.state.arrDoctors;\r\n    let { language } = this.props;\r\n    return (\r\n      <div className=\"section-share section-outstanding-doctor\">\r\n        <div className=\"section-container\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\"> Bác Sĩ Nổi Bật Tuần Qua\r\n              <span className=\"border-load-doctor\"></span>\r\n            </span>\r\n            <button type=\"button\" className=\"btn-section\">\r\n              Xem thêm\r\n            </button>\r\n          </div>\r\n          <div href=\"#\" className=\"section-content\">\r\n            <Slider {...this.props.settings}>\r\n              {arrDoctors &&\r\n                arrDoctors.length >= 0 &&\r\n                arrDoctors.map((item, index) => {\r\n                  let imageBase64 = \"\";\r\n                  if (item.image) {\r\n                    imageBase64 = new Buffer(item.image, \"base64\").toString(\r\n                      \"binary\"\r\n                    );\r\n                  }\r\n\r\n                  let nameVi = `${item.positionData.valueVi},  ${item.firstName} ${item.lastName} `;\r\n                  let nameEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`;\r\n\r\n                  return (\r\n                    <div\r\n                      className=\"section-customize border\"\r\n                      key={index}\r\n                      onClick={() => this.handleViewDetailDoctor(item)}\r\n                    >\r\n                      <div>\r\n                        <div\r\n                          className=\"img-bg section-outstanding-doctor \"\r\n                          style={{\r\n                            backgroundImage: `url(\"${imageBase64}\")`,\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"position text-center\">\r\n                        {<h5>{language === LANGUAGES.VI ? nameVi : nameEn}</h5>}\r\n                        <span>Giao su , Tien sy </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    topDoctorsRedux: state.admin.topDoctors,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadTopDoctors: () => dispatch(actions.fetchTopDoctor()),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}