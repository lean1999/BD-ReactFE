{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\reactFE\\\\src\\\\containers\\\\Header\\\\Header.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport Navigator from \"../../components/Navigator\";\nimport { adminMenu, doctorMenu } from \"./menuApp\";\nimport \"./Header.scss\";\nimport { LANGUAGES, USER_ROLE } from \"../../utils\";\nimport { FormattedMessage } from \"react-intl\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeLanguge = language => {\n      this.props.changeLanguageAppRedux(language);\n    };\n\n    this.state = {\n      menuApp: []\n    };\n  }\n\n  componentDidMount() {\n    let {\n      userInfo\n    } = this.props;\n    let menu = [];\n\n    if (userInfo && !_.isEmpty(userInfo)) {\n      let role = userInfo.roleId;\n\n      if (role === USER_ROLE.ADMIN) {\n        menu = adminMenu;\n      }\n\n      if (role === USER_ROLE.DOCTOR) {\n        menu = doctorMenu;\n      }\n    }\n\n    this.setState({\n      menuApp: menu\n    });\n  }\n\n  render() {\n    const {\n      processLogout,\n      language,\n      userInfo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-tabs-container\",\n        children: /*#__PURE__*/_jsxDEV(Navigator, {\n          menus: this.state.menuApp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"languages\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"welcome\",\n          children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"home-header.welcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), userInfo && userInfo.firstName ? userInfo.firstName : \"\", \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: language === LANGUAGES.VI ? \"language-vi active\" : \"language-vi\",\n          onClick: () => this.handleChangeLanguge(LANGUAGES.VI),\n          children: \"VI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: language === LANGUAGES.EN ? \"language-en active\" : \"language-en\",\n          onClick: () => this.handleChangeLanguge(LANGUAGES.EN),\n          children: \"EN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-logout\",\n          onClick: processLogout,\n          title: \"Log out\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-sign-out-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    language: state.app.language,\n    userInfo: state.user.userInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    processLogout: () => dispatch(actions.processLogout()),\n    changeLanguageAppRedux: language => dispatch(actions.changeLanguageApp(language))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/reactFE/src/containers/Header/Header.js"],"names":["React","Component","connect","actions","Navigator","adminMenu","doctorMenu","LANGUAGES","USER_ROLE","FormattedMessage","_","Header","constructor","props","handleChangeLanguge","language","changeLanguageAppRedux","state","menuApp","componentDidMount","userInfo","menu","isEmpty","role","roleId","ADMIN","DOCTOR","setState","render","processLogout","firstName","VI","EN","mapStateToProps","isLoggedIn","user","app","mapDispatchToProps","dispatch","changeLanguageApp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from \"../../components/Navigator\";\r\nimport { adminMenu, doctorMenu } from \"./menuApp\";\r\nimport \"./Header.scss\";\r\nimport { LANGUAGES, USER_ROLE } from \"../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport _ from \"lodash\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menuApp: [],\r\n    };\r\n  }\r\n  handleChangeLanguge = (language) => {\r\n    this.props.changeLanguageAppRedux(language);\r\n  };\r\n  componentDidMount() {\r\n    let { userInfo } = this.props;\r\n    let menu = [];\r\n    if (userInfo && !_.isEmpty(userInfo)) {\r\n      let role = userInfo.roleId;\r\n      if (role === USER_ROLE.ADMIN) {\r\n        menu = adminMenu;\r\n      }\r\n      if (role === USER_ROLE.DOCTOR) {\r\n        menu = doctorMenu;\r\n      }\r\n    }\r\n    this.setState({\r\n      menuApp: menu,\r\n    });\r\n  }\r\n  render() {\r\n    const { processLogout, language, userInfo } = this.props;\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        {/* thanh navigator */}\r\n        <div className=\"header-tabs-container\">\r\n          <Navigator menus={this.state.menuApp} />\r\n        </div>\r\n\r\n        <div className=\"languages\">\r\n          <span className=\"welcome\">\r\n            <FormattedMessage id=\"home-header.welcome\" />\r\n            {userInfo && userInfo.firstName ? userInfo.firstName : \"\"}!\r\n          </span>\r\n          <span\r\n            className={\r\n              language === LANGUAGES.VI ? \"language-vi active\" : \"language-vi\"\r\n            }\r\n            onClick={() => this.handleChangeLanguge(LANGUAGES.VI)}\r\n          >\r\n            VI\r\n          </span>\r\n          <span\r\n            className={\r\n              language === LANGUAGES.EN ? \"language-en active\" : \"language-en\"\r\n            }\r\n            onClick={() => this.handleChangeLanguge(LANGUAGES.EN)}\r\n          >\r\n            EN\r\n          </span>\r\n          {/* n√∫t logout */}\r\n          <div\r\n            className=\"btn btn-logout\"\r\n            onClick={processLogout}\r\n            title=\"Log out\"\r\n          >\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    processLogout: () => dispatch(actions.processLogout()),\r\n    changeLanguageAppRedux: (language) =>\r\n      dispatch(actions.changeLanguageApp(language)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n"]},"metadata":{},"sourceType":"module"}