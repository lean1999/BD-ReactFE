{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\ReactFE\\\\src\\\\containers\\\\System\\\\Doctor\\\\CreatePrecription.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Pdf from \"react-to-pdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ref = /*#__PURE__*/React.createRef();\n\nclass CreatePrecription extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {}\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Pdf, {\n          targetRef: ref,\n          filename: \"code-example.pdf\",\n          children: ({\n            toPdf\n          }) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toPdf,\n            children: \"Generate Pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: ref,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Hello CodeSandbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Start editing to see some magic happen!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePrecription);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/ReactFE/src/containers/System/Doctor/CreatePrecription.js"],"names":["React","Component","connect","Pdf","ref","createRef","CreatePrecription","constructor","props","state","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","language","render","toPdf","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AACA,MAAMC,GAAG,gBAAGJ,KAAK,CAACK,SAAN,EAAZ;;AACA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AACxCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEsB,QAAjBC,iBAAiB,GAAG,CAAE;;AACJ,QAAlBC,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AACvD,QAAI,KAAKN,KAAL,CAAWO,QAAX,KAAwBH,SAAS,CAACG,QAAtC,EAAgD,CAC/C;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAEZ,GAAhB;AAAqB,UAAA,QAAQ,EAAC,kBAA9B;AAAA,oBACG,CAAC;AAAEa,YAAAA;AAAF,WAAD,kBAAe;AAAQ,YAAA,OAAO,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,GAAG,EAAEb,GAAV;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAaD;;AA1BuC;;AA6B1C,MAAMc,eAAe,GAAIT,KAAD,IAAW;AACjC,SAAO;AACLM,IAAAA,QAAQ,EAAEN,KAAK,CAACU,GAAN,CAAUJ;AADf,GAAP;AAGD,CAJD;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AACD,CAFD;;AAIA,eAAenB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,iBAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Pdf from \"react-to-pdf\";\r\nconst ref = React.createRef();\r\nclass CreatePrecription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  async componentDidMount() {}\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <Pdf targetRef={ref} filename=\"code-example.pdf\">\r\n            {({ toPdf }) => <button onClick={toPdf}>Generate Pdf</button>}\r\n          </Pdf>\r\n          <div ref={ref}>\r\n            <h1>Hello CodeSandbox</h1>\r\n            <h2>Start editing to see some magic happen!</h2>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePrecription);\r\n"]},"metadata":{},"sourceType":"module"}