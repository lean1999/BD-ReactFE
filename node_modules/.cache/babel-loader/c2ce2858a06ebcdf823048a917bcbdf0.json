{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\reactFE\\\\src\\\\containers\\\\Patient\\\\Doctor\\\\ProfileDoctor.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\nimport \"./ProfileDoctor.scss\";\nimport moment from \"moment\";\nimport BookingModal from \"./Modal/BookingModal\";\nimport { getProfileDoctorById } from \"../../../services/userService\";\nimport { LANGUAGES } from \"../../../utils\";\nimport { FormattedMessage } from \"react-intl\";\nimport NumberFormat from \"react-number-format\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProfileDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getInforDoctor = async id => {\n      let result = {};\n\n      if (id) {\n        let res = await getProfileDoctorById(id);\n\n        if (res && res.errCode === 0) {\n          result = res.data;\n        }\n      }\n\n      return result;\n    };\n\n    this.renderTimeBooking = (dataTime, language) => {\n      console.log(\"check 123123d d\", dataTime);\n\n      if (dataTime && !_.isEmpty(dataTime)) {\n        let date = language === LANGUAGES.VI ? moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\") : moment.unix(+dataTime.date / 1000).locale(\"en\").format(\"ddd - MM/DD/YYYY\");\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [language === LANGUAGES.VI && dataTime && dataTime.timeTypeData.valueVi + \" \" + date, language === LANGUAGES.EN && dataTime && dataTime.timeTypeData.valueEn + \" \" + date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"patient.booking-modal.price-bookign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true);\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    };\n\n    this.state = {\n      dataProfile: {}\n    };\n  }\n\n  async componentDidMount() {\n    let data = await this.getInforDoctor(this.props.doctorId);\n    this.setState({\n      dataProfile: data\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n\n    if (this.props.doctorId !== prevProps.doctorId) {// this.getInforDoctor(this.props.doctorId)\n    }\n  }\n\n  render() {\n    console.log(\"check state file profile DOctor\", this.state);\n    let {\n      dataProfile\n    } = this.state;\n    let {\n      language,\n      isShowDescriptionDoctor,\n      dataTime,\n      isShowPrice,\n      isShowLinkDetail,\n      doctorId\n    } = this.props;\n    let nameVi = \"\",\n        nameEn = \"\";\n\n    if (dataProfile && dataProfile.positionData) {\n      nameVi = `${dataProfile.positionData.valueVi},  ${dataProfile.lastName} ${dataProfile.firstName} `;\n      nameEn = `${dataProfile.positionData.valueEn}, ${dataProfile.firstName} ${dataProfile.lastName}`;\n    }\n\n    console.log(\"check datatime\", dataTime);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BookingModal, {\n        dataProfileprop: dataProfile,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-doctor-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"intro-doctor\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-left\",\n            style: {\n              backgroundImage: `url(\"${dataProfile && dataProfile.image ? dataProfile.image : \"\"}\")`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content-up\",\n              children: language === LANGUAGES.VI ? nameVi : nameEn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content-down\",\n              children: isShowDescriptionDoctor === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: dataProfile && dataProfile.Markdown && dataProfile.Markdown.description && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: dataProfile.Markdown.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: this.renderTimeBooking(dataTime, language)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), isShowLinkDetail === true && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-detail-doctor\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/detail-doctor/${doctorId}`,\n            className: \"view-detail-link\",\n            children: \"Xem Th\\xEAm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), isShowPrice === true && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"patient.booking-modal.price-book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), dataProfile && dataProfile.Doctor_Info && language === LANGUAGES.VI && /*#__PURE__*/_jsxDEV(NumberFormat, {\n            value: dataProfile.Doctor_Info.priceTypeData.valueVi,\n            displayType: \"text\",\n            thousandSeparator: true,\n            suffix: \"VND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }, this), dataProfile && dataProfile.Doctor_Info && language === LANGUAGES.EN && /*#__PURE__*/_jsxDEV(NumberFormat, {\n            value: dataProfile.Doctor_Info.priceTypeData.valueEn,\n            displayType: \"text\",\n            thousandSeparator: true,\n            suffix: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDoctor);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/reactFE/src/containers/Patient/Doctor/ProfileDoctor.js"],"names":["React","Component","connect","Select","moment","BookingModal","getProfileDoctorById","LANGUAGES","FormattedMessage","NumberFormat","_","Link","ProfileDoctor","constructor","props","getInforDoctor","id","result","res","errCode","data","renderTimeBooking","dataTime","language","console","log","isEmpty","date","VI","unix","format","locale","timeTypeData","valueVi","EN","valueEn","state","dataProfile","componentDidMount","doctorId","setState","componentDidUpdate","prevProps","prevState","snapshot","render","isShowDescriptionDoctor","isShowPrice","isShowLinkDetail","nameVi","nameEn","positionData","lastName","firstName","display","backgroundImage","image","Markdown","description","Doctor_Info","priceTypeData","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./ProfileDoctor.scss\";\r\nimport moment from \"moment\";\r\nimport BookingModal from \"./Modal/BookingModal\";\r\nimport { getProfileDoctorById } from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nclass ProfileDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataProfile: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let data = await this.getInforDoctor(this.props.doctorId);\r\n    this.setState({\r\n      dataProfile: data,\r\n    });\r\n  }\r\n  getInforDoctor = async (id) => {\r\n    let result = {};\r\n    if (id) {\r\n      let res = await getProfileDoctorById(id);\r\n      if (res && res.errCode === 0) {\r\n        result = res.data;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n    if (this.props.doctorId !== prevProps.doctorId) {\r\n      // this.getInforDoctor(this.props.doctorId)\r\n    }\r\n  }\r\n\r\n  renderTimeBooking = (dataTime, language) => {\r\n    console.log(\"check 123123d d\", dataTime);\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let date =\r\n        language === LANGUAGES.VI\r\n          ? moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\")\r\n          : moment\r\n              .unix(+dataTime.date / 1000)\r\n              .locale(\"en\")\r\n              .format(\"ddd - MM/DD/YYYY\");\r\n      return (\r\n        <>\r\n          <div>\r\n            {language === LANGUAGES.VI &&\r\n              dataTime &&\r\n              dataTime.timeTypeData.valueVi + \" \" + date}\r\n            {language === LANGUAGES.EN &&\r\n              dataTime &&\r\n              dataTime.timeTypeData.valueEn + \" \" + date}\r\n          </div>\r\n          <div>\r\n            <FormattedMessage id=\"patient.booking-modal.price-bookign\" />\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n    return <></>;\r\n  };\r\n  render() {\r\n    console.log(\"check state file profile DOctor\", this.state);\r\n    let { dataProfile } = this.state;\r\n    let {\r\n      language,\r\n      isShowDescriptionDoctor,\r\n      dataTime,\r\n      isShowPrice,\r\n      isShowLinkDetail,\r\n      doctorId,\r\n    } = this.props;\r\n    let nameVi = \"\",\r\n      nameEn = \"\";\r\n    if (dataProfile && dataProfile.positionData) {\r\n      nameVi = `${dataProfile.positionData.valueVi},  ${dataProfile.lastName} ${dataProfile.firstName} `;\r\n      nameEn = `${dataProfile.positionData.valueEn}, ${dataProfile.firstName} ${dataProfile.lastName}`;\r\n    }\r\n    console.log(\"check datatime\", dataTime);\r\n    return (\r\n      <>\r\n      <BookingModal  dataProfileprop={dataProfile} style = {{ display:'none'}} />\r\n        <div className=\"profile-doctor-container\">\r\n          <div className=\"intro-doctor\">\r\n            <div\r\n              className=\"content-left\"\r\n              style={{\r\n                backgroundImage: `url(\"${\r\n                  dataProfile && dataProfile.image ? dataProfile.image : \"\"\r\n                }\")`,\r\n              }}\r\n            ></div>\r\n            <div className=\"content-right\">\r\n              <div className=\"content-up\">\r\n                {language === LANGUAGES.VI ? nameVi : nameEn}\r\n              </div>\r\n              <div className=\"content-down\">\r\n                {isShowDescriptionDoctor === true ? (\r\n                  <>\r\n                    {dataProfile &&\r\n                      dataProfile.Markdown &&\r\n                      dataProfile.Markdown.description && (\r\n                        <span>{dataProfile.Markdown.description}</span>\r\n                      )}\r\n                  </>\r\n                ) : (\r\n                  <>{this.renderTimeBooking(dataTime, language)}</>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {isShowLinkDetail === true && (\r\n            <div className=\"view-detail-doctor\">\r\n              <Link\r\n                to={`/detail-doctor/${doctorId}`}\r\n                className=\"view-detail-link\"\r\n              >\r\n                Xem Thêm\r\n              </Link>\r\n            </div>\r\n          )}\r\n          {isShowPrice === true && (\r\n            <div className=\"price\">\r\n              {\" \"}\r\n              <FormattedMessage id=\"patient.booking-modal.price-book\" />\r\n              {dataProfile &&\r\n                dataProfile.Doctor_Info &&\r\n                language === LANGUAGES.VI && (\r\n                  <NumberFormat\r\n                    value={dataProfile.Doctor_Info.priceTypeData.valueVi}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    suffix={\"VND\"}\r\n                  />\r\n                )}\r\n              {dataProfile &&\r\n                dataProfile.Doctor_Info &&\r\n                language === LANGUAGES.EN && (\r\n                  <NumberFormat\r\n                    value={dataProfile.Doctor_Info.priceTypeData.valueEn}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    suffix={\"$\"}\r\n                  />\r\n                )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDoctor);\r\n"]},"metadata":{},"sourceType":"module"}