{"ast":null,"code":"import axios from \"axios\";\nimport _ from \"lodash\";\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  basePaymemt: 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html?vnp_Amount=35000000&vnp_Command=pay&vnp_CreateDate=20230102001834&vnp_CurrCode=VND&vnp_IpAddr=127.0.0.1&vnp_Locale=vn&vnp_OrderInfo=test+create+payment+350.000+VND&vnp_OrderType=other&vnp_ReturnUrl=http://localhost:3000/detail-doctor/161&vnp_TmnCode=U71WYR2Q&vnp_TxnRef=001834&vnp_Version=2.1.0&vnp_SecureHash=3fa41c583690dc85ee04d47cf6c25e739a498299fbded11305ab3992d6b50954701b60f967dd8ed91bc9a01a7ece419447b7d4d887f86c64d6a3dda0c28fdda8/api/get-schedule-doctor-by-date?doctorId=160&date=1672678800000' // withCredentials: true,\n\n});\ninstance.interceptors.response.use(response => {\n  // Thrown error for request with OK status code\n  const {\n    data\n  } = response;\n  return response.data;\n});\nexport default instance;","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/ReactFE/src/axios.js"],"names":["axios","_","instance","create","baseURL","process","env","REACT_APP_BACKEND_URL","basePaymemt","interceptors","response","use","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADO;AAE5BC,EAAAA,WAAW,EAAE,2iBAFe,CAI5B;;AAJ4B,CAAb,CAAjB;AAOAN,QAAQ,CAACO,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CAAoCD,QAAD,IAAc;AAC/C;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWF,QAAjB;AACA,SAAOA,QAAQ,CAACE,IAAhB;AACD,CAJD;AAKA,eAAeV,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport _ from \"lodash\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  basePaymemt: 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html?vnp_Amount=35000000&vnp_Command=pay&vnp_CreateDate=20230102001834&vnp_CurrCode=VND&vnp_IpAddr=127.0.0.1&vnp_Locale=vn&vnp_OrderInfo=test+create+payment+350.000+VND&vnp_OrderType=other&vnp_ReturnUrl=http://localhost:3000/detail-doctor/161&vnp_TmnCode=U71WYR2Q&vnp_TxnRef=001834&vnp_Version=2.1.0&vnp_SecureHash=3fa41c583690dc85ee04d47cf6c25e739a498299fbded11305ab3992d6b50954701b60f967dd8ed91bc9a01a7ece419447b7d4d887f86c64d6a3dda0c28fdda8/api/get-schedule-doctor-by-date?doctorId=160&date=1672678800000'\r\n\r\n  // withCredentials: true,\r\n});\r\n\r\ninstance.interceptors.response.use((response) => {\r\n  // Thrown error for request with OK status code\r\n  const { data } = response;\r\n  return response.data;\r\n});\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}