{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\reactFE\\\\src\\\\containers\\\\HomePage\\\\Section\\\\Specialty.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport Slider from \"react-slick\";\nimport { getAllSpecialty } from \"../../../services/userService\";\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Specialty extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleViewDetailSpecialty = item => {\n      if (this.props.history) {\n        this.props.history.push(`/detail-specialty/${item.id}`);\n      }\n    };\n\n    this.state = {\n      dataSpecialty: []\n    };\n  }\n\n  async componentDidMount() {\n    let res = await getAllSpecialty();\n    console.log(res);\n\n    if (res && res.errCode === 0) {\n      this.setState({\n        dataSpecialty: res.data ? res.data : []\n      });\n    }\n  }\n\n  render() {\n    let {\n      dataSpecialty\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-share section-specialty\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title-section\",\n              children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"home-pages.specialty-popular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"border-load\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            href: \"#\",\n            className: \"section-content\",\n            children: /*#__PURE__*/_jsxDEV(Slider, { ...this.props.settings,\n              children: dataSpecialty && dataSpecialty.length > 0 && dataSpecialty.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"section-customize specialty-child\",\n                  onClick: () => this.handleViewDetailSpecialty(item),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"img-bg section-specialty\",\n                    style: {\n                      backgroundImage: `url(\"${item.image}\")`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"dt-name\",\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Specialty));","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/reactFE/src/containers/HomePage/Section/Specialty.js"],"names":["React","Component","connect","FormattedMessage","Slider","getAllSpecialty","withRouter","Specialty","constructor","props","handleViewDetailSpecialty","item","history","push","id","state","dataSpecialty","componentDidMount","res","console","log","errCode","setState","data","render","settings","length","map","index","backgroundImage","image","name","mapStateToProps","isLoggedIn","user","language","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\nimport { getAllSpecialty } from \"../../../services/userService\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Specialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataSpecialty: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllSpecialty();\r\n    console.log(res);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        dataSpecialty: res.data ? res.data : [],\r\n      });\r\n    }\r\n  }\r\n\r\n  handleViewDetailSpecialty = (item) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-specialty/${item.id}`);\r\n    }\r\n  };\r\n  render() {\r\n    let { dataSpecialty } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"section-share section-specialty\">\r\n          <div className=\"section-container\">\r\n            <div className=\"section-header\">\r\n              <span className=\"title-section\">\r\n                <FormattedMessage id=\"home-pages.specialty-popular\" />\r\n                <span className=\"border-load\"></span>\r\n              </span>\r\n              {/* <button type=\"button\" className=\"btn-section\">\r\n                {\" \"}\r\n                <FormattedMessage id=\"home-pages.more-info\" />\r\n              </button> */}\r\n            </div>\r\n            <div href=\"#\" className=\"section-content\">\r\n              <Slider {...this.props.settings}>\r\n                {dataSpecialty &&\r\n                  dataSpecialty.length > 0 &&\r\n                  dataSpecialty.map((item, index) => {\r\n                    return (\r\n                      <div\r\n                        className=\"section-customize specialty-child\"\r\n                        key={index}\r\n                        onClick={() => this.handleViewDetailSpecialty(item)}\r\n                      >\r\n                        <div\r\n                          className=\"img-bg section-specialty\"\r\n                          style={{\r\n                            backgroundImage: `url(\"${item.image}\")`,\r\n                          }}\r\n                        />\r\n                        <span className=\"dt-name\">{item.name}</span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </Slider>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(Specialty)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}