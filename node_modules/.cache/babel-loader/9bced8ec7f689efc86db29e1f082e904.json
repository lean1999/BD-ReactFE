{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\reactFE\\\\src\\\\containers\\\\System\\\\Doctor\\\\RemedyModel.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\nimport \"./RemedyModel.scss\";\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { toast } from \"react-toastify\";\nimport { LANGUAGES, CommonUtils } from \"../../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass RemedyModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChangeEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handleOnChangeImg = async event => {\n      let data = event.target.files;\n      let file = data[0];\n      console.log(file);\n\n      if (file) {\n        let base64 = await CommonUtils.convertBase64(file);\n        this.setState({\n          imgBase64: base64\n        });\n      }\n    };\n\n    this.handleSendRemedy = () => {\n      this.props.sendRemedy(this.state);\n    };\n\n    this.state = {\n      email: \"\",\n      imgBase64: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.dataModel) {\n      this.setState({\n        email: this.props.dataModel.email\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.dataModel !== this.props.dataModel) {\n      this.setState({\n        email: this.props.dataModel.email\n      });\n    }\n  }\n\n  render() {\n    let {\n      isOpenModal,\n      closeRemedyClose,\n      dataModel,\n      sendRemedy\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpenModal // toggle={}\n        ,\n        className: \"booking-modal-container\",\n        size: \"md\",\n        centered: true // backdrop={true}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"modal-title\",\n            children: \" G\\u1EEDi h\\xF3a \\u0111\\u01A1n x\\xE1c nh\\u1EADn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close\",\n            type: \"button\",\n            \"aria-label\": \"Close\",\n            onClick: closeRemedyClose,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Email b\\u1EC7nh nh\\xE2n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  value: this.state.email,\n                  onChange: event => this.handleOnChangeEmail(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => this.handleSendRemedy(),\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: closeRemedyClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    genders: state.admin.genders\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModel);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/reactFE/src/containers/System/Doctor/RemedyModel.js"],"names":["React","Component","connect","Select","Modal","Button","ModalHeader","ModalBody","ModalFooter","toast","LANGUAGES","CommonUtils","RemedyModel","constructor","props","handleOnChangeEmail","event","setState","email","target","value","handleOnChangeImg","data","files","file","console","log","base64","convertBase64","imgBase64","handleSendRemedy","sendRemedy","state","componentDidMount","dataModel","componentDidUpdate","prevProps","prevState","snapshot","render","isOpenModal","closeRemedyClose","mapStateToProps","language","app","genders","admin","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./RemedyModel.scss\";\r\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { LANGUAGES, CommonUtils } from \"../../../utils\";\r\nclass RemedyModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      imgBase64: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.dataModel) {\r\n      this.setState({\r\n        email: this.props.dataModel.email,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.dataModel !== this.props.dataModel) {\r\n      this.setState({\r\n        email: this.props.dataModel.email,\r\n      });\r\n    }\r\n  }\r\n  handleOnChangeEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleOnChangeImg = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    console.log(file);\r\n    if (file) {\r\n      let base64 = await CommonUtils.convertBase64(file);\r\n      this.setState({\r\n        imgBase64: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSendRemedy = () => {\r\n    this.props.sendRemedy(this.state);\r\n  };\r\n  render() {\r\n    let { isOpenModal, closeRemedyClose, dataModel, sendRemedy } = this.props;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={isOpenModal}\r\n          // toggle={}\r\n          className={\"booking-modal-container\"}\r\n          size=\"md\"\r\n          centered\r\n          // backdrop={true}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\"> Gửi hóa đơn xác nhận</h5>\r\n            <button\r\n              className=\"close\"\r\n              type=\"button\"\r\n              aria-label=\"Close\"\r\n              onClick={closeRemedyClose}\r\n            >\r\n              <span aria-hidden=\"true\">x</span>\r\n            </button>\r\n          </div>\r\n          <ModalBody>\r\n            <form>\r\n              {\" \"}\r\n              <div className=\"row\">\r\n                <div className=\"col-6 form-group\">\r\n                  <label>Email bệnh nhân</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={this.state.email}\r\n                    onChange={(event) => this.handleOnChangeEmail(event)}\r\n                  />\r\n\r\n                  {/* <div className=\"col-12 form-group\">\r\n                    <label>Chọn file đơn thuốc</label>\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control-file\"\r\n                      onChange={(event) => this.handleOnChangeImg(event)}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={() => this.handleSendRemedy()}>\r\n              Send\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={closeRemedyClose}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModel);\r\n"]},"metadata":{},"sourceType":"module"}