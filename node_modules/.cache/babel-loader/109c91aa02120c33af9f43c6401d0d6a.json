{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\reactFE\\\\src\\\\containers\\\\Patient\\\\Doctor\\\\DoctorSchedule.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\nimport \"./DoctorSchedule.scss\";\nimport moment from \"moment\";\nimport localization from \"moment/locale/vi\";\nimport { getScheduleDoctorByDate } from \"../../../services/userService\";\nimport { LANGUAGES } from \"../../../utils\";\nimport { FormattedMessage } from \"react-intl\";\nimport BookingModal from \"../../Patient/Doctor/Modal/BookingModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DoctorSchedule extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getArrDays = language => {\n      let allDays = [];\n\n      for (let i = 0; i < 7; i++) {\n        let object = {};\n\n        if (language === LANGUAGES.VI) {\n          if (i === 0) {\n            let ddMM = moment(new Date()).format(\"DD/MM\");\n            let today = `HÃ´m nay - ${ddMM}`;\n            object.label = today;\n          } else {\n            let labelVi = moment(new Date()).add(i, \"days\").format(\"dddd - DD/MM\");\n            object.label = this.capitalizeFirstLetter(labelVi);\n          }\n        } else {\n          if (i === 0) {\n            let ddMM = moment(new Date()).format(\"DD/MM\");\n            let today = `Today - ${ddMM}`;\n            object.label = today;\n            console.log(\"ddmm\", today);\n          } else {\n            object.label = moment(new Date()).add(i, \"days\").locale(\"en\").format(\"dddd - DD/MM\");\n          }\n        }\n\n        object.value = moment(new Date()).add(i, \"days\").startOf(\"day\").valueOf();\n        allDays.push(object);\n      }\n\n      return allDays;\n    };\n\n    this.handleOnChangeSelect = async event => {\n      if (this.props.detailDoctorIdFromParent && this.props.detailDoctorIdFromParent !== -1) {\n        let doctorId = this.props.detailDoctorIdFromParent;\n        let date = event.target.value;\n        let res = await getScheduleDoctorByDate(doctorId, date);\n\n        if (res && res.errCode === 0) {\n          this.setState({\n            allAvalableTimes: res.data ? res.data : []\n          });\n          console.log(\"check res after\", res); //day\n        }\n      }\n    };\n\n    this.handleClickScheduleTime = time => {\n      console.log(\"check\", time);\n      this.setState({\n        isOpenModalBooking: true,\n        dataScheduleTimeModal: time\n      });\n    };\n\n    this.closeBookingClose = () => {\n      this.setState({\n        isOpenModalBooking: false\n      });\n    };\n\n    this.state = {\n      allDays: [],\n      allAvalableTimes: [],\n      isOpenModalBooking: false,\n      dataScheduleTimeModal: {}\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      language\n    } = this.props;\n    let allDays = this.getArrDays(language);\n    this.setState({\n      allDays: allDays\n    });\n\n    if (this.props.detailDoctorIdFromParent) {\n      let res = await getScheduleDoctorByDate(this.props.detailDoctorIdFromParent, allDays[0].value);\n      this.setState({\n        allAvalableTimes: res.data ? res.data : []\n      });\n    }\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {\n      let allDays = this.getArrDays(this.props.language);\n      this.setState({\n        allDays: allDays\n      });\n    }\n\n    if (this.props.detailDoctorIdFromParent !== prevProps.detailDoctorIdFromParent) {\n      let allDays = this.getArrDays(this.props.language);\n      let res = await getScheduleDoctorByDate(this.props.detailDoctorIdFromParent, allDays[0].value);\n      this.setState({\n        allAvalableTimes: res.data ? res.data : []\n      });\n    }\n  }\n\n  render() {\n    let {\n      allDays,\n      allAvalableTimes,\n      isOpenModalBooking,\n      dataScheduleTimeModal\n    } = this.state;\n    console.log('check 122312312', allAvalableTimes);\n    let {\n      language\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-schedule-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"all-schedule\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: event => this.handleOnChangeSelect(event),\n            children: allDays && allDays.length > 0 && allDays.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.value,\n                children: item.label\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"all-available-time\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-calendar\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-calendar-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"patient.detail-doctor.schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-content\",\n            children: allAvalableTimes && allAvalableTimes.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-content-btn\",\n                children: allAvalableTimes.map((item, index) => {\n                  let timeDisplay = language === LANGUAGES.VI ? item.timeTypeData.valueVi : item.timeTypeData.valueEn;\n                  console.log('check time', item);\n                  return /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.handleClickScheduleTime(item),\n                    disabled: true,\n                    children: [\" \", timeDisplay]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"book-free\",\n                children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.detail-doctor.choose\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-hand-point-up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.detail-doctor.free\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontStyle: \"italic\",\n                fontSize: \"16px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"patient.detail-doctor.no-schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BookingModal, {\n        isOpenModal: isOpenModalBooking,\n        closeBookingClose: this.closeBookingClose,\n        dataTime: dataScheduleTimeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/reactFE/src/containers/Patient/Doctor/DoctorSchedule.js"],"names":["React","Component","connect","Select","moment","localization","getScheduleDoctorByDate","LANGUAGES","FormattedMessage","BookingModal","DoctorSchedule","constructor","props","getArrDays","language","allDays","i","object","VI","ddMM","Date","format","today","label","labelVi","add","capitalizeFirstLetter","console","log","locale","value","startOf","valueOf","push","handleOnChangeSelect","event","detailDoctorIdFromParent","doctorId","date","target","res","errCode","setState","allAvalableTimes","data","handleClickScheduleTime","time","isOpenModalBooking","dataScheduleTimeModal","closeBookingClose","state","componentDidMount","string","charAt","toUpperCase","slice","componentDidUpdate","prevProps","prevState","snapshot","render","length","map","item","index","timeDisplay","timeTypeData","valueVi","valueEn","fontStyle","fontSize","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./DoctorSchedule.scss\";\r\nimport moment from \"moment\";\r\nimport localization from \"moment/locale/vi\";\r\nimport { getScheduleDoctorByDate } from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport BookingModal from \"../../Patient/Doctor/Modal/BookingModal\";\r\nclass DoctorSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allDays: [],\r\n      allAvalableTimes: [],\r\n      isOpenModalBooking: false,\r\n      dataScheduleTimeModal: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let { language } = this.props;\r\n    let allDays = this.getArrDays(language);\r\n    this.setState({ allDays: allDays });\r\n\r\n    if (this.props.detailDoctorIdFromParent) {\r\n      let res = await getScheduleDoctorByDate(\r\n        this.props.detailDoctorIdFromParent,\r\n        allDays[0].value\r\n      );\r\n      this.setState({\r\n        allAvalableTimes: res.data ? res.data : [],\r\n      });\r\n    }\r\n  }\r\n\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  getArrDays = (language) => {\r\n    let allDays = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      let object = {};\r\n      if (language === LANGUAGES.VI) {\r\n        if (i === 0) {\r\n          let ddMM = moment(new Date()).format(\"DD/MM\");\r\n          let today = `HÃ´m nay - ${ddMM}`;\r\n          object.label = today;\r\n        } else {\r\n          let labelVi = moment(new Date())\r\n            .add(i, \"days\")\r\n            .format(\"dddd - DD/MM\");\r\n          object.label = this.capitalizeFirstLetter(labelVi);\r\n        }\r\n      } else {\r\n        if (i === 0) {\r\n          let ddMM = moment(new Date()).format(\"DD/MM\");\r\n          let today = `Today - ${ddMM}`;\r\n          object.label = today;\r\n          console.log(\"ddmm\", today);\r\n        } else {\r\n          object.label = moment(new Date())\r\n            .add(i, \"days\")\r\n            .locale(\"en\")\r\n            .format(\"dddd - DD/MM\");\r\n        }\r\n      }\r\n      object.value = moment(new Date()).add(i, \"days\").startOf(\"day\").valueOf();\r\n      allDays.push(object);\r\n    }\r\n    return allDays;\r\n  };\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n      let allDays = this.getArrDays(this.props.language);\r\n      this.setState({\r\n        allDays: allDays,\r\n      });\r\n    }\r\n    if (\r\n      this.props.detailDoctorIdFromParent !== prevProps.detailDoctorIdFromParent\r\n    ) {\r\n      let allDays = this.getArrDays(this.props.language);\r\n      let res = await getScheduleDoctorByDate(\r\n        this.props.detailDoctorIdFromParent,\r\n        allDays[0].value\r\n      );\r\n      this.setState({\r\n        allAvalableTimes: res.data ? res.data : [],\r\n      });\r\n    }\r\n  }\r\n  handleOnChangeSelect = async (event) => {\r\n    if (\r\n      this.props.detailDoctorIdFromParent &&\r\n      this.props.detailDoctorIdFromParent !== -1\r\n    ) {\r\n      let doctorId = this.props.detailDoctorIdFromParent;\r\n      let date = event.target.value;\r\n      let res = await getScheduleDoctorByDate(doctorId, date);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          allAvalableTimes: res.data ? res.data : [],\r\n        });\r\n        console.log(\"check res after\", res);\r\n        //day\r\n      }\r\n    }\r\n  };\r\n  handleClickScheduleTime = (time) => {\r\n    console.log(\"check\", time);\r\n    this.setState({\r\n      isOpenModalBooking: true,\r\n      dataScheduleTimeModal: time,\r\n    });\r\n  };\r\n  closeBookingClose = () => {\r\n    this.setState({\r\n      isOpenModalBooking: false,\r\n    });\r\n  };\r\n  render() {\r\n    let {\r\n      allDays,\r\n      allAvalableTimes,\r\n      isOpenModalBooking,\r\n      dataScheduleTimeModal,\r\n    } = this.state;\r\n    console.log('check 122312312', allAvalableTimes)\r\n    let { language } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"doctor-schedule-container\">\r\n          <div className=\"all-schedule\">\r\n            <select onChange={(event) => this.handleOnChangeSelect(event)}>\r\n              {allDays &&\r\n                allDays.length > 0 &&\r\n                allDays.map((item, index) => {\r\n                  return (\r\n                    <option key={index} value={item.value}>\r\n                      {item.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"all-available-time\">\r\n            <div className=\"text-calendar\">\r\n              <i className=\"fa fa-calendar-alt\"></i>{\" \"}\r\n              <span>\r\n                <FormattedMessage id=\"patient.detail-doctor.schedule\" />\r\n              </span>\r\n            </div>\r\n            <div className=\"time-content\">\r\n              {allAvalableTimes && allAvalableTimes.length > 0 ? (\r\n                <>\r\n                  <div className=\"time-content-btn\">\r\n                    {allAvalableTimes.map((item, index) => {\r\n                      let timeDisplay =\r\n                        language === LANGUAGES.VI\r\n                          ? item.timeTypeData.valueVi\r\n                          : item.timeTypeData.valueEn;\r\n                      console.log('check time', item)\r\n                      return (\r\n                        <button\r\n                          key={index}\r\n                          onClick={() => this.handleClickScheduleTime(item)}\r\n                          disabled={true}\r\n                        >\r\n                          {\" \"}\r\n\r\n                          {timeDisplay}\r\n                        </button>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"book-free\">\r\n                    <FormattedMessage id=\"patient.detail-doctor.choose\" />{\" \"}\r\n                    <i className=\"far fa-hand-point-up\"></i>{\" \"}\r\n                    <FormattedMessage id=\"patient.detail-doctor.free\" />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div style={{ fontStyle: \"italic\", fontSize: \"16px\" }}>\r\n                  <FormattedMessage id=\"patient.detail-doctor.no-schedule\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <BookingModal\r\n          isOpenModal={isOpenModalBooking}\r\n          closeBookingClose={this.closeBookingClose}\r\n          dataTime={dataScheduleTimeModal}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\r\n"]},"metadata":{},"sourceType":"module"}