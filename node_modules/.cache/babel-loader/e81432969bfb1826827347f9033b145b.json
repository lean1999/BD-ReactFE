{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\reactFE\\\\src\\\\containers\\\\Patient\\\\Doctor\\\\Modal\\\\BookingModal.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\nimport \"./BookingModal.scss\";\nimport moment from \"moment\";\nimport { FormattedMessage } from \"react-intl\";\nimport NumberFormat from \"react-number-format\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport ProfileDoctor from \"../ProfileDoctor\";\nimport _ from \"lodash\";\nimport { postPatientAppoiment, postBanking, getDetailInfoDoctor, getAllCodeService } from \"../../../../services/userService\";\nimport DatePicker from \"../../../../components/Input/DatePicker\";\nimport * as actions from \"../../../../store/actions\";\nimport { LANGUAGES } from \"../../../../utils\";\nimport { toast } from \"react-toastify\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass BookingModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getallpayment = async () => {\n      let response = await getAllCodeService(\"PAYMENT\");\n\n      if (response && response.errCode === 0) {\n        this.setState({\n          dataPayment: response.data\n        });\n      }\n\n      console.log(\"check data pay ment 1233\", response);\n    };\n\n    this.disableDates = () => {\n      var today, dd, mm, yyyy;\n      today = new Date();\n      dd = today.getDate() + 1;\n      mm = today.getMonth() + 1;\n      yyyy = today.getFullYear();\n      return yyyy + \"-\" + mm + \"-\" + dd;\n    };\n\n    this.buildDataGender = data => {\n      let result = [];\n      let language = this.props.language;\n\n      if (data && data.length > 0) {\n        data.map(item => {\n          let object = {};\n          object.label = language === LANGUAGES.VI ? item.valueVi : item.valueEn;\n          object.value = item.keyMap;\n          result.push(object);\n        });\n      }\n\n      return result;\n    };\n\n    this.handleOnChangeInput = (event, id) => {\n      let valueInput = event.target.value;\n      let stateCopy = { ...this.state\n      };\n      stateCopy[id] = valueInput;\n      this.setState({ ...stateCopy\n      });\n    };\n\n    this.handleOnchangeDatePiker = date => {\n      this.setState({\n        birthday: date[0]\n      });\n    };\n\n    this.handleChangeSelect = selectedOption => {\n      this.setState({\n        selectedGender: selectedOption\n      });\n    };\n\n    this.buildDataBooking = dataTime => {\n      let {\n        language\n      } = this.props;\n\n      if (dataTime && !_.isEmpty(dataTime)) {\n        let time = language === LANGUAGES.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn;\n        let date = language === LANGUAGES.VI ? moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\") : moment.unix(+dataTime.date / 1000).locale(\"en\").format(\"ddd - MM/DD/YYYY\");\n        return `${time}-${date}`;\n      }\n\n      return \"\";\n    };\n\n    this.buildDoctorName = dataTime => {\n      let {\n        language\n      } = this.props;\n\n      if (dataTime && !_.isEmpty(dataTime)) {\n        let name = language === LANGUAGES.VI ? `${dataTime.doctorData.lastName}${dataTime.doctorData.firstName}` : `${dataTime.doctorData.firstName}${dataTime.doctorData.lastName}`;\n        return name;\n      }\n\n      return \"\";\n    };\n\n    this.handleDoctorInfo = async () => {\n      console.log(\"thanh toan dien tu\");\n      let data = {};\n      data.amount = 350000;\n      data.orderInfo = \"test create payment 350.000 VND\";\n      let res = await postBanking(data);\n      console.log(\"res\", res);\n      this.setState({\n        isShowLoading: false\n      });\n    };\n\n    this.handleConfirmBooking = async () => {\n      console.log(\"check confirm\", this.state);\n      this.setState({\n        isShowLoading: true\n      }); // !data.email || !data.doctorId || !data.timeType || !data.date\n\n      let date = new Date(this.state.birthday).getTime();\n      let timeString = this.buildDataBooking(this.props.dataTime);\n      let doctorName = this.buildDoctorName(this.props.dataTime);\n      let res = await postPatientAppoiment({\n        fullName: this.state.fullName,\n        phoneNumber: this.state.phoneNumber,\n        email: this.state.email,\n        address: this.state.address,\n        reason: this.state.reason,\n        date: this.props.dataTime.date,\n        birthday: date,\n        selectedGender: this.state.selectedGender.value,\n        doctorId: this.state.doctorId,\n        timeType: this.state.timeType,\n        language: this.props.language,\n        timeString: timeString,\n        doctorName: doctorName\n      });\n      console.log(\"res\", res);\n      this.setState({\n        isShowLoading: false\n      });\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Bookign a new appoiment succedd\");\n        this.props.closeBookingClose();\n      } else {\n        toast.error(\"Bookign a new appoiment error\");\n      }\n    };\n\n    this.state = {\n      fullName: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      address: \"\",\n      reason: \"\",\n      birthday: '',\n      genders: \"\",\n      doctorId: \"\",\n      selectedGender: \"\",\n      timeType: \"\",\n      optionsExamination: \"\",\n      isShowLoading: false,\n      dataPayment: []\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getGenders();\n    await this.getallpayment();\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {\n      this.setState({\n        genders: this.buildDataGender(this.props.genders)\n      });\n    }\n\n    if (this.props.genders !== prevProps.genders) {\n      this.setState({\n        genders: this.buildDataGender(this.props.genders)\n      });\n    }\n\n    if (this.props.dataTime !== prevProps.dataTime) {\n      if (this.props.dataTime && !_.isEmpty(this.props.dataTime)) {\n        let doctorId = this.props.dataTime.doctorId;\n        let timeType = this.props.dataTime.timeType;\n        this.setState({\n          doctorId: doctorId,\n          timeType: timeType\n        });\n      }\n    }\n  }\n\n  render() {\n    let {\n      isOpenModal,\n      closeBookingClose,\n      dataTime,\n      dataProfileprop\n    } = this.props;\n    console.log(\"check data thanh toan\", dataProfileprop);\n    console.log(\"check prop bookign modal\", this.props);\n    console.log(\"asdsadasdasd\", this.state.dataPayment);\n    let yesterday = new Date(new Date().setTime());\n    let doctorId = \"\";\n\n    if (dataTime && !_.isEmpty(dataTime)) {\n      doctorId = dataTime.doctorId;\n    }\n\n    const optionsPayMent = [{\n      value: \"Tiền Mặt\",\n      label: \"Tiền Mặt\"\n    }, {\n      value: \"Thanh Toán Điện Tử\",\n      label: \"Thanh Toán Điện Tử\"\n    }];\n    const optionsExamination = [{\n      value: \"Gặp Trực Tiếp\",\n      label: \"Gặp Trực Tiếp\"\n    }, {\n      value: \"Khám Từ Xa\",\n      label: \"Khám Từ Xa\"\n    }]; // fullName: '',\n    //     phoneNumber: '',\n    //         email: '',\n    //             address: '',\n    //                 reason: '',\n    //                     birthday: '',\n    //                         gender: '',\n    //                             doctorId: ''\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: this.state.isShowLoading,\n        spinner: true,\n        text: \"Loading...\",\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isOpenModal // toggle={}\n          ,\n          className: \"booking-modal-container\",\n          size: \"lg\",\n          centered: true // backdrop={true}\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booking-modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"booking-modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"left\",\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.booking-modal.title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"right\",\n                onClick: closeBookingClose,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"booking-modal-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"doctor-infor\",\n                children: /*#__PURE__*/_jsxDEV(ProfileDoctor, {\n                  doctorId: doctorId,\n                  isShowDescriptionDoctor: false,\n                  dataTime: dataTime,\n                  isShowLinkDetail: false,\n                  isShowPrice: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"patient.booking-modal.fullName\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-control\",\n                    value: this.state.fullName,\n                    onChange: event => this.handleOnChangeInput(event, \"fullName\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"patient.booking-modal.phoneNumber\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-control\",\n                    value: this.state.phoneNumber,\n                    onChange: event => this.handleOnChangeInput(event, \"phoneNumber\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"patient.booking-modal.email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-control\",\n                    value: this.state.email,\n                    onChange: event => this.handleOnChangeInput(event, \"email\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"patient.booking-modal.address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-control\",\n                    value: this.state.address,\n                    onChange: event => this.handleOnChangeInput(event, \"address\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-12 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"patient.booking-modal.reson\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-control\",\n                    value: this.state.reason,\n                    onChange: event => this.handleOnChangeInput(event, \"reason\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"patient.booking-modal.birthday\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                    onChange: this.handleOnchangeDatePiker,\n                    className: \"form-control\",\n                    value: this.state.birthday,\n                    maxDate: this.disableDates()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"patient.booking-modal.gender\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: this.state.selectedGender,\n                    onChange: this.handleChangeSelect,\n                    options: this.state.genders\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Ph\\u01B0\\u01A1ng th\\u1EE9c thanh to\\xE1n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: this.state.options // onChange={this.handleChangeSelect}\n                    ,\n                    options: optionsPayMent\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6 form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Ph\\u01B0\\u01A1ng Th\\u1EE9c Kh\\xE1m\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: this.state.optionsExamination,\n                    onChange: this.handleChangeChoose,\n                    options: optionsExamination\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"booking-modal-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                onClick: () => this.handleDoctorInfo(),\n                children: \"Thanh To\\xE1n \\u0110i\\u1EC7n T\\u1EED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \" btn-booking-confirm\",\n                onClick: () => this.handleConfirmBooking(),\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.booking-modal.btn-confirm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \" btn-booking-cancel\",\n                onClick: closeBookingClose,\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.booking-modal.btn-cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    genders: state.admin.genders\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGenders: () => dispatch(actions.fetchGenderStart()),\n    getRequiredDoctorInfo: () => dispatch(actions.getRequiredDoctorInfo())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/reactFE/src/containers/Patient/Doctor/Modal/BookingModal.js"],"names":["React","Component","connect","Select","moment","FormattedMessage","NumberFormat","Button","Modal","ModalHeader","ModalBody","ModalFooter","ProfileDoctor","_","postPatientAppoiment","postBanking","getDetailInfoDoctor","getAllCodeService","DatePicker","actions","LANGUAGES","toast","LoadingOverlay","BookingModal","constructor","props","getallpayment","response","errCode","setState","dataPayment","data","console","log","disableDates","today","dd","mm","yyyy","Date","getDate","getMonth","getFullYear","buildDataGender","result","language","length","map","item","object","label","VI","valueVi","valueEn","value","keyMap","push","handleOnChangeInput","event","id","valueInput","target","stateCopy","state","handleOnchangeDatePiker","date","birthday","handleChangeSelect","selectedOption","selectedGender","buildDataBooking","dataTime","isEmpty","time","timeTypeData","unix","format","locale","buildDoctorName","name","doctorData","lastName","firstName","handleDoctorInfo","amount","orderInfo","res","isShowLoading","handleConfirmBooking","getTime","timeString","doctorName","fullName","phoneNumber","email","address","reason","doctorId","timeType","success","closeBookingClose","error","genders","optionsExamination","componentDidMount","getGenders","componentDidUpdate","prevProps","prevState","snapshot","render","isOpenModal","dataProfileprop","yesterday","setTime","optionsPayMent","options","handleChangeChoose","mapStateToProps","app","admin","mapDispatchToProps","dispatch","fetchGenderStart","getRequiredDoctorInfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./BookingModal.scss\";\r\nimport moment from \"moment\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport ProfileDoctor from \"../ProfileDoctor\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  postPatientAppoiment,\r\n  postBanking,\r\n  getDetailInfoDoctor,\r\n  getAllCodeService,\r\n} from \"../../../../services/userService\";\r\nimport DatePicker from \"../../../../components/Input/DatePicker\";\r\nimport * as actions from \"../../../../store/actions\";\r\nimport { LANGUAGES } from \"../../../../utils\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nclass BookingModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullName: \"\",\r\n      phoneNumber: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      reason: \"\",\r\n      birthday: '',\r\n      genders: \"\",\r\n      doctorId: \"\",\r\n      selectedGender: \"\",\r\n      timeType: \"\",\r\n      optionsExamination:\"\",\r\n      isShowLoading: false,\r\n      dataPayment: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.props.getGenders();\r\n\r\n    await this.getallpayment();\r\n  }\r\n\r\n  getallpayment = async () => {\r\n    let response = await getAllCodeService(\"PAYMENT\");\r\n    if (response && response.errCode === 0) {\r\n      this.setState({\r\n        dataPayment: response.data,\r\n      });\r\n    }\r\n    console.log(\"check data pay ment 1233\", response);\r\n  };\r\n  disableDates = () => {\r\n    var today, dd, mm, yyyy;\r\n    today = new Date();\r\n    dd = today.getDate() + 1;\r\n    mm = today.getMonth() + 1;\r\n    yyyy = today.getFullYear();\r\n    return yyyy + \"-\" + mm + \"-\" + dd;\r\n  };\r\n  buildDataGender = (data) => {\r\n    let result = [];\r\n    let language = this.props.language;\r\n    if (data && data.length > 0) {\r\n      data.map((item) => {\r\n        let object = {};\r\n        object.label = language === LANGUAGES.VI ? item.valueVi : item.valueEn;\r\n        object.value = item.keyMap;\r\n        result.push(object);\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n      this.setState({\r\n        genders: this.buildDataGender(this.props.genders),\r\n      });\r\n    }\r\n    if (this.props.genders !== prevProps.genders) {\r\n      this.setState({\r\n        genders: this.buildDataGender(this.props.genders),\r\n      });\r\n    }\r\n    if (this.props.dataTime !== prevProps.dataTime) {\r\n      if (this.props.dataTime && !_.isEmpty(this.props.dataTime)) {\r\n        let doctorId = this.props.dataTime.doctorId;\r\n        let timeType = this.props.dataTime.timeType;\r\n        this.setState({\r\n          doctorId: doctorId,\r\n          timeType: timeType,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleOnChangeInput = (event, id) => {\r\n    let valueInput = event.target.value;\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = valueInput;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n  };\r\n  handleOnchangeDatePiker = (date) => {\r\n    this.setState({\r\n      birthday: date[0],\r\n    });\r\n  };\r\n  handleChangeSelect = (selectedOption) => {\r\n    this.setState({\r\n      selectedGender: selectedOption,\r\n    });\r\n  };\r\n\r\n  buildDataBooking = (dataTime) => {\r\n    let { language } = this.props;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let time =\r\n        language === LANGUAGES.VI\r\n          ? dataTime.timeTypeData.valueVi\r\n          : dataTime.timeTypeData.valueEn;\r\n      let date =\r\n        language === LANGUAGES.VI\r\n          ? moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\")\r\n          : moment\r\n              .unix(+dataTime.date / 1000)\r\n              .locale(\"en\")\r\n              .format(\"ddd - MM/DD/YYYY\");\r\n\r\n      return `${time}-${date}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  buildDoctorName = (dataTime) => {\r\n    let { language } = this.props;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let name =\r\n        language === LANGUAGES.VI\r\n          ? `${dataTime.doctorData.lastName}${dataTime.doctorData.firstName}`\r\n          : `${dataTime.doctorData.firstName}${dataTime.doctorData.lastName}`;\r\n      return name;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  // handlePayBooking =  async () => {\r\n\r\n  //   let res = await postBanking({\r\n  //   });\r\n  //   console.log(\"res\", res);\r\n  //   this.setState({\r\n  //     isShowLoading: false,\r\n  //   });\r\n\r\n  // };\r\n\r\n  handleDoctorInfo = async () => {\r\n    console.log(\"thanh toan dien tu\")\r\n    let data = {};\r\n    data.amount = 350000;\r\n    data.orderInfo = \"test create payment 350.000 VND\";\r\n    let res = await postBanking(data);\r\n    console.log(\"res\", res);\r\n    this.setState({\r\n      isShowLoading: false,\r\n    });\r\n  };\r\n\r\n  handleConfirmBooking = async () => {\r\n    console.log(\"check confirm\", this.state);\r\n    this.setState({\r\n      isShowLoading: true,\r\n    });\r\n    // !data.email || !data.doctorId || !data.timeType || !data.date\r\n    let date = new Date(this.state.birthday).getTime();\r\n    let timeString = this.buildDataBooking(this.props.dataTime);\r\n    let doctorName = this.buildDoctorName(this.props.dataTime);\r\n\r\n    let res = await postPatientAppoiment({\r\n      fullName: this.state.fullName,\r\n      phoneNumber: this.state.phoneNumber,\r\n      email: this.state.email,\r\n      address: this.state.address,\r\n      reason: this.state.reason,\r\n      date: this.props.dataTime.date,\r\n      birthday: date,\r\n      selectedGender: this.state.selectedGender.value,\r\n      doctorId: this.state.doctorId,\r\n      timeType: this.state.timeType,\r\n      language: this.props.language,\r\n      timeString: timeString,\r\n      doctorName: doctorName,\r\n    });\r\n\r\n    console.log(\"res\", res);\r\n    this.setState({\r\n      isShowLoading: false,\r\n    });\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Bookign a new appoiment succedd\");\r\n      this.props.closeBookingClose();\r\n    } else {\r\n      toast.error(\"Bookign a new appoiment error\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { isOpenModal, closeBookingClose, dataTime, dataProfileprop } =\r\n      this.props;\r\n    console.log(\"check data thanh toan\", dataProfileprop);\r\n    console.log(\"check prop bookign modal\", this.props);\r\n    console.log(\"asdsadasdasd\", this.state.dataPayment);\r\n    let yesterday = new Date(new Date().setTime());\r\n    let doctorId = \"\";\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      doctorId = dataTime.doctorId;\r\n    }\r\n    const optionsPayMent = [\r\n      { value: \"Tiền Mặt\", label: \"Tiền Mặt\" },\r\n      { value: \"Thanh Toán Điện Tử\", label: \"Thanh Toán Điện Tử\" },\r\n    ];\r\n\r\n    const optionsExamination = [\r\n      { value: \"Gặp Trực Tiếp\", label: \"Gặp Trực Tiếp\" },\r\n      { value: \"Khám Từ Xa\", label: \"Khám Từ Xa\" },\r\n    ];\r\n\r\n    // fullName: '',\r\n    //     phoneNumber: '',\r\n    //         email: '',\r\n    //             address: '',\r\n    //                 reason: '',\r\n    //                     birthday: '',\r\n    //                         gender: '',\r\n    //                             doctorId: ''\r\n    return (\r\n      <>\r\n        <LoadingOverlay\r\n          active={this.state.isShowLoading}\r\n          spinner\r\n          text=\"Loading...\"\r\n        >\r\n          <Modal\r\n            isOpen={isOpenModal}\r\n            // toggle={}\r\n            className={\"booking-modal-container\"}\r\n            size=\"lg\"\r\n            centered\r\n            // backdrop={true}\r\n          >\r\n            <div className=\"booking-modal-content\">\r\n              <div className=\"booking-modal-header\">\r\n                <span className=\"left\">\r\n                  <FormattedMessage id={\"patient.booking-modal.title\"} />\r\n                </span>\r\n                <span className=\"right\" onClick={closeBookingClose}>\r\n                  <i className=\"fas fa-times\"></i>\r\n                </span>\r\n              </div>\r\n              <div className=\"booking-modal-body\">\r\n                {/* {JSON.stringify(dataTime)} */}\r\n                <div className=\"doctor-infor\">\r\n                  <ProfileDoctor\r\n                    doctorId={doctorId}\r\n                    isShowDescriptionDoctor={false}\r\n                    dataTime={dataTime}\r\n                    isShowLinkDetail={false}\r\n                    isShowPrice={true}\r\n                  />\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.fullName\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.fullName}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"fullName\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage\r\n                        id={\"patient.booking-modal.phoneNumber\"}\r\n                      />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.phoneNumber}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"phoneNumber\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.email\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.email}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"email\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.address\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.address}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"address\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  {/* <p>test</p> */}\r\n                  <div className=\"col-12 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.reson\"} />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={this.state.reason}\r\n                      onChange={(event) =>\r\n                        this.handleOnChangeInput(event, \"reason\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.birthday\"} />\r\n                    </label>\r\n                    <DatePicker\r\n                      onChange={this.handleOnchangeDatePiker}\r\n                      className=\"form-control\"\r\n                      value={this.state.birthday}\r\n                      maxDate={this.disableDates()}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>\r\n                      <FormattedMessage id={\"patient.booking-modal.gender\"} />\r\n                    </label>\r\n                    <Select\r\n                      value={this.state.selectedGender}\r\n                      onChange={this.handleChangeSelect}\r\n                      options={this.state.genders}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>Phương thức thanh toán</label>\r\n                    <Select\r\n                      value={this.state.options}\r\n                      // onChange={this.handleChangeSelect}\r\n                      options={optionsPayMent}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group\">\r\n                    <label>Phương Thức Khám</label>\r\n                    <Select\r\n                      value={this.state.optionsExamination}\r\n                       onChange={this.handleChangeChoose}\r\n                      options={optionsExamination}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"booking-modal-footer\">\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  onClick={() => this.handleDoctorInfo()}\r\n                >\r\n                  Thanh Toán Điện Tử\r\n                </button>\r\n                <button\r\n                  className=\" btn-booking-confirm\"\r\n                  onClick={() => this.handleConfirmBooking()}\r\n                >\r\n                  <FormattedMessage id={\"patient.booking-modal.btn-confirm\"} />\r\n                </button>\r\n                <button\r\n                  className=\" btn-booking-cancel\"\r\n                  onClick={closeBookingClose}\r\n                >\r\n                  <FormattedMessage id={\"patient.booking-modal.btn-cancel\"} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGenders: () => dispatch(actions.fetchGenderStart()),\r\n    getRequiredDoctorInfo: () => dispatch(actions.getRequiredDoctorInfo()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\r\n"]},"metadata":{},"sourceType":"module"}