{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\ReactFE\\\\src\\\\containers\\\\System\\\\Doctor\\\\ManagePrescription.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\nimport \"./ManagePrescription.scss\";\nimport moment from \"moment\";\nimport DatePicker from \"../../../components/Input/DatePicker\";\nimport { getListPatientForDoctor, postSendPrescription } from \"../../../services/userService\";\nimport { LANGUAGES } from \"../../../utils\";\nimport { FormattedMessage } from \"react-intl\";\nimport NumberFormat from \"react-number-format\";\nimport PrescriptionModel from \"./PrescriptionModel\";\nimport { toast } from \"react-toastify\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport CreatePrecription from \"./CreatePrecription\";\nimport WatchPrescripttionModel from \"./WatchPrescripttionModel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ManagePrescription extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnchangeDatePiker = date => {\n      this.setState({\n        currentDate: date[0]\n      }, async () => {\n        await this.getDatePatient();\n      });\n    };\n\n    this.getDatePatient = async () => {\n      let {\n        user\n      } = this.props;\n      let {\n        currentDate\n      } = this.state;\n      let formattedDate = new Date(currentDate).getTime();\n      console.log(\"this state\", this.state);\n      let res = await getListPatientForDoctor({\n        doctorId: user.id,\n        date: formattedDate\n      });\n      console.log(\"res manage\", res);\n\n      if (res && res.errCode === 0) {\n        this.setState({\n          dataPatient: res.data\n        });\n      }\n    };\n\n    this.handleChangeDate = date => {\n      this.setState({\n        currentDate: date[0]\n      }, () => {\n        let {\n          user\n        } = this.props;\n        let {\n          currentDate\n        } = this.state;\n        let formattedDate = new Date(currentDate).getTime();\n        this.getDatePatient(user, formattedDate);\n      });\n    };\n\n    this.handleBtnConfirm = item => {\n      let data = {\n        doctorId: item.doctorId,\n        patientId: item.patientId,\n        email: item.patientData.email,\n        timeType: item.timeType,\n        patientName: item.patientData.lastName\n      };\n      this.setState({\n        isOpenRemedyModal: true,\n        dataModel: data\n      });\n      console.log(\"data\", data);\n    };\n\n    this.closeRemedyClose = () => {\n      this.setState({\n        isOpenRemedyModal: false,\n        isOpenWatchPatient: false,\n        dataModel: {}\n      });\n    };\n\n    this.handleBtnWatch = item => {\n      let data = {\n        doctorId: item.doctorId,\n        patientId: item.patientId,\n        email: item.patientData.email,\n        timeType: item.timeType,\n        patientName: item.patientData.lastName\n      };\n      this.setState({\n        isOpenRemedyModal: true,\n        isOpenWatchPatient: true,\n        dataModel: data,\n        idPatient: item.patientId\n      });\n      console.log(\"data\", data);\n    };\n\n    this.closeRemedyClose = () => {\n      this.setState({\n        isOpenRemedyModal: false,\n        isOpenWatchPatient: false,\n        dataModel: {}\n      });\n    };\n\n    this.sendPrescription = async dataChild => {\n      let {\n        dataModel\n      } = this.state;\n      this.setState({\n        isShowLoading: true\n      });\n      let res = await postSendPrescription({\n        email: dataChild.email,\n        imgBase64: dataChild.imgBase64,\n        doctorId: dataModel.doctorId,\n        patientId: dataModel.patientId,\n        timeType: dataModel.timeType,\n        language: this.props.language,\n        patientName: dataModel.patientName // ...dataChild,\n\n      });\n      console.log(\"res,\", res);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Send gmail Success !\");\n        this.setState({\n          isShowLoading: false\n        });\n        this.closeRemedyClose();\n        await this.getDatePatient();\n      } else {\n        toast.error(\"Send error message.....\");\n        this.setState({\n          isShowLoading: false\n        });\n      }\n    };\n\n    this.state = {\n      currentDate: moment(new Date()).startOf(\"day\").valueOf(),\n      dataPatient: [],\n      isOpenRemedyModal: false,\n      isOpenWatchPatient: false,\n      dataModel: {},\n      isShowLoading: false,\n      showCreatePresiton: false,\n      idPatient: \"\"\n    };\n  }\n\n  // $(window).on(\"load resize \", function() {\n  //   var scrollWidth = $('.tbl-content').width() - $('.tbl-content table').width();\n  //   $('.tbl-header').css({'padding-right':scrollWidth});\n  // }).resize();\n  async componentDidMount() {\n    this.getDatePatient();\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n  }\n\n  render() {\n    let toDay = new Date();\n    let toDayString = toDay.getDate() + \"/\" + (toDay.getMonth() + 1) + \"/\" + toDay.getFullYear();\n    let {\n      language\n    } = this.props;\n    let {\n      dataPatient,\n      isOpenRemedyModal,\n      dataModel,\n      isOpenWatchPatient,\n      idPatient\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: this.state.isShowLoading,\n        spinner: true,\n        text: \"Loading...\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manage-patient-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"manage-patient-title\",\n            children: \"Qu\\u1EA3n l\\xFD \\u0110\\u01A1n thu\\u1ED1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"manage-patient-body  row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 form-group\",\n              style: {\n                color: \"white\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \" H\\xF4m nay l\\xE0:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: this.handleChangeDate,\n                className: \"form-control\",\n                value: this.state.currentDate,\n                minDate: toDayString,\n                maxDate: toDayString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 table-manage-patient\",\n              children: /*#__PURE__*/_jsxDEV(\"section\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"Table Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tbl-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    cellpadding: \"0\",\n                    cellspacing: \"0\",\n                    border: \"0\",\n                    children: /*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"STT\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 204,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Th\\u1EDDi gian\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 205,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"H\\u1ECD v\\xE0 T\\xEAn\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 206,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"\\u0110\\u1ECBa ch\\u1EC9\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Gi\\u1EDBi T\\xEDnh\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 208,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          className: \"two\",\n                          children: \"Actions\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), dataPatient && dataPatient.length > 0 ? dataPatient.map((item, index) => {\n                  let time = language === LANGUAGES.VI ? item.timeTypeDataPatient.valueVi : item.timeTypeDataPatient.valueEn;\n                  let gender = language === LANGUAGES.VI ? item.patientData.genderData.valueVi : item.patientData.genderData.valueEn;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tbl-content\",\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: index + 1\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 230,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: [\" \", time]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 231,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: [\" \", item.patientData.lastName]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 232,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: item.patientData.address\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 233,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: gender\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 234,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"one\",\n                            children: /*#__PURE__*/_jsxDEV(\"button\", {\n                              className: \"btn btn-warning\",\n                              onClick: () => this.handleBtnWatch(item),\n                              children: \"See more\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 237,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 236,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"one\",\n                            children: /*#__PURE__*/_jsxDEV(\"button\", {\n                              className: \"btn btn-confirm\",\n                              onClick: () => this.handleBtnConfirm(item),\n                              children: \"G\\u1EEDi \\u0111\\u01A1n thu\\u1ED1c\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 245,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 244,\n                            columnNumber: 33\n                          }, this)]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 25\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tbl-content\",\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                          children: \"NO DATA\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 263,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrescriptionModel, {\n          isOpenModal: isOpenRemedyModal,\n          dataModel: dataModel,\n          closeRemedyClose: this.closeRemedyClose,\n          sendRemedy: this.sendPrescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WatchPrescripttionModel, {\n          isOpenModal: isOpenWatchPatient // isOpenModal={isOpenRemedyModal}\n          ,\n          dataModel: dataPatient,\n          closeRemedyClose: this.closeRemedyClose,\n          sendRemedy: this.sendPrescription,\n          dataIdShow: idPatient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    user: state.user.userInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePrescription);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/ReactFE/src/containers/System/Doctor/ManagePrescription.js"],"names":["React","Component","connect","Select","moment","DatePicker","getListPatientForDoctor","postSendPrescription","LANGUAGES","FormattedMessage","NumberFormat","PrescriptionModel","toast","LoadingOverlay","CreatePrecription","WatchPrescripttionModel","ManagePrescription","constructor","props","handleOnchangeDatePiker","date","setState","currentDate","getDatePatient","user","state","formattedDate","Date","getTime","console","log","res","doctorId","id","errCode","dataPatient","data","handleChangeDate","handleBtnConfirm","item","patientId","email","patientData","timeType","patientName","lastName","isOpenRemedyModal","dataModel","closeRemedyClose","isOpenWatchPatient","handleBtnWatch","idPatient","sendPrescription","dataChild","isShowLoading","imgBase64","language","success","error","startOf","valueOf","showCreatePresiton","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","toDay","toDayString","getDate","getMonth","getFullYear","color","length","map","index","time","VI","timeTypeDataPatient","valueVi","valueEn","gender","genderData","address","mapStateToProps","app","userInfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport \"./ManagePrescription.scss\";\r\nimport moment from \"moment\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport {\r\n  getListPatientForDoctor,\r\n  postSendPrescription,\r\n} from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport PrescriptionModel from \"./PrescriptionModel\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport CreatePrecription from \"./CreatePrecription\";\r\nimport WatchPrescripttionModel from \"./WatchPrescripttionModel\";\r\nclass ManagePrescription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentDate: moment(new Date()).startOf(\"day\").valueOf(),\r\n      dataPatient: [],\r\n      isOpenRemedyModal: false,\r\n      isOpenWatchPatient:false,\r\n      dataModel: {},\r\n      isShowLoading: false,\r\n      showCreatePresiton: false,\r\n      idPatient: \"\"\r\n    };\r\n  }\r\n\r\n  handleOnchangeDatePiker = (date) => {\r\n    this.setState(\r\n      {\r\n        currentDate: date[0],\r\n      },\r\n      async () => {\r\n        await this.getDatePatient();\r\n      }\r\n    );\r\n  };\r\n\r\n  // $(window).on(\"load resize \", function() {\r\n  //   var scrollWidth = $('.tbl-content').width() - $('.tbl-content table').width();\r\n  //   $('.tbl-header').css({'padding-right':scrollWidth});\r\n  // }).resize();\r\n  async componentDidMount() {\r\n    this.getDatePatient();\r\n  }\r\n\r\n  getDatePatient = async () => {\r\n    let { user } = this.props;\r\n    let { currentDate } = this.state;\r\n\r\n    let formattedDate = new Date(currentDate).getTime();\r\n    console.log(\"this state\", this.state);\r\n    let res = await getListPatientForDoctor({\r\n      doctorId: user.id,\r\n      date: formattedDate,\r\n    });\r\n    console.log(\"res manage\", res);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        dataPatient: res.data,\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  handleChangeDate = (date) => {\r\n    this.setState(\r\n      {\r\n        currentDate: date[0],\r\n      },\r\n      () => {\r\n        let { user } = this.props;\r\n        let { currentDate } = this.state;\r\n\r\n        let formattedDate = new Date(currentDate).getTime();\r\n\r\n        this.getDatePatient(user, formattedDate);\r\n      }\r\n    );\r\n  };\r\n  handleBtnConfirm = (item) => {\r\n    let data = {\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      email: item.patientData.email,\r\n      timeType: item.timeType,\r\n      patientName: item.patientData.lastName,\r\n    };\r\n    this.setState({\r\n      isOpenRemedyModal: true,\r\n      \r\n      dataModel: data,\r\n    });\r\n    console.log(\"data\", data);\r\n  };\r\n\r\n  closeRemedyClose = () => {\r\n    this.setState({\r\n      isOpenRemedyModal: false,\r\n      isOpenWatchPatient:false,\r\n      dataModel: {},\r\n    });\r\n  };\r\n\r\n\r\n  handleBtnWatch = (item) => {\r\n    let data = {\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      email: item.patientData.email,\r\n      timeType: item.timeType,\r\n      patientName: item.patientData.lastName,\r\n    };\r\n    this.setState({\r\n      isOpenRemedyModal: true,\r\n      isOpenWatchPatient: true,\r\n      dataModel: data,\r\n      idPatient:item.patientId\r\n    });\r\n    console.log(\"data\", data);\r\n  };\r\n\r\n  closeRemedyClose = () => {\r\n    this.setState({\r\n      isOpenRemedyModal: false,\r\n      isOpenWatchPatient: false,\r\n      dataModel: {},\r\n    });\r\n  };\r\n  sendPrescription = async (dataChild) => {\r\n    let { dataModel } = this.state;\r\n    this.setState({ isShowLoading: true });\r\n    let res = await postSendPrescription({\r\n      email: dataChild.email,\r\n      imgBase64: dataChild.imgBase64,\r\n      doctorId: dataModel.doctorId,\r\n      patientId: dataModel.patientId,\r\n      timeType: dataModel.timeType,\r\n      language: this.props.language,\r\n      patientName: dataModel.patientName,\r\n\r\n      // ...dataChild,\r\n    });\r\n    console.log(\"res,\", res);\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Send gmail Success !\");\r\n      this.setState({ isShowLoading: false });\r\n      this.closeRemedyClose();\r\n      await this.getDatePatient();\r\n    } else {\r\n      toast.error(\"Send error message.....\");\r\n      this.setState({ isShowLoading: false });\r\n    }\r\n  };\r\n  render() {\r\n    let toDay = new Date();\r\n    let toDayString =\r\n      toDay.getDate() +\r\n      \"/\" +\r\n      (toDay.getMonth() + 1) +\r\n      \"/\" +\r\n      toDay.getFullYear();\r\n    let { language } = this.props;\r\n    let { dataPatient, isOpenRemedyModal, dataModel,isOpenWatchPatient,idPatient } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <LoadingOverlay\r\n          active={this.state.isShowLoading}\r\n          spinner\r\n          text=\"Loading...\"\r\n        >\r\n          <div className=\"manage-patient-container\">\r\n            <div className=\"manage-patient-title\">Quản lý Đơn thuốc</div>\r\n            <div className=\"manage-patient-body  row\">\r\n              <div className=\"col-4 form-group\" style={{ color: \"white\" }}>\r\n                <h3> Hôm nay là:</h3>\r\n                <DatePicker\r\n                  onChange={this.handleChangeDate}\r\n                  className=\"form-control\"\r\n                  value={this.state.currentDate}\r\n                  minDate={toDayString}\r\n                  maxDate={toDayString}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 table-manage-patient\">\r\n                <section>\r\n                  <h1>Table Patient</h1>\r\n                  <div className=\"tbl-header\">\r\n                    <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>STT</th>\r\n                          <th>Thời gian</th>\r\n                          <th>Họ và Tên</th>\r\n                          <th>Địa chỉ</th>\r\n                          <th>Giới Tính</th>\r\n                          <th className=\"two\">Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                    </table>\r\n                  </div>\r\n\r\n                  {dataPatient && dataPatient.length > 0 ? (\r\n                    dataPatient.map((item, index) => {\r\n                      let time =\r\n                        language === LANGUAGES.VI\r\n                          ? item.timeTypeDataPatient.valueVi\r\n                          : item.timeTypeDataPatient.valueEn;\r\n                      let gender =\r\n                        language === LANGUAGES.VI\r\n                          ? item.patientData.genderData.valueVi\r\n                          : item.patientData.genderData.valueEn;\r\n                      return (\r\n                        <div className=\"tbl-content\">\r\n                          <table>\r\n                            <tbody>\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td> {time}</td>\r\n                                <td> {item.patientData.lastName}</td>\r\n                                <td>{item.patientData.address}</td>\r\n                                <td>{gender}</td>\r\n\r\n                                <td className=\"one\">\r\n                                  <button\r\n                                    className=\"btn btn-warning\"\r\n                                   onClick={() => this.handleBtnWatch(item)}\r\n                                  >\r\n                                    See more\r\n                                  </button>\r\n                                </td>\r\n                                <td className=\"one\">\r\n                                  <button\r\n                                    className=\"btn btn-confirm\"\r\n                                    onClick={() => this.handleBtnConfirm(item)}\r\n                                  >\r\n                                    Gửi đơn thuốc\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <div className=\"tbl-content\">\r\n                      <table>\r\n                        <tbody>\r\n                          <tr>\r\n                            <h1>NO DATA</h1>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  )}\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <PrescriptionModel\r\n            isOpenModal={isOpenRemedyModal}\r\n            dataModel={dataModel}\r\n            closeRemedyClose={this.closeRemedyClose}\r\n            sendRemedy={this.sendPrescription}\r\n          />\r\n           <WatchPrescripttionModel\r\n              isOpenModal={isOpenWatchPatient}\r\n            // isOpenModal={isOpenRemedyModal}\r\n            dataModel={dataPatient}\r\n            closeRemedyClose={this.closeRemedyClose}\r\n            sendRemedy={this.sendPrescription}\r\n            dataIdShow={idPatient}\r\n          />\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    user: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePrescription);\r\n"]},"metadata":{},"sourceType":"module"}