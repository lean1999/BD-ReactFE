{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\reactFE\\\\src\\\\containers\\\\HomePage\\\\Section\\\\MedicalFacility.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Slider from \"react-slick\";\nimport { getAllClinic } from \"../../../services/userService\";\nimport { withRouter } from \"react-router\";\nimport Footer from \"../../Footer\"; // import \"./MedicalFacility.scss\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MedicalFacility extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleViewDetailClinic = clinic => {\n      if (this.props.history) {\n        this.props.history.push(`/detail-clinic/${clinic.id}`);\n      }\n    };\n\n    this.state = {\n      dataClinic: []\n    };\n  }\n\n  async componentDidMount() {\n    let res = await getAllClinic();\n\n    if (res && res.errCode === 0) {\n      this.setState({\n        dataClinic: res.data ? res.data : []\n      });\n    }\n  }\n\n  render() {\n    let {\n      dataClinic\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-share section-medical-facility\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title-section\",\n            children: [\" \", \"C\\u01A1 S\\u1EDF Y T\\u1EBF N\\u1ED5i B\\u1EADt\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"border-load-outstanding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-section\",\n            children: [\" \", \"Xem th\\xEAm\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          href: \"#\",\n          className: \"section-content\",\n          children: /*#__PURE__*/_jsxDEV(Slider, { ...this.props.settings,\n            children: dataClinic && dataClinic.length > 0 && dataClinic.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-customize\",\n                onClick: () => this.handleViewDetailClinic(item),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"img-bg section-medical-facility \",\n                  style: {\n                    backgroundImage: `url(\"${item.image}\")`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"dt-name\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MedicalFacility));","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/reactFE/src/containers/HomePage/Section/MedicalFacility.js"],"names":["React","Component","connect","Slider","getAllClinic","withRouter","Footer","MedicalFacility","constructor","props","handleViewDetailClinic","clinic","history","push","id","state","dataClinic","componentDidMount","res","errCode","setState","data","render","settings","length","map","item","index","backgroundImage","image","name","mapStateToProps","isLoggedIn","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nimport { getAllClinic } from \"../../../services/userService\";\r\nimport { withRouter } from \"react-router\";\r\nimport Footer from \"../../Footer\";\r\n// import \"./MedicalFacility.scss\";\r\nclass MedicalFacility extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataClinic: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    let res = await getAllClinic();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        dataClinic: res.data ? res.data : [],\r\n      });\r\n    }\r\n  }\r\n\r\n  handleViewDetailClinic = (clinic) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-clinic/${clinic.id}`);\r\n    }\r\n  };\r\n  render() {\r\n    let { dataClinic } = this.state;\r\n    return (\r\n      <div className=\"section-share section-medical-facility\">\r\n        <div className=\"section-container\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\">\r\n              {\" \"}\r\n              Cơ Sở Y Tế Nổi Bật\r\n              <span className=\"border-load-outstanding\"></span>\r\n            </span>\r\n\r\n            <button type=\"button\" className=\"btn-section\">\r\n              {\" \"}\r\n              Xem thêm\r\n            </button>\r\n          </div>\r\n          <div href=\"#\" className=\"section-content\">\r\n            <Slider {...this.props.settings}>\r\n              {dataClinic &&\r\n                dataClinic.length > 0 &&\r\n                dataClinic.map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      className=\"section-customize\"\r\n                      key={index}\r\n                      onClick={() => this.handleViewDetailClinic(item)}\r\n                    >\r\n                      <div\r\n                        className=\"img-bg section-medical-facility \"\r\n                        style={{\r\n                          backgroundImage: `url(\"${item.image}\")`,\r\n                        }}\r\n                      />\r\n                      <span className=\"dt-name\">{item.name}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(MedicalFacility)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}