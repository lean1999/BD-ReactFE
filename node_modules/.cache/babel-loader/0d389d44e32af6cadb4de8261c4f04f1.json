{"ast":null,"code":"import actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  isLoadingGender: false,\n  genders: [],\n  roles: [],\n  positions: [],\n  users: [],\n  topDoctors: [],\n  allDoctors: [],\n  allScheduleTime: [],\n  allRequiredDoctorInfo: []\n};\n\nconst adminReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_GENDER_START:\n      let copyState = { ...state\n      };\n      copyState.isLoadingGender = true;\n      return { ...copyState\n      };\n\n    case actionTypes.FETCH_GENDER_SUCCESS:\n      state.genders = action.data;\n      state.isLoadingGender = false;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_GENDER_FAILED:\n      state.isLoadingGender = false;\n      state.genders = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_POSITION_SUCCESS:\n      state.positions = action.data;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_POSITION_FAILED:\n      state.positions = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ROLE_SUCCESS:\n      state.roles = action.data;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ROLE_FAILED:\n      state.roles = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_USER_SUCCESS:\n      state.users = action.users;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_USER_FAILED:\n      state.users = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_TOP_DOCTOR_SUCCESS:\n      state.topDoctors = action.dataDoctor;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_TOP_DOCTOR_FAILED:\n      state.topDoctors = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_DOCTOR_SUCCESS:\n      state.allDoctors = action.dataDoctors;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_DOCTOR_FAILED:\n      state.allDoctors = [];\n      return { ...state\n      };\n\n    case actionTypes.SAVE_ALL_SCHEDULE_TIME_SUCCESS:\n      state.allScheduleTime = action.dataTime;\n      return { ...state\n      };\n\n    case actionTypes.SAVE_ALL_SCHEDULE_TIME_FAILED:\n      state.allScheduleTime = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFO_SUCCESS:\n      state.allRequiredDoctorInfo = action.data;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFO_FAILED:\n      state.allRequiredDoctorInfo = [];\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default adminReducer;","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/reactFE/src/store/reducers/adminReducer.js"],"names":["actionTypes","initialState","isLoadingGender","genders","roles","positions","users","topDoctors","allDoctors","allScheduleTime","allRequiredDoctorInfo","adminReducer","state","action","type","FETCH_GENDER_START","copyState","FETCH_GENDER_SUCCESS","data","FETCH_GENDER_FAILED","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILED","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAILED","FETCH_ALL_USER_SUCCESS","FETCH_ALL_USER_FAILED","FETCH_TOP_DOCTOR_SUCCESS","dataDoctor","FETCH_TOP_DOCTOR_FAILED","FETCH_ALL_DOCTOR_SUCCESS","dataDoctors","FETCH_ALL_DOCTOR_FAILED","SAVE_ALL_SCHEDULE_TIME_SUCCESS","dataTime","SAVE_ALL_SCHEDULE_TIME_FAILED","FETCH_REQUIRED_DOCTOR_INFO_SUCCESS","FETCH_REQUIRED_DOCTOR_INFO_FAILED"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,KADE;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,SAAS,EAAE,EAJQ;AAKnBC,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,UAAU,EAAE,EANO;AAOnBC,EAAAA,UAAU,EAAE,EAPO;AAQnBC,EAAAA,eAAe,EAAE,EARE;AASnBC,EAAAA,qBAAqB,EAAE;AATJ,CAArB;;AAYA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,WAAW,CAACe,kBAAjB;AACE,UAAIC,SAAS,GAAG,EAAE,GAAGJ;AAAL,OAAhB;AACAI,MAAAA,SAAS,CAACd,eAAV,GAA4B,IAA5B;AACA,aAAO,EACL,GAAGc;AADE,OAAP;;AAGF,SAAKhB,WAAW,CAACiB,oBAAjB;AACEL,MAAAA,KAAK,CAACT,OAAN,GAAgBU,MAAM,CAACK,IAAvB;AACAN,MAAAA,KAAK,CAACV,eAAN,GAAwB,KAAxB;AACA,aAAO,EACL,GAAGU;AADE,OAAP;;AAGF,SAAKZ,WAAW,CAACmB,mBAAjB;AACEP,MAAAA,KAAK,CAACV,eAAN,GAAwB,KAAxB;AACAU,MAAAA,KAAK,CAACT,OAAN,GAAgB,EAAhB;AACA,aAAO,EACL,GAAGS;AADE,OAAP;;AAGF,SAAKZ,WAAW,CAACoB,sBAAjB;AACER,MAAAA,KAAK,CAACP,SAAN,GAAkBQ,MAAM,CAACK,IAAzB;AACA,aAAO,EACL,GAAGN;AADE,OAAP;;AAGF,SAAKZ,WAAW,CAACqB,qBAAjB;AACET,MAAAA,KAAK,CAACP,SAAN,GAAkB,EAAlB;AACA,aAAO,EACL,GAAGO;AADE,OAAP;;AAGF,SAAKZ,WAAW,CAACsB,kBAAjB;AACEV,MAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACK,IAArB;AACA,aAAO,EACL,GAAGN;AADE,OAAP;;AAGF,SAAKZ,WAAW,CAACuB,iBAAjB;AACEX,MAAAA,KAAK,CAACR,KAAN,GAAc,EAAd;AACA,aAAO,EACL,GAAGQ;AADE,OAAP;;AAIF,SAAKZ,WAAW,CAACwB,sBAAjB;AACEZ,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACP,KAArB;AACA,aAAO,EACL,GAAGM;AADE,OAAP;;AAIF,SAAKZ,WAAW,CAACyB,qBAAjB;AACEb,MAAAA,KAAK,CAACN,KAAN,GAAc,EAAd;AACA,aAAO,EACL,GAAGM;AADE,OAAP;;AAIF,SAAKZ,WAAW,CAAC0B,wBAAjB;AACEd,MAAAA,KAAK,CAACL,UAAN,GAAmBM,MAAM,CAACc,UAA1B;AACA,aAAO,EACL,GAAGf;AADE,OAAP;;AAIF,SAAKZ,WAAW,CAAC4B,uBAAjB;AACEhB,MAAAA,KAAK,CAACL,UAAN,GAAmB,EAAnB;AACA,aAAO,EACL,GAAGK;AADE,OAAP;;AAIF,SAAKZ,WAAW,CAAC6B,wBAAjB;AACEjB,MAAAA,KAAK,CAACJ,UAAN,GAAmBK,MAAM,CAACiB,WAA1B;AACA,aAAO,EACL,GAAGlB;AADE,OAAP;;AAIF,SAAKZ,WAAW,CAAC+B,uBAAjB;AACEnB,MAAAA,KAAK,CAACJ,UAAN,GAAmB,EAAnB;AACA,aAAO,EACL,GAAGI;AADE,OAAP;;AAIF,SAAKZ,WAAW,CAACgC,8BAAjB;AACEpB,MAAAA,KAAK,CAACH,eAAN,GAAwBI,MAAM,CAACoB,QAA/B;AACA,aAAO,EACL,GAAGrB;AADE,OAAP;;AAIF,SAAKZ,WAAW,CAACkC,6BAAjB;AACEtB,MAAAA,KAAK,CAACH,eAAN,GAAwB,EAAxB;AACA,aAAO,EACL,GAAGG;AADE,OAAP;;AAIF,SAAKZ,WAAW,CAACmC,kCAAjB;AACEvB,MAAAA,KAAK,CAACF,qBAAN,GAA8BG,MAAM,CAACK,IAArC;AACA,aAAO,EACL,GAAGN;AADE,OAAP;;AAIF,SAAKZ,WAAW,CAACoC,iCAAjB;AACExB,MAAAA,KAAK,CAACF,qBAAN,GAA8B,EAA9B;AACA,aAAO,EACL,GAAGE;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AApGJ;AAsGD,CAvGD;;AAwGA,eAAeD,YAAf","sourcesContent":["import actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoadingGender: false,\r\n  genders: [],\r\n  roles: [],\r\n  positions: [],\r\n  users: [],\r\n  topDoctors: [],\r\n  allDoctors: [],\r\n  allScheduleTime: [],\r\n  allRequiredDoctorInfo: [],\r\n};\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_GENDER_START:\r\n      let copyState = { ...state };\r\n      copyState.isLoadingGender = true;\r\n      return {\r\n        ...copyState,\r\n      };\r\n    case actionTypes.FETCH_GENDER_SUCCESS:\r\n      state.genders = action.data;\r\n      state.isLoadingGender = false;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_GENDER_FAILED:\r\n      state.isLoadingGender = false;\r\n      state.genders = [];\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_POSITION_SUCCESS:\r\n      state.positions = action.data;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_POSITION_FAILED:\r\n      state.positions = [];\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_ROLE_SUCCESS:\r\n      state.roles = action.data;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_ROLE_FAILED:\r\n      state.roles = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_ALL_USER_SUCCESS:\r\n      state.users = action.users;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_ALL_USER_FAILED:\r\n      state.users = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_TOP_DOCTOR_SUCCESS:\r\n      state.topDoctors = action.dataDoctor;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_TOP_DOCTOR_FAILED:\r\n      state.topDoctors = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_ALL_DOCTOR_SUCCESS:\r\n      state.allDoctors = action.dataDoctors;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_ALL_DOCTOR_FAILED:\r\n      state.allDoctors = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.SAVE_ALL_SCHEDULE_TIME_SUCCESS:\r\n      state.allScheduleTime = action.dataTime;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.SAVE_ALL_SCHEDULE_TIME_FAILED:\r\n      state.allScheduleTime = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFO_SUCCESS:\r\n      state.allRequiredDoctorInfo = action.data;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFO_FAILED:\r\n      state.allRequiredDoctorInfo = [];\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default adminReducer;\r\n"]},"metadata":{},"sourceType":"module"}