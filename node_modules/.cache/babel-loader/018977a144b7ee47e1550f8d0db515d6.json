{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\ReactFE\\\\src\\\\containers\\\\System\\\\Admin\\\\ManageDoctor.js\";\nimport React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions\";\nimport { LANGUAGES, CRUD_ACTIONS } from \"../../../utils\";\nimport MarkdownIt from \"markdown-it\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport \"./ManageDoctor.scss\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport { getDetailInfoDoctor } from \"../../../services/userService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mdParser = new MarkdownIt(); // Finish!\n\nclass ManageDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buildDataInputSelect = (inputData, type) => {\n      let result = [];\n      let language = this.props.language;\n\n      if (inputData && inputData.length > 0) {\n        if (type === \"USER\") {\n          inputData.map((item, index) => {\n            let object = {};\n            let labelVi = ` ${item.lastName} ${item.firstName}`;\n            let labelEn = ` ${item.firstName} ${item.lastName}`;\n            object.label = language === LANGUAGES.VI ? labelVi : labelEn;\n            object.value = item.id;\n            result.push(object);\n          });\n        }\n\n        if (type === \"PRICE\") {\n          inputData.map((item, index) => {\n            let object = {};\n            let labelVi = `${item.valueVi} VND`;\n            let labelEn = `${item.valueEn} USD`;\n            object.label = language === LANGUAGES.VI ? labelVi : labelEn;\n            object.value = item.keyMap;\n            result.push(object); // console.log(\"item price\", item);\n          });\n        }\n\n        if (type === \"PAYMENT\") {\n          inputData.map((item, index) => {\n            let object = {};\n            let labelVi = `${item.valueVi}`;\n            let labelEn = `${item.valueEn}`;\n            object.label = language === LANGUAGES.VI ? labelVi : labelEn;\n            object.value = item.keyMap;\n            result.push(object); // console.log(\"item payment\", item);\n          });\n        }\n\n        if (type === \"PROVINCE\") {\n          inputData.map((item, index) => {\n            let object = {};\n            let labelVi = `${item.valueVi}`;\n            let labelEn = `${item.valueEn}`;\n            object.label = language === LANGUAGES.VI ? labelVi : labelEn;\n            object.value = item.keyMap;\n            result.push(object);\n          });\n        }\n\n        if (type === \"SPECIALTY\") {\n          inputData.map((item, index) => {\n            let object = {};\n            object.label = item.name;\n            object.value = item.id;\n            result.push(object);\n            console.log(\"item specialty\", item);\n          });\n        }\n\n        if (type === \"CLINIC\") {\n          inputData.map((item, index) => {\n            let object = {};\n            object.label = item.name;\n            object.value = item.id;\n            result.push(object);\n            console.log(\"item clinic\", item);\n          });\n        }\n      }\n\n      return result;\n    };\n\n    this.handleEditorChange = ({\n      html,\n      text\n    }) => {\n      this.setState({\n        contentMarkdown: text,\n        contentHTML: html\n      });\n    };\n\n    this.handleSaveContentMarkdown = () => {\n      let {\n        hasOldData\n      } = this.state;\n      this.props.saveDetailDoctor({\n        contentHTML: this.state.contentHTML,\n        contentMarkdown: this.state.contentMarkdown,\n        description: this.state.description,\n        doctorId: this.state.selectedOption.value,\n        action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\n        selectedPrice: this.state.selectedPrice.value,\n        selectedPayment: this.state.selectedPayment.value,\n        selectedProvince: this.state.selectedProvince.value,\n        nameClinic: this.state.nameClinic,\n        addressClinic: this.state.addressClinic,\n        note: this.state.note,\n        clinicId: this.state.selectedClinic && this.state.selectedClinic.value ? this.state.selectedClinic.value : \"\",\n        specialtyId: this.state.selectedSpecialty.value\n      });\n    };\n\n    this.handleChangeSelect = async selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      let {\n        listPayment,\n        listPrice,\n        listProvince,\n        listSpecialty,\n        listClinic\n      } = this.state;\n      let res = await getDetailInfoDoctor(selectedOption.value);\n\n      if (res && res.errCode === 0 && res.data && res.data.Markdown) {\n        let markdown = res.data.Markdown;\n        let addressClinic = \"\",\n            nameClinic = \"\",\n            note = \"\",\n            paymentId = \"\",\n            priceId = \"\",\n            provinceId = \"\",\n            specialtyId = \"\",\n            clinicId,\n            selectedPayment = \"\",\n            selectedPrice = \"\",\n            selectedProvince = \"\",\n            selectedSpecialty = \"\",\n            selectedClinic = \"\";\n\n        if (res.data.Doctor_Info) {\n          addressClinic = res.data.Doctor_Info.addressClinic;\n          nameClinic = res.data.Doctor_Info.nameClinic;\n          note = res.data.Doctor_Info.note;\n          paymentId = res.data.Doctor_Info.paymentId;\n          priceId = res.data.Doctor_Info.priceId;\n          provinceId = res.data.Doctor_Info.provinceId;\n          specialtyId = res.data.Doctor_Info.specialtyId;\n          clinicId = res.data.Doctor_Info.clinicId;\n          selectedPayment = listPayment.find(item => {\n            return item && item.value === paymentId;\n          });\n          console.log(\"check find array\", selectedPayment, listPayment, paymentId);\n          selectedPrice = listPrice.find(item => {\n            return item && item.value === priceId;\n          });\n          console.log(\"check find array\", selectedPrice, listPrice, priceId);\n          selectedProvince = listProvince.find(item => {\n            return item && item.value === provinceId;\n          });\n          selectedSpecialty = listSpecialty.find(item => {\n            return item && item.value === specialtyId;\n          });\n          selectedClinic = listClinic.find(item => {\n            return item && item.value === clinicId;\n          });\n          console.log(\"check find array\", selectedProvince, listProvince, provinceId);\n        }\n\n        this.setState({\n          contentHTML: markdown.contentHTML,\n          contentMarkdown: markdown.contentMarkdown,\n          description: markdown.description,\n          hasOldData: true,\n          addressClinic: addressClinic,\n          nameClinic: nameClinic,\n          note: note,\n          selectedPayment: selectedPayment,\n          selectedPrice: selectedPrice,\n          selectedProvince: selectedProvince,\n          selectedSpecialty: selectedSpecialty,\n          selectedClinic: selectedClinic\n        });\n      } else {\n        this.setState({\n          contentHTML: \"\",\n          contentMarkdown: \"\",\n          description: \"\",\n          hasOldData: false,\n          addressClinic: \"\",\n          nameClinic: \"\",\n          note: \"\",\n          selectedPayment: \"\",\n          selectedPrice: \"\",\n          selectedProvince: \"\",\n          selectedSpecialty: \"\",\n          selectedClinic: \"\"\n        });\n      }\n    };\n\n    this.handleChangeSelectDoctorInfo = async (selectedOption, name) => {\n      let stateName = name.name;\n      let stateCopy = { ...this.state\n      };\n      stateCopy[stateName] = selectedOption;\n      this.setState({ ...stateCopy\n      });\n      console.log(\"select oop, name\", selectedOption, stateName, stateCopy);\n    };\n\n    this.handleOnChangeText = (event, id) => {\n      let stateCopy = { ...this.state\n      };\n      stateCopy[id] = event.target.value;\n      this.setState({ ...stateCopy\n      });\n    };\n\n    this.state = {\n      contentMarkdown: \"\",\n      contentHTML: \"\",\n      selectedOption: \"\",\n      description: \"\",\n      listDoctor: [],\n      hasOldData: false,\n      //save to doctor table\n      listPrice: [],\n      listPayment: [],\n      listProvince: [],\n      listClinic: [],\n      listSpecialty: [],\n      selectedPrice: \"\",\n      selectedPayment: \"\",\n      selectedProvince: \"\",\n      selectedClinic: \"\",\n      selectedSpecialty: \"\",\n      nameClinic: \"\",\n      addressClinic: \"\",\n      note: \"\",\n      clinicId: \"\",\n      specialtyId: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllDoctorsRedux();\n    this.props.getRequiredDoctorInfo();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.allDoctors !== this.props.allDoctors) {\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors, \"USER\");\n      this.setState({\n        listDoctor: dataSelect\n      });\n    }\n\n    if (prevProps.language !== this.props.language) {\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors);\n      let {\n        resPayment,\n        resPrice,\n        resProvince\n      } = this.props.allRequiredDoctorInfo;\n      let dataSelectPrice = this.buildDataInputSelect(resPrice, \"PRICE\");\n      let dataSelectPayment = this.buildDataInputSelect(resPayment, \"PAYMENT\");\n      this.setState({\n        listDoctor: dataSelect,\n        listPrice: dataSelectPrice,\n        listPayment: dataSelectPayment\n      });\n    }\n\n    if (prevProps.allRequiredDoctorInfo !== this.props.allRequiredDoctorInfo) {\n      let {\n        resPayment,\n        resPrice,\n        resProvince,\n        resSpecialty,\n        resClinic\n      } = this.props.allRequiredDoctorInfo;\n      let dataSelectPrice = this.buildDataInputSelect(resPrice, \"PRICE\");\n      let dataSelectPayment = this.buildDataInputSelect(resPayment, \"PAYMENT\");\n      let dataSelectProvince = this.buildDataInputSelect(resProvince, \"PROVINCE\");\n      let dataSelectSpecialty = this.buildDataInputSelect(resSpecialty, \"SPECIALTY\");\n      let dataSelectClinic = this.buildDataInputSelect(resClinic, \"CLINIC\");\n      console.log(\"resProvince\", resProvince);\n      console.log(\"dataSelectProvince\", dataSelectProvince);\n      console.log(\"dataSelectSpecialty\", dataSelectSpecialty);\n      this.setState({\n        listPrice: dataSelectPrice,\n        listPayment: dataSelectPayment,\n        listProvince: dataSelectProvince,\n        listSpecialty: dataSelectSpecialty,\n        listClinic: dataSelectClinic\n      });\n    }\n  }\n\n  render() {\n    let {\n      hasOldData,\n      listSpecialty\n    } = this.state; // console.log(\"render\", this.state);\n\n    console.log(\"check state\", this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-doctor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-title\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"admin.manage-doctor.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-left form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.select-doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedOption,\n            onChange: this.handleChangeSelect,\n            options: this.state.listDoctor,\n            placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.select-doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.info-doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            rows: \"5\",\n            onChange: event => this.handleOnChangeText(event, \"description\"),\n            value: this.state.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-info-extra row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedPrice,\n            onChange: this.handleChangeSelectDoctorInfo,\n            options: this.state.listPrice,\n            placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 28\n            }, this),\n            name: \"selectedPrice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedPayment,\n            onChange: this.handleChangeSelectDoctorInfo,\n            options: this.state.listPayment,\n            placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this),\n            name: \"selectedPayment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.province\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedProvince,\n            onChange: this.handleChangeSelectDoctorInfo,\n            options: this.state.listProvince,\n            placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.province\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this),\n            name: \"selectedProvince\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.nameClinic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            onChange: event => this.handleOnChangeText(event, \"nameClinic\"),\n            value: this.state.nameClinic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.addressClinic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            onChange: event => this.handleOnChangeText(event, \"addressClinic\"),\n            value: this.state.addressClinic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            onChange: event => this.handleOnChangeText(event, \"note\"),\n            value: this.state.note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.specialty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: this.state.selectedSpecialty,\n              onChange: this.handleChangeSelectDoctorInfo,\n              name: \"selectedSpecialty\",\n              options: this.state.listSpecialty,\n              placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.specialty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.clinic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: this.state.selectedClinic,\n              onChange: this.handleChangeSelectDoctorInfo,\n              name: \"selectedClinic\",\n              options: this.state.listClinic,\n              placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"admin.manage-doctor.clinic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"admin.manage-doctor.biography-doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: \"300px\"\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: this.handleEditorChange,\n          value: this.state.contentMarkdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleSaveContentMarkdown(),\n        className: hasOldData === true ? \"save-content-doctor\" : \"create-content-doctor\",\n        children: hasOldData === true ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"admin.manage-doctor.save-info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"admin.manage-doctor.create-info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allDoctors: state.admin.allDoctors,\n    language: state.app.language,\n    allRequiredDoctorInfo: state.admin.allRequiredDoctorInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllDoctorsRedux: id => dispatch(actions.fetchAllDoctors(id)),\n    getRequiredDoctorInfo: () => dispatch(actions.getRequiredDoctorInfo()),\n    saveDetailDoctor: data => dispatch(actions.saveDetailDoctor(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/ReactFE/src/containers/System/Admin/ManageDoctor.js"],"names":["React","Component","FormattedMessage","connect","actions","LANGUAGES","CRUD_ACTIONS","MarkdownIt","MdEditor","moment","Select","getDetailInfoDoctor","mdParser","ManageDoctor","constructor","props","buildDataInputSelect","inputData","type","result","language","length","map","item","index","object","labelVi","lastName","firstName","labelEn","label","VI","value","id","push","valueVi","valueEn","keyMap","name","console","log","handleEditorChange","html","text","setState","contentMarkdown","contentHTML","handleSaveContentMarkdown","hasOldData","state","saveDetailDoctor","description","doctorId","selectedOption","action","EDIT","CREATE","selectedPrice","selectedPayment","selectedProvince","nameClinic","addressClinic","note","clinicId","selectedClinic","specialtyId","selectedSpecialty","handleChangeSelect","listPayment","listPrice","listProvince","listSpecialty","listClinic","res","errCode","data","Markdown","markdown","paymentId","priceId","provinceId","Doctor_Info","find","handleChangeSelectDoctorInfo","stateName","stateCopy","handleOnChangeText","event","target","listDoctor","componentDidMount","fetchAllDoctorsRedux","getRequiredDoctorInfo","componentDidUpdate","prevProps","prevState","snapshot","allDoctors","dataSelect","resPayment","resPrice","resProvince","allRequiredDoctorInfo","dataSelectPrice","dataSelectPayment","resSpecialty","resClinic","dataSelectProvince","dataSelectSpecialty","dataSelectClinic","render","height","mapStateToProps","admin","app","mapDispatchToProps","dispatch","fetchAllDoctors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { LANGUAGES, CRUD_ACTIONS } from \"../../../utils\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport \"./ManageDoctor.scss\";\r\nimport moment from \"moment\";\r\nimport Select from \"react-select\";\r\nimport { getDetailInfoDoctor } from \"../../../services/userService\";\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n// Finish!\r\n\r\nclass ManageDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contentMarkdown: \"\",\r\n      contentHTML: \"\",\r\n      selectedOption: \"\",\r\n      description: \"\",\r\n      listDoctor: [],\r\n      hasOldData: false,\r\n\r\n      //save to doctor table\r\n      listPrice: [],\r\n      listPayment: [],\r\n      listProvince: [],\r\n      listClinic: [],\r\n      listSpecialty: [],\r\n\r\n      selectedPrice: \"\",\r\n      selectedPayment: \"\",\r\n      selectedProvince: \"\",\r\n\r\n      selectedClinic: \"\",\r\n      selectedSpecialty: \"\",\r\n      nameClinic: \"\",\r\n      addressClinic: \"\",\r\n      note: \"\",\r\n      clinicId: \"\",\r\n      specialtyId: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchAllDoctorsRedux();\r\n    this.props.getRequiredDoctorInfo();\r\n  }\r\n  buildDataInputSelect = (inputData, type) => {\r\n    let result = [];\r\n    let language = this.props.language;\r\n    if (inputData && inputData.length > 0) {\r\n      if (type === \"USER\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          let labelVi = ` ${item.lastName} ${item.firstName}`;\r\n\r\n          let labelEn = ` ${item.firstName} ${item.lastName}`;\r\n\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.id;\r\n          result.push(object);\r\n        });\r\n      }\r\n      if (type === \"PRICE\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          let labelVi = `${item.valueVi} VND`;\r\n          let labelEn = `${item.valueEn} USD`;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.keyMap;\r\n          result.push(object);\r\n          // console.log(\"item price\", item);\r\n        });\r\n      }\r\n      if (type === \"PAYMENT\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          let labelVi = `${item.valueVi}`;\r\n          let labelEn = `${item.valueEn}`;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.keyMap;\r\n          result.push(object);\r\n          // console.log(\"item payment\", item);\r\n        });\r\n      }\r\n      if (type === \"PROVINCE\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          let labelVi = `${item.valueVi}`;\r\n          let labelEn = `${item.valueEn}`;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.keyMap;\r\n          result.push(object);\r\n        });\r\n      }\r\n      if (type === \"SPECIALTY\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          object.label = item.name;\r\n          object.value = item.id;\r\n          result.push(object);\r\n          console.log(\"item specialty\", item);\r\n        });\r\n      }\r\n      if (type === \"CLINIC\") {\r\n        inputData.map((item, index) => {\r\n          let object = {};\r\n          object.label = item.name;\r\n          object.value = item.id;\r\n          result.push(object);\r\n          console.log(\"item clinic\", item);\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.allDoctors !== this.props.allDoctors) {\r\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors, \"USER\");\r\n      this.setState({\r\n        listDoctor: dataSelect,\r\n      });\r\n    }\r\n    if (prevProps.language !== this.props.language) {\r\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors);\r\n      let { resPayment, resPrice, resProvince } =\r\n        this.props.allRequiredDoctorInfo;\r\n      let dataSelectPrice = this.buildDataInputSelect(resPrice, \"PRICE\");\r\n      let dataSelectPayment = this.buildDataInputSelect(resPayment, \"PAYMENT\");\r\n      this.setState({\r\n        listDoctor: dataSelect,\r\n        listPrice: dataSelectPrice,\r\n        listPayment: dataSelectPayment,\r\n      });\r\n    }\r\n    if (prevProps.allRequiredDoctorInfo !== this.props.allRequiredDoctorInfo) {\r\n      let { resPayment, resPrice, resProvince, resSpecialty, resClinic } =\r\n        this.props.allRequiredDoctorInfo;\r\n      let dataSelectPrice = this.buildDataInputSelect(resPrice, \"PRICE\");\r\n      let dataSelectPayment = this.buildDataInputSelect(resPayment, \"PAYMENT\");\r\n      let dataSelectProvince = this.buildDataInputSelect(\r\n        resProvince,\r\n        \"PROVINCE\"\r\n      );\r\n      let dataSelectSpecialty = this.buildDataInputSelect(\r\n        resSpecialty,\r\n        \"SPECIALTY\"\r\n      );\r\n      let dataSelectClinic = this.buildDataInputSelect(resClinic, \"CLINIC\");\r\n      console.log(\"resProvince\", resProvince);\r\n      console.log(\"dataSelectProvince\", dataSelectProvince);\r\n      console.log(\"dataSelectSpecialty\", dataSelectSpecialty);\r\n      this.setState({\r\n        listPrice: dataSelectPrice,\r\n        listPayment: dataSelectPayment,\r\n        listProvince: dataSelectProvince,\r\n        listSpecialty: dataSelectSpecialty,\r\n        listClinic: dataSelectClinic,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      contentMarkdown: text,\r\n      contentHTML: html,\r\n    });\r\n  };\r\n  handleSaveContentMarkdown = () => {\r\n    let { hasOldData } = this.state;\r\n\r\n    this.props.saveDetailDoctor({\r\n      contentHTML: this.state.contentHTML,\r\n      contentMarkdown: this.state.contentMarkdown,\r\n      description: this.state.description,\r\n      doctorId: this.state.selectedOption.value,\r\n      action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\r\n      selectedPrice: this.state.selectedPrice.value,\r\n      selectedPayment: this.state.selectedPayment.value,\r\n      selectedProvince: this.state.selectedProvince.value,\r\n      nameClinic: this.state.nameClinic,\r\n      addressClinic: this.state.addressClinic,\r\n      note: this.state.note,\r\n      clinicId:\r\n        this.state.selectedClinic && this.state.selectedClinic.value\r\n          ? this.state.selectedClinic.value\r\n          : \"\",\r\n      specialtyId: this.state.selectedSpecialty.value,\r\n    });\r\n  };\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    let { listPayment, listPrice, listProvince, listSpecialty, listClinic } =\r\n      this.state;\r\n    let res = await getDetailInfoDoctor(selectedOption.value);\r\n    if (res && res.errCode === 0 && res.data && res.data.Markdown) {\r\n      let markdown = res.data.Markdown;\r\n      let addressClinic = \"\",\r\n        nameClinic = \"\",\r\n        note = \"\",\r\n        paymentId = \"\",\r\n        priceId = \"\",\r\n        provinceId = \"\",\r\n        specialtyId = \"\",\r\n        clinicId,\r\n        selectedPayment = \"\",\r\n        selectedPrice = \"\",\r\n        selectedProvince = \"\",\r\n        selectedSpecialty = \"\",\r\n        selectedClinic = \"\";\r\n\r\n      if (res.data.Doctor_Info) {\r\n        addressClinic = res.data.Doctor_Info.addressClinic;\r\n        nameClinic = res.data.Doctor_Info.nameClinic;\r\n        note = res.data.Doctor_Info.note;\r\n        paymentId = res.data.Doctor_Info.paymentId;\r\n        priceId = res.data.Doctor_Info.priceId;\r\n        provinceId = res.data.Doctor_Info.provinceId;\r\n        specialtyId = res.data.Doctor_Info.specialtyId;\r\n\r\n        clinicId = res.data.Doctor_Info.clinicId;\r\n        selectedPayment = listPayment.find((item) => {\r\n          return item && item.value === paymentId;\r\n        });\r\n        console.log(\r\n          \"check find array\",\r\n          selectedPayment,\r\n          listPayment,\r\n          paymentId\r\n        );\r\n        selectedPrice = listPrice.find((item) => {\r\n          return item && item.value === priceId;\r\n        });\r\n        console.log(\"check find array\", selectedPrice, listPrice, priceId);\r\n        selectedProvince = listProvince.find((item) => {\r\n          return item && item.value === provinceId;\r\n        });\r\n        selectedSpecialty = listSpecialty.find((item) => {\r\n          return item && item.value === specialtyId;\r\n        });\r\n        selectedClinic = listClinic.find((item) => {\r\n          return item && item.value === clinicId;\r\n        });\r\n\r\n        console.log(\r\n          \"check find array\",\r\n          selectedProvince,\r\n          listProvince,\r\n          provinceId\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        contentHTML: markdown.contentHTML,\r\n        contentMarkdown: markdown.contentMarkdown,\r\n        description: markdown.description,\r\n        hasOldData: true,\r\n        addressClinic: addressClinic,\r\n        nameClinic: nameClinic,\r\n        note: note,\r\n        selectedPayment: selectedPayment,\r\n        selectedPrice: selectedPrice,\r\n        selectedProvince: selectedProvince,\r\n        selectedSpecialty: selectedSpecialty,\r\n        selectedClinic: selectedClinic,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        contentHTML: \"\",\r\n        contentMarkdown: \"\",\r\n        description: \"\",\r\n        hasOldData: false,\r\n        addressClinic: \"\",\r\n        nameClinic: \"\",\r\n        note: \"\",\r\n        selectedPayment: \"\",\r\n        selectedPrice: \"\",\r\n        selectedProvince: \"\",\r\n        selectedSpecialty: \"\",\r\n        selectedClinic: \"\",\r\n      });\r\n    }\r\n  };\r\n  handleChangeSelectDoctorInfo = async (selectedOption, name) => {\r\n    let stateName = name.name;\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[stateName] = selectedOption;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n    console.log(\"select oop, name\", selectedOption, stateName, stateCopy);\r\n  };\r\n\r\n  handleOnChangeText = (event, id) => {\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = event.target.value;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n  };\r\n  render() {\r\n    let { hasOldData, listSpecialty } = this.state;\r\n    // console.log(\"render\", this.state);\r\n    console.log(\"check state\", this.state);\r\n    return (\r\n      <div className=\"manage-doctor-container\">\r\n        <div className=\"manage-doctor-title\">\r\n          {\" \"}\r\n          <FormattedMessage id=\"admin.manage-doctor.title\" />\r\n        </div>\r\n        <div className=\"more-info\">\r\n          <div className=\"content-left form-group\">\r\n            <label>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.select-doctor\" />\r\n            </label>\r\n            <Select\r\n              value={this.state.selectedOption}\r\n              onChange={this.handleChangeSelect}\r\n              options={this.state.listDoctor}\r\n              placeholder={\r\n                <FormattedMessage id=\"admin.manage-doctor.select-doctor\" />\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"content-right\">\r\n            <label className=\"\">\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.info-doctor\" />\r\n            </label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              rows=\"5\"\r\n              onChange={(event) =>\r\n                this.handleOnChangeText(event, \"description\")\r\n              }\r\n              value={this.state.description}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className=\"more-info-extra row\">\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              <FormattedMessage id=\"admin.manage-doctor.price\" />\r\n            </label>\r\n            <Select\r\n              value={this.state.selectedPrice}\r\n              onChange={this.handleChangeSelectDoctorInfo}\r\n              options={this.state.listPrice}\r\n              placeholder={<FormattedMessage id=\"admin.manage-doctor.price\" />}\r\n              name=\"selectedPrice\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              <FormattedMessage id=\"admin.manage-doctor.payment\" />\r\n            </label>\r\n            <Select\r\n              value={this.state.selectedPayment}\r\n              onChange={this.handleChangeSelectDoctorInfo}\r\n              options={this.state.listPayment}\r\n              placeholder={\r\n                <FormattedMessage id=\"admin.manage-doctor.payment\" />\r\n              }\r\n              name=\"selectedPayment\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.province\" />\r\n            </label>\r\n\r\n            <Select\r\n              value={this.state.selectedProvince}\r\n              onChange={this.handleChangeSelectDoctorInfo}\r\n              options={this.state.listProvince}\r\n              placeholder={\r\n                <FormattedMessage id=\"admin.manage-doctor.province\" />\r\n              }\r\n              name=\"selectedProvince\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.nameClinic\" />\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(event) => this.handleOnChangeText(event, \"nameClinic\")}\r\n              value={this.state.nameClinic}\r\n            />\r\n          </div>\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.addressClinic\" />\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(event) =>\r\n                this.handleOnChangeText(event, \"addressClinic\")\r\n              }\r\n              value={this.state.addressClinic}\r\n            />\r\n          </div>\r\n          <div className=\"col-4 form-group\">\r\n            <label>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.note\" />\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(event) => this.handleOnChangeText(event, \"note\")}\r\n              value={this.state.note}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-4 form-group\">\r\n              <label>\r\n                {\" \"}\r\n                <FormattedMessage id=\"admin.manage-doctor.specialty\" />\r\n              </label>\r\n              <Select\r\n                value={this.state.selectedSpecialty}\r\n                onChange={this.handleChangeSelectDoctorInfo}\r\n                name=\"selectedSpecialty\"\r\n                options={this.state.listSpecialty}\r\n                placeholder={\r\n                  <FormattedMessage id=\"admin.manage-doctor.specialty\" />\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-4 form-group\">\r\n              <label>\r\n                <FormattedMessage id=\"admin.manage-doctor.clinic\" />\r\n              </label>\r\n              <Select\r\n                value={this.state.selectedClinic}\r\n                onChange={this.handleChangeSelectDoctorInfo}\r\n                name=\"selectedClinic\"\r\n                options={this.state.listClinic}\r\n                placeholder={\r\n                  <FormattedMessage id=\"admin.manage-doctor.clinic\" />\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"manage-doctor-editor\">\r\n          <label>\r\n            <FormattedMessage id=\"admin.manage-doctor.biography-doctor\" />\r\n          </label>\r\n          <MdEditor\r\n            style={{ height: \"300px\" }}\r\n            renderHTML={(text) => mdParser.render(text)}\r\n            onChange={this.handleEditorChange}\r\n            value={this.state.contentMarkdown}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => this.handleSaveContentMarkdown()}\r\n          className={\r\n            hasOldData === true\r\n              ? \"save-content-doctor\"\r\n              : \"create-content-doctor\"\r\n          }\r\n        >\r\n          {hasOldData === true ? (\r\n            <span>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.save-info\" />\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              {\" \"}\r\n              <FormattedMessage id=\"admin.manage-doctor.create-info\" />\r\n            </span>\r\n          )}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allDoctors: state.admin.allDoctors,\r\n    language: state.app.language,\r\n    allRequiredDoctorInfo: state.admin.allRequiredDoctorInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAllDoctorsRedux: (id) => dispatch(actions.fetchAllDoctors(id)),\r\n    getRequiredDoctorInfo: () => dispatch(actions.getRequiredDoctorInfo()),\r\n    saveDetailDoctor: (data) => dispatch(actions.saveDetailDoctor(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n"]},"metadata":{},"sourceType":"module"}