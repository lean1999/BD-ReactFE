{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\reactFE\\\\src\\\\containers\\\\System\\\\Clinic\\\\ManageClinic.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./ManageClinic.scss\";\nimport MarkdownIt from \"markdown-it\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport { CommonUtils } from \"../../../utils\";\nimport { createNewClinic } from \"../../../services/userService\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mdParser = new MarkdownIt();\n\nclass ManageClinic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChangeInput = (event, id) => {\n      let stateCopy = { ...this.state\n      };\n      stateCopy[id] = event.target.value;\n      this.setState({ ...stateCopy\n      });\n    };\n\n    this.handleEditorChange = ({\n      html,\n      text\n    }) => {\n      this.setState({\n        descriptionHTML: html,\n        descriptionMarkdown: text\n      });\n    };\n\n    this.handleOnChangeImg = async event => {\n      let data = event.target.files;\n      let file = data[0];\n      console.log(file);\n\n      if (file) {\n        let base64 = await CommonUtils.convertBase64(file); //   let objectUrl = URL.createObjectURL(file);\n\n        this.setState({\n          imageBase64: base64\n        });\n      }\n    };\n\n    this.handleSaveNewClinic = async () => {\n      let res = await createNewClinic(this.state);\n      console.log(\"state\", this.state);\n      console.log(\"res\", res);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Success!\");\n        this.setState({\n          name: \"\",\n          address: \"\",\n          imageBase64: \"\",\n          descriptionHTML: \"\",\n          descriptionMarkdown: \"\"\n        });\n      } else {\n        toast.error(\"Error\");\n        console.log(res);\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      address: \"\",\n      imageBase64: \"\",\n      descriptionHTML: \"\",\n      descriptionMarkdown: \"\"\n    };\n  }\n\n  async componentDidMount() {}\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n  }\n\n  render() {\n    console.log(\"state\", this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-specialty-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ms-title\",\n        children: \"Qu\\u1EA3n l\\xFD ph\\xF2ng kh\\xE1m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new-specialty row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"T\\xEAn ph\\xF2ng kh\\xE1m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.name,\n            onChange: event => this.handleOnChangeInput(event, \"name\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u1EA2nh Ph\\xF2ng kh\\xE1m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control-file\",\n            type: \"file\",\n            onChange: event => this.handleOnChangeImg(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0110\\u1ECBa ch\\u1EC9 ph\\xF2ng kh\\xE1m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.address,\n            onChange: event => this.handleOnChangeInput(event, \"address\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12  form-group\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(MdEditor, {\n            style: {\n              height: \"300px\"\n            },\n            renderHTML: text => mdParser.render(text),\n            onChange: this.handleEditorChange,\n            value: this.state.descriptionMarkdown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => this.handleSaveNewClinic(),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageClinic);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/reactFE/src/containers/System/Clinic/ManageClinic.js"],"names":["React","Component","connect","MarkdownIt","MdEditor","CommonUtils","createNewClinic","toast","mdParser","ManageClinic","constructor","props","handleOnChangeInput","event","id","stateCopy","state","target","value","setState","handleEditorChange","html","text","descriptionHTML","descriptionMarkdown","handleOnChangeImg","data","files","file","console","log","base64","convertBase64","imageBase64","handleSaveNewClinic","res","errCode","success","name","address","error","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","language","render","height","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ManageClinic.scss\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport { CommonUtils } from \"../../../utils\";\r\nimport { createNewClinic } from \"../../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\nclass ManageClinic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      address: \"\",\r\n      imageBase64: \"\",\r\n      descriptionHTML: \"\",\r\n      descriptionMarkdown: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {}\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  handleOnChangeInput = (event, id) => {\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = event.target.value;\r\n    this.setState({ ...stateCopy });\r\n  };\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      descriptionHTML: html,\r\n      descriptionMarkdown: text,\r\n    });\r\n  };\r\n\r\n  handleOnChangeImg = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    console.log(file);\r\n    if (file) {\r\n      let base64 = await CommonUtils.convertBase64(file);\r\n      //   let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        imageBase64: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSaveNewClinic = async () => {\r\n    let res = await createNewClinic(this.state);\r\n    console.log(\"state\", this.state);\r\n    console.log(\"res\", res);\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Success!\");\r\n      this.setState({\r\n        name: \"\",\r\n        address: \"\",\r\n        imageBase64: \"\",\r\n        descriptionHTML: \"\",\r\n        descriptionMarkdown: \"\",\r\n      });\r\n    } else {\r\n      toast.error(\"Error\");\r\n      console.log(res);\r\n    }\r\n  };\r\n  render() {\r\n    console.log(\"state\", this.state);\r\n    return (\r\n      <div className=\"manage-specialty-container\">\r\n        <div className=\"ms-title\">Quản lý phòng khám</div>\r\n\r\n        <div className=\"add-new-specialty row\">\r\n          <div className=\"col-6 form-group\">\r\n            <label>Tên phòng khám</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.name}\r\n              onChange={(event) => this.handleOnChangeInput(event, \"name\")}\r\n            />\r\n          </div>\r\n          <div className=\"col-6 form-group\">\r\n            <label>Ảnh Phòng khám</label>\r\n            <input\r\n              className=\"form-control-file\"\r\n              type=\"file\"\r\n              onChange={(event) => this.handleOnChangeImg(event)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-6 form-group\">\r\n            <label>Địa chỉ phòng khám</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.address}\r\n              onChange={(event) => this.handleOnChangeInput(event, \"address\")}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-12  form-group\">\r\n            {\" \"}\r\n            <MdEditor\r\n              style={{ height: \"300px\" }}\r\n              renderHTML={(text) => mdParser.render(text)}\r\n              onChange={this.handleEditorChange}\r\n              value={this.state.descriptionMarkdown}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.handleSaveNewClinic()}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageClinic);\r\n"]},"metadata":{},"sourceType":"module"}