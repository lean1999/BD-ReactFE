{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\ReactFE\\\\src\\\\containers\\\\Patient\\\\Specialty\\\\DetailSpecialty.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport HomeHeader from \"../../HomePage/HomeHeader\";\nimport \"./DetaiSpecialty.scss\";\nimport DoctorSchedule from \"../Doctor/DoctorSchedule\";\nimport DoctorExtraInfor from \"../Doctor/DoctorExtraInfor\";\nimport ProfileDoctor from \"../Doctor/ProfileDoctor\";\nimport { getAllDetailSpecialtyById, getAllCodeService } from \"../../../services/userService\";\nimport _ from \"lodash\";\nimport { LANGUAGES } from \"../../../utils\";\nimport Footer from \"../../Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DetailSpecialty extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChangeSelect = async event => {\n      if (this.props.match && this.props.match.params && this.props.match.params.id) {\n        let id = this.props.match.params.id;\n        let location = event.target.value;\n        let res = await getAllDetailSpecialtyById({\n          id: id,\n          location: location\n        });\n\n        if (res && res.errCode === 0) {\n          let data = res.data;\n          let currentDoctorId = [];\n\n          if (data && !_.isEmpty(res.data)) {\n            let arr = data.doctorSpecialty;\n\n            if (arr && arr.length > 0) {\n              arr.map(item => {\n                currentDoctorId.push(item.doctorId);\n              });\n            }\n          }\n\n          this.setState({\n            dataDetailSpecialty: res.data,\n            currentDoctorId: currentDoctorId\n          });\n        }\n      }\n    };\n\n    this.state = {\n      currentDoctorId: [],\n      dataDetailSpecialty: {},\n      listProvince: []\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.match && this.props.match.params && this.props.match.params.id) {\n      let id = this.props.match.params.id;\n      let res = await getAllDetailSpecialtyById({\n        id: id,\n        location: \"ALL\"\n      });\n      let resProvince = await getAllCodeService(\"PROVINCE\");\n\n      if (res && res.errCode === 0 && resProvince && resProvince.errCode === 0) {\n        let data = res.data;\n        let currentDoctorId = [];\n\n        if (data && !_.isEmpty(res.data)) {\n          let arr = data.doctorSpecialty;\n\n          if (arr && arr.length > 0) {\n            arr.map(item => {\n              currentDoctorId.push(item.doctorId);\n            });\n          }\n        }\n\n        let dataProvince = resProvince.data;\n\n        if (dataProvince && dataProvince.length > 0) {\n          dataProvince.unshift({\n            createdAt: null,\n            keyMap: \"ALL\",\n            type: \"PROVINCE\",\n            updatedAt: null,\n            valueEn: \"ALL\",\n            valueVi: \"Toàn Quốc\"\n          });\n        }\n\n        this.setState({\n          dataDetailSpecialty: res.data,\n          currentDoctorId: currentDoctorId,\n          listProvince: dataProvince ? dataProvince : []\n        });\n      }\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n  }\n\n  render() {\n    let {\n      currentDoctorId,\n      dataDetailSpecialty,\n      listProvince\n    } = this.state;\n    let {\n      language\n    } = this.props;\n    console.log(\"data\", this.state);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-specialty-container\",\n        children: [/*#__PURE__*/_jsxDEV(HomeHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-specialty-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-specialty\",\n            children: dataDetailSpecialty && !_.isEmpty(dataDetailSpecialty) && /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: dataDetailSpecialty.descriptionHTML\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-sp-doctor\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: event => this.handleOnChangeSelect(event),\n              className: \"doctor-select\",\n              children: listProvince && listProvince.length > 0 && listProvince.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.keyMap,\n                  children: language === LANGUAGES.VI ? item.valueVi : item.valueEn\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), currentDoctorId && currentDoctorId.length > 0 && currentDoctorId.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"each-doctor\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dt-content-left\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"profile-doctor\",\n                    children: /*#__PURE__*/_jsxDEV(ProfileDoctor, {\n                      doctorId: item,\n                      isShowDescriptionDoctor: true,\n                      isShowLinkDetail: true,\n                      isShowPrice: false // dataTime={dataTime}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dt-content-right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"doctor-schedule\",\n                    children: /*#__PURE__*/_jsxDEV(DoctorSchedule, {\n                      detailDoctorIdFromParent: item\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"doctor-extra-info\",\n                    children: /*#__PURE__*/_jsxDEV(DoctorExtraInfor, {\n                      doctorIdFromParent: item\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/ReactFE/src/containers/Patient/Specialty/DetailSpecialty.js"],"names":["React","Component","connect","HomeHeader","DoctorSchedule","DoctorExtraInfor","ProfileDoctor","getAllDetailSpecialtyById","getAllCodeService","_","LANGUAGES","Footer","DetailSpecialty","constructor","props","handleOnChangeSelect","event","match","params","id","location","target","value","res","errCode","data","currentDoctorId","isEmpty","arr","doctorSpecialty","length","map","item","push","doctorId","setState","dataDetailSpecialty","state","listProvince","componentDidMount","resProvince","dataProvince","unshift","createdAt","keyMap","type","updatedAt","valueEn","valueVi","componentDidUpdate","prevProps","prevState","snapshot","language","render","console","log","__html","descriptionHTML","index","VI","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from \"../../HomePage/HomeHeader\";\r\nimport \"./DetaiSpecialty.scss\";\r\nimport DoctorSchedule from \"../Doctor/DoctorSchedule\";\r\nimport DoctorExtraInfor from \"../Doctor/DoctorExtraInfor\";\r\nimport ProfileDoctor from \"../Doctor/ProfileDoctor\";\r\nimport {\r\n  getAllDetailSpecialtyById,\r\n  getAllCodeService,\r\n} from \"../../../services/userService\";\r\nimport _ from \"lodash\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport Footer from \"../../Footer\";\r\nclass DetailSpecialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentDoctorId: [],\r\n      dataDetailSpecialty: {},\r\n      listProvince: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let id = this.props.match.params.id;\r\n      let res = await getAllDetailSpecialtyById({\r\n        id: id,\r\n        location: \"ALL\",\r\n      });\r\n\r\n      let resProvince = await getAllCodeService(\"PROVINCE\");\r\n      if (\r\n        res &&\r\n        res.errCode === 0 &&\r\n        resProvince &&\r\n        resProvince.errCode === 0\r\n      ) {\r\n        let data = res.data;\r\n        let currentDoctorId = [];\r\n        if (data && !_.isEmpty(res.data)) {\r\n          let arr = data.doctorSpecialty;\r\n          if (arr && arr.length > 0) {\r\n            arr.map((item) => {\r\n              currentDoctorId.push(item.doctorId);\r\n            });\r\n          }\r\n        }\r\n        let dataProvince = resProvince.data;\r\n        if (dataProvince && dataProvince.length > 0) {\r\n          dataProvince.unshift({\r\n            createdAt: null,\r\n            keyMap: \"ALL\",\r\n            type: \"PROVINCE\",\r\n            updatedAt: null,\r\n            valueEn: \"ALL\",\r\n            valueVi: \"Toàn Quốc\",\r\n          });\r\n        }\r\n        this.setState({\r\n          dataDetailSpecialty: res.data,\r\n          currentDoctorId: currentDoctorId,\r\n          listProvince: dataProvince ? dataProvince : [],\r\n        });\r\n      }\r\n    }\r\n  }\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n  handleOnChangeSelect = async (event) => {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let id = this.props.match.params.id;\r\n      let location = event.target.value;\r\n      let res = await getAllDetailSpecialtyById({\r\n        id: id,\r\n        location: location,\r\n      });\r\n      if (res && res.errCode === 0) {\r\n        let data = res.data;\r\n        let currentDoctorId = [];\r\n        if (data && !_.isEmpty(res.data)) {\r\n          let arr = data.doctorSpecialty;\r\n          if (arr && arr.length > 0) {\r\n            arr.map((item) => {\r\n              currentDoctorId.push(item.doctorId);\r\n            });\r\n          }\r\n        }\r\n        this.setState({\r\n          dataDetailSpecialty: res.data,\r\n          currentDoctorId: currentDoctorId,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    let { currentDoctorId, dataDetailSpecialty, listProvince } = this.state;\r\n    let { language } = this.props;\r\n    console.log(\"data\", this.state);\r\n    return (<>\r\n      <div className=\"detail-specialty-container\">\r\n        <HomeHeader />\r\n        <div className=\"detail-specialty-body\">\r\n          <div className=\"description-specialty\">\r\n            {dataDetailSpecialty && !_.isEmpty(dataDetailSpecialty) && (\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: dataDetailSpecialty.descriptionHTML,\r\n                }}\r\n              ></div>\r\n            )}\r\n          </div>\r\n          <div className=\"search-sp-doctor\">\r\n            <select\r\n              onChange={(event) => this.handleOnChangeSelect(event)}\r\n              className=\"doctor-select\"\r\n            >\r\n              {listProvince &&\r\n                listProvince.length > 0 &&\r\n                listProvince.map((item, index) => {\r\n                  return (\r\n                    <option key={index} value={item.keyMap}>\r\n                      {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          {currentDoctorId &&\r\n            currentDoctorId.length > 0 &&\r\n            currentDoctorId.map((item, index) => {\r\n              return (\r\n                <>\r\n                  <div className=\"each-doctor\" key={index}>\r\n                    <div className=\"dt-content-left\">\r\n                      <div className=\"profile-doctor\">\r\n                        <ProfileDoctor\r\n                          doctorId={item}\r\n                          isShowDescriptionDoctor={true}\r\n                          isShowLinkDetail={true}\r\n                          isShowPrice={false}\r\n                          // dataTime={dataTime}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"dt-content-right\">\r\n                      <div className=\"doctor-schedule\">\r\n                        <DoctorSchedule detailDoctorIdFromParent={item} />\r\n                      </div>\r\n                      <div className=\"doctor-extra-info\">\r\n                        <DoctorExtraInfor doctorIdFromParent={item} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n        </div>\r\n       \r\n      </div>\r\n      <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);\r\n"]},"metadata":{},"sourceType":"module"}