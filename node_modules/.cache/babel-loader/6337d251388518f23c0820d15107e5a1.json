{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\ReactFE\\\\src\\\\containers\\\\Patient\\\\VerifyEmail.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { postVerifyBookAppoiment } from \"../../services/userService\";\nimport HomeHeader from \"../HomePage/HomeHeader\";\nimport \"./VerifyEmail.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass VerifyEmail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      statusVerify: false,\n      errCode: 0\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props);\n\n    if (this.props.location && this.props.location.search) {\n      const urlParams = new URLSearchParams(this.props.location.search);\n      const token = urlParams.get(\"token\");\n      const doctorId = urlParams.get(\"doctorId\");\n      let res = await postVerifyBookAppoiment({\n        token: token,\n        doctorId: doctorId\n      });\n\n      if (res && res.errCode === 0) {\n        this.setState({\n          statusVerify: true,\n          errCode: res.errCode\n        });\n      } else {\n        this.setState({\n          statusVerify: true,\n          errCode: res && res.errCode ? res.errCode : -1\n        });\n      }\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {}\n\n  render() {\n    let {\n      statusVerify,\n      errCode\n    } = this.state;\n    console.log(\"state\", this.state);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HomeHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verify-container\",\n        children: [\" \", statusVerify === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: +errCode === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-booking\",\n            children: [\"X\\xE1c nh\\u1EADn l\\u1ECBch h\\u1EB9n th\\xE0nh c\\xF4ng ! Xin ch\\u1EDD Gmail X\\xE1c nh\\u1EADn\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-booking\",\n            children: \"L\\u1ECBch h\\u1EB9n kh\\xF4ng t\\u1ED3n t\\u1EA1i ho\\u1EB7c \\u0111\\xE3 \\u0111\\u01B0\\u1EE3c x\\xE1c nh\\u1EADn!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyEmail);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/ReactFE/src/containers/Patient/VerifyEmail.js"],"names":["React","Component","connect","postVerifyBookAppoiment","HomeHeader","VerifyEmail","constructor","props","state","statusVerify","errCode","componentDidMount","console","log","location","search","urlParams","URLSearchParams","token","get","doctorId","res","setState","componentDidUpdate","prevProps","prevState","snapshot","render","mapStateToProps","language","app","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,uBAAT,QAAwC,4BAAxC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAO,oBAAP;;;;AACA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,KADH;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;;AACA,QAAI,KAAKA,KAAL,CAAWO,QAAX,IAAuB,KAAKP,KAAL,CAAWO,QAAX,CAAoBC,MAA/C,EAAuD;AACrD,YAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,KAAKV,KAAL,CAAWO,QAAX,CAAoBC,MAAxC,CAAlB;AACA,YAAMG,KAAK,GAAGF,SAAS,CAACG,GAAV,CAAc,OAAd,CAAd;AACA,YAAMC,QAAQ,GAAGJ,SAAS,CAACG,GAAV,CAAc,UAAd,CAAjB;AACA,UAAIE,GAAG,GAAG,MAAMlB,uBAAuB,CAAC;AACtCe,QAAAA,KAAK,EAAEA,KAD+B;AAEtCE,QAAAA,QAAQ,EAAEA;AAF4B,OAAD,CAAvC;;AAIA,UAAIC,GAAG,IAAIA,GAAG,CAACX,OAAJ,KAAgB,CAA3B,EAA8B;AAC5B,aAAKY,QAAL,CAAc;AACZb,UAAAA,YAAY,EAAE,IADF;AAEZC,UAAAA,OAAO,EAAEW,GAAG,CAACX;AAFD,SAAd;AAID,OALD,MAKO;AACL,aAAKY,QAAL,CAAc;AACZb,UAAAA,YAAY,EAAE,IADF;AAEZC,UAAAA,OAAO,EAAEW,GAAG,IAAIA,GAAG,CAACX,OAAX,GAAqBW,GAAG,CAACX,OAAzB,GAAmC,CAAC;AAFjC,SAAd;AAID;AACF;AACF;;AACuB,QAAlBa,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC,CAAE;;AAE3DC,EAAAA,MAAM,GAAG;AACP,QAAI;AAAElB,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAA4B,KAAKF,KAArC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKL,KAA1B;AACA,wBACE;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,mBACG,GADH,EAEGC,YAAY,KAAK,KAAjB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAA,oBACG,CAACC,OAAD,KAAa,CAAb,gBACC;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,qHACwD,GADxD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBAKC;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAuBD;;AA5DiC;;AA+DpC,MAAMkB,eAAe,GAAIpB,KAAD,IAAW;AACjC,SAAO;AACLqB,IAAAA,QAAQ,EAAErB,KAAK,CAACsB,GAAN,CAAUD;AADf,GAAP;AAGD,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AACD,CAFD;;AAIA,eAAe9B,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { postVerifyBookAppoiment } from \"../../services/userService\";\r\nimport HomeHeader from \"../HomePage/HomeHeader\";\r\nimport \"./VerifyEmail.scss\";\r\nclass VerifyEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statusVerify: false,\r\n      errCode: 0,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    console.log(this.props);\r\n    if (this.props.location && this.props.location.search) {\r\n      const urlParams = new URLSearchParams(this.props.location.search);\r\n      const token = urlParams.get(\"token\");\r\n      const doctorId = urlParams.get(\"doctorId\");\r\n      let res = await postVerifyBookAppoiment({\r\n        token: token,\r\n        doctorId: doctorId,\r\n      });\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          statusVerify: true,\r\n          errCode: res.errCode,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          statusVerify: true,\r\n          errCode: res && res.errCode ? res.errCode : -1,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {}\r\n\r\n  render() {\r\n    let { statusVerify, errCode } = this.state;\r\n    console.log(\"state\", this.state);\r\n    return (\r\n      <>\r\n        <HomeHeader />\r\n        <div className=\"verify-container\">\r\n          {\" \"}\r\n          {statusVerify === false ? (\r\n            <div>Loading data...</div>\r\n          ) : (\r\n            <div>\r\n              {+errCode === 0 ? (\r\n                <div className=\"info-booking\">\r\n                  Xác nhận lịch hẹn thành công ! Xin chờ Gmail Xác nhận{\" \"}\r\n                </div>\r\n              ) : (\r\n                <div className=\"info-booking\">\r\n                  Lịch hẹn không tồn tại hoặc đã được xác nhận!\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyEmail);\r\n"]},"metadata":{},"sourceType":"module"}