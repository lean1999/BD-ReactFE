{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\ReactFE\\\\src\\\\containers\\\\System\\\\Admin\\\\ListPatientExam.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\nimport moment from \"moment\";\nimport { getExtraInforDoctorById, getAllListPatient } from \"../../../services/userService\";\nimport \"./ListPatientExam.scss\";\nimport { LANGUAGES } from \"../../../utils\";\nimport { FormattedMessage } from \"react-intl\";\nimport NumberFormat from \"react-number-format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ListPatientExam extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listPatient: []\n    };\n  }\n\n  async componentDidMount() {\n    let res = await getAllListPatient(\"S4\");\n    console.log(\"res\", res);\n\n    if (res && res.err === 0) {\n      this.setState({\n        listPatient: res.patientAccept.data\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n  }\n\n  render() {\n    let {\n      listPatient\n    } = this.state;\n    console.log(\"data patient\", listPatient);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 table-manage-patient-success\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Danh s\\xE1ch b\\u1EC7nh nh\\xE2n \\u0111\\xE3 kh\\xE1m :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"table table-dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"STT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Th\\u1EDDi gian\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"H\\u1ECD v\\xE0 t\\xEAn \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"\\u0110\\u1ECBa ch\\u1EC9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Gi\\u1EDBi t\\xEDnh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: listPatient && listPatient.length > 0 ? listPatient.map((item, index) => {\n              console.log(\"item\", item);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.timeTypeDataPatient.valueEn\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.patientData.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.patientData.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.patientData.genderData.valueVi\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.patientData.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tbl-content\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"NO DATA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPatientExam);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/ReactFE/src/containers/System/Admin/ListPatientExam.js"],"names":["React","Component","connect","Select","moment","getExtraInforDoctorById","getAllListPatient","LANGUAGES","FormattedMessage","NumberFormat","ListPatientExam","constructor","props","state","listPatient","componentDidMount","res","console","log","err","setState","patientAccept","data","componentDidUpdate","prevProps","prevState","snapshot","language","render","length","map","item","index","timeTypeDataPatient","valueEn","patientData","lastName","address","genderData","valueVi","email","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  getExtraInforDoctorById,\r\n  getAllListPatient,\r\n} from \"../../../services/userService\";\r\nimport \"./ListPatientExam.scss\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport NumberFormat from \"react-number-format\";\r\nclass ListPatientExam extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listPatient: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllListPatient(\"S4\");\r\n    console.log(\"res\", res);\r\n    if (res && res.err === 0) {\r\n      this.setState({\r\n        listPatient: res.patientAccept.data,\r\n      });\r\n    }\r\n  }\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { listPatient } = this.state;\r\n    console.log(\"data patient\", listPatient);\r\n    return (\r\n      <>\r\n        <div className=\"col-12 table-manage-patient-success\">\r\n          <h1> Danh sách bệnh nhân đã khám :</h1>\r\n          <table class=\"table table-dark\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">STT</th>\r\n                <th scope=\"col\">Thời gian</th>\r\n                <th scope=\"col\">Họ và tên </th>\r\n                <th scope=\"col\">Địa chỉ</th>\r\n                <th scope=\"col\">Giới tính</th>\r\n                <th scope=\"col\">Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {listPatient && listPatient.length > 0 ? (\r\n                listPatient.map((item, index) => {\r\n                  console.log(\"item\", item);\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{item.timeTypeDataPatient.valueEn}</td>\r\n                      <td>{item.patientData.lastName}</td>\r\n                      <td>{item.patientData.address}</td>\r\n                      <td>{item.patientData.genderData.valueVi}</td>\r\n                      <td>{item.patientData.email}</td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"tbl-content\">\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <h1>NO DATA</h1>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPatientExam);\r\n"]},"metadata":{},"sourceType":"module"}