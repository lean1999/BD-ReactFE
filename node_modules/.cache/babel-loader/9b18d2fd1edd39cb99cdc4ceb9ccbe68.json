{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anlnd\\\\Documents\\\\GitHub\\\\BookingDoctor\\\\ReactFE\\\\src\\\\containers\\\\System\\\\ModelUser.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { emitter } from \"../../utils/emitter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModelUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.listenToEmitter = () => {\n      emitter.on(\"EVENT_CLEAR_DATA\", () => {\n        this.setState({\n          email: \"\",\n          password: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          address: \"\",\n          phoneNumber: \"\"\n        });\n      });\n    };\n\n    this.toggle = () => {\n      this.props.toggleUserModal();\n    };\n\n    this.handleOnChangeInput = (event, id) => {\n      // this.state[id] = event.target.value;\n      // this.setState(\n      //   {\n      //     ...this.state,\n      //   },\n      //   () => {\n      //     console.log(this.state);\n      //   }\n      // );\n      // console.log(\"event:\", event.target.value, id);\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.checkValidInput = () => {\n      let isValid = true;\n      let arrInput = [\"email\", \"password\", \"firstName\", \"lastName\", \"address\", \"phoneNumber\"];\n\n      for (let i = 0; i < arrInput.length; i++) {\n        if (!this.state[arrInput[i]]) {\n          isValid = false;\n          alert(\"Missing for:\" + arrInput[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleAddNewUser = () => {\n      let isValid = this.checkValidInput();\n\n      if (isValid === true) {\n        //call API\n        this.props.createNewUser(this.state);\n      }\n\n      this.checkValidInput();\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      address: \"\",\n      phoneNumber: \"\"\n    };\n    this.listenToEmitter();\n  }\n\n  componentDidMount() {\n    console.log(\"mouting modal\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.props.isOpen,\n      toggle: () => this.toggle(),\n      className: \"modal-user-container\",\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => this.toggle(),\n        children: \"Create a new account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-user-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              value: this.state.email,\n              onChange: event => {\n                this.handleOnChangeInput(event, \"email\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: this.state.password,\n              onChange: event => {\n                this.handleOnChangeInput(event, \"password\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-user-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"FirstName\",\n              value: this.state.firstName,\n              onChange: event => {\n                this.handleOnChangeInput(event, \"firstName\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"LastName\",\n              value: this.state.lastName,\n              onChange: event => {\n                this.handleOnChangeInput(event, \"lastName\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-user-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Address\",\n              value: this.state.address,\n              onChange: event => {\n                this.handleOnChangeInput(event, \"address\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: this.state.phoneNumber,\n              placeholder: \"SDT\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"phoneNumber\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"px-3\",\n          onClick: () => this.handleAddNewUser(),\n          children: \"Saves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          className: \"px-3\",\n          onClick: () => this.toggle(),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelUser);","map":{"version":3,"sources":["C:/Users/anlnd/Documents/GitHub/BookingDoctor/ReactFE/src/containers/System/ModelUser.js"],"names":["React","Component","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","emitter","ModelUser","constructor","props","listenToEmitter","on","setState","email","password","firstName","lastName","address","phoneNumber","toggle","toggleUserModal","handleOnChangeInput","event","id","copyState","state","target","value","checkValidInput","isValid","arrInput","i","length","alert","handleAddNewUser","createNewUser","componentDidMount","console","log","render","isOpen","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { emitter } from \"../../utils/emitter\";\r\nclass ModelUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phoneNumber: \"\",\r\n    };\r\n    this.listenToEmitter();\r\n  }\r\n\r\n  listenToEmitter = () => {\r\n    emitter.on(\"EVENT_CLEAR_DATA\", () => {\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        address: \"\",\r\n        phoneNumber: \"\",\r\n      });\r\n    });\r\n  };\r\n  toggle = () => {\r\n    this.props.toggleUserModal();\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"mouting modal\");\r\n  }\r\n\r\n  handleOnChangeInput = (event, id) => {\r\n    // this.state[id] = event.target.value;\r\n    // this.setState(\r\n    //   {\r\n    //     ...this.state,\r\n    //   },\r\n    //   () => {\r\n    //     console.log(this.state);\r\n    //   }\r\n    // );\r\n    // console.log(\"event:\", event.target.value, id);\r\n\r\n    let copyState = { ...this.state };\r\n    copyState[id] = event.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n  checkValidInput = () => {\r\n    let isValid = true;\r\n    let arrInput = [\r\n      \"email\",\r\n      \"password\",\r\n      \"firstName\",\r\n      \"lastName\",\r\n      \"address\",\r\n      \"phoneNumber\",\r\n    ];\r\n    for (let i = 0; i < arrInput.length; i++) {\r\n      if (!this.state[arrInput[i]]) {\r\n        isValid = false;\r\n        alert(\"Missing for:\" + arrInput[i]);\r\n        break;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n  handleAddNewUser = () => {\r\n    let isValid = this.checkValidInput();\r\n    if (isValid === true) {\r\n      //call API\r\n      this.props.createNewUser(this.state);\r\n    }\r\n    this.checkValidInput();\r\n  };\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        toggle={() => this.toggle()}\r\n        className={\"modal-user-container\"}\r\n        size=\"lg\"\r\n      >\r\n        <ModalHeader toggle={() => this.toggle()}>\r\n          Create a new account\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"modal-user-body\">\r\n            <div className=\"input-container\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={(event) => {\r\n                  this.handleOnChangeInput(event, \"email\");\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={(event) => {\r\n                  this.handleOnChangeInput(event, \"password\");\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-user-body\">\r\n            <div className=\"input-container\">\r\n              <label>First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"FirstName\"\r\n                value={this.state.firstName}\r\n                onChange={(event) => {\r\n                  this.handleOnChangeInput(event, \"firstName\");\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"LastName\"\r\n                value={this.state.lastName}\r\n                onChange={(event) => {\r\n                  this.handleOnChangeInput(event, \"lastName\");\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-user-body\">\r\n            <div className=\"input-container\">\r\n              <label>Address</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Address\"\r\n                value={this.state.address}\r\n                onChange={(event) => {\r\n                  this.handleOnChangeInput(event, \"address\");\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Phone Number</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.phoneNumber}\r\n                placeholder=\"SDT\"\r\n                onChange={(event) => {\r\n                  this.handleOnChangeInput(event, \"phoneNumber\");\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"px-3\"\r\n            onClick={() => this.handleAddNewUser()}\r\n          >\r\n            Saves\r\n          </Button>{\" \"}\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"px-3\"\r\n            onClick={() => this.toggle()}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelUser);\r\n"]},"metadata":{},"sourceType":"module"}